CUDA is available?: False
using cuda?: False
Running EC on polestar @ 2020-11-27 20:08:47.465997 with 20 CPUs and parameters:
	 noConsolidation  =  False
	 biasOptimal  =  False
	 contextual  =  False
	 iterations  =  5
	 enumerationTimeout  =  5
	 reuseRecognition  =  False
	 ensembleSize  =  1
	 recognitionTimeout  =  60
	 helmholtzRatio  =  0.0
	 topk_use_only_likelihood  =  False
	 pseudoCounts  =  30.0
	 aic  =  1.0
	 structurePenalty  =  0.001
	 arity  =  3
	 taskBatchSize  =  2000
	 taskReranker  =  default
	 storeTaskMetrics  =  True
	 rewriteTaskMetrics  =  False
	 maximumFrontier  =  10
	 solver  =  ocaml
	 topK  =  1
	 evaluationTimeout  =  1.0
	 cuda  =  False

Currently using this much memory: 180813824
Currently using this much memory: 180813824
Using a waking task batch of size: 2000
Disabling parallelism on the Python side because we only have one job.
If you are using ocaml, there could still be parallelism.
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 0. |finished| = 0.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.509621.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 0. |finished| = 1.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.891029.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 0. |finished| = 6.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 4.500000 <= MDL < 6.000000. Timeout 3.243064.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 201. |finished| = 33.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 6.000000 <= MDL < 7.500000. Timeout 2.130384.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 201. |finished| = 0.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 7.500000 <= MDL < 9.000000. Timeout 1.391217.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 201. |finished| = 0.)
We enumerated this many programs, for each task:
	
Generative model enumeration results:
HIT 0: run w/ (lambda (SCAN_RUN $0)) ; log prior = -3.891820 ; log likelihood = 0.000000
HIT 1: look w/ (lambda (SCAN_LOOK $0)) ; log prior = -3.891820 ; log likelihood = 0.000000
HIT 2: jump w/ (lambda (SCAN_JUMP $0)) ; log prior = -3.891820 ; log likelihood = 0.000000
HIT 3: walk w/ (lambda (SCAN_WALK $0)) ; log prior = -3.891820 ; log likelihood = 0.000000
HIT 4: turn right w/ (lambda (SCAN_RTURN $0)) ; log prior = -3.891820 ; log likelihood = 0.000000
HIT 5: turn left w/ (lambda (SCAN_LTURN $0)) ; log prior = -3.891820 ; log likelihood = 0.000000
HIT 6: run after run w/ (lambda (SCAN_RUN (SCAN_RUN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 7: run twice w/ (lambda (SCAN_RUN (SCAN_RUN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 8: run and run w/ (lambda (SCAN_RUN (SCAN_RUN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 9: walk and run w/ (lambda (SCAN_WALK (SCAN_RUN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 10: run and walk w/ (lambda (SCAN_RUN (SCAN_WALK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 11: run and jump w/ (lambda (SCAN_RUN (SCAN_JUMP $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 12: jump and run w/ (lambda (SCAN_JUMP (SCAN_RUN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 13: run after jump w/ (lambda (SCAN_JUMP (SCAN_RUN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 14: look and run w/ (lambda (SCAN_LOOK (SCAN_RUN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 15: run after look w/ (lambda (SCAN_LOOK (SCAN_RUN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 16: run after walk w/ (lambda (SCAN_WALK (SCAN_RUN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 17: walk after run w/ (lambda (SCAN_RUN (SCAN_WALK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 18: run and look w/ (lambda (SCAN_RUN (SCAN_LOOK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 19: jump after run w/ (lambda (SCAN_RUN (SCAN_JUMP $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 20: look after run w/ (lambda (SCAN_RUN (SCAN_LOOK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 21: turn right after run w/ (lambda (SCAN_RUN (SCAN_RTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 22: look after jump w/ (lambda (SCAN_JUMP (SCAN_LOOK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 23: run after turn right w/ (lambda (SCAN_RTURN (SCAN_RUN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 24: walk after look w/ (lambda (SCAN_LOOK (SCAN_WALK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 25: jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 26: walk after jump w/ (lambda (SCAN_JUMP (SCAN_WALK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 27: walk and jump w/ (lambda (SCAN_WALK (SCAN_JUMP $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 28: look after look w/ (lambda (SCAN_LOOK (SCAN_LOOK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 29: run and turn left w/ (lambda (SCAN_RUN (SCAN_LTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 30: jump after walk w/ (lambda (SCAN_WALK (SCAN_JUMP $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 31: jump after look w/ (lambda (SCAN_LOOK (SCAN_JUMP $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 32: turn right and run w/ (lambda (SCAN_RTURN (SCAN_RUN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 33: jump after jump w/ (lambda (SCAN_JUMP (SCAN_JUMP $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 34: walk after walk w/ (lambda (SCAN_WALK (SCAN_WALK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 35: run left w/ (lambda (SCAN_LTURN (SCAN_RUN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 36: look after walk w/ (lambda (SCAN_WALK (SCAN_LOOK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 37: jump and jump w/ (lambda (SCAN_JUMP (SCAN_JUMP $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 38: turn left after run w/ (lambda (SCAN_RUN (SCAN_LTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 39: look and jump w/ (lambda (SCAN_LOOK (SCAN_JUMP $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 40: walk twice w/ (lambda (SCAN_WALK (SCAN_WALK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 41: run and turn right w/ (lambda (SCAN_RUN (SCAN_RTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 42: turn left and run w/ (lambda (SCAN_LTURN (SCAN_RUN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 43: look and walk w/ (lambda (SCAN_LOOK (SCAN_WALK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 44: look and look w/ (lambda (SCAN_LOOK (SCAN_LOOK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 45: run right w/ (lambda (SCAN_RTURN (SCAN_RUN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 46: jump and look w/ (lambda (SCAN_JUMP (SCAN_LOOK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 47: jump and walk w/ (lambda (SCAN_JUMP (SCAN_WALK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 48: run after turn left w/ (lambda (SCAN_LTURN (SCAN_RUN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 49: look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 50: walk and walk w/ (lambda (SCAN_WALK (SCAN_WALK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 51: walk and look w/ (lambda (SCAN_WALK (SCAN_LOOK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 52: jump and turn left w/ (lambda (SCAN_JUMP (SCAN_LTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 53: look and turn right w/ (lambda (SCAN_LOOK (SCAN_RTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 54: turn right after look w/ (lambda (SCAN_LOOK (SCAN_RTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 55: jump after turn left w/ (lambda (SCAN_LTURN (SCAN_JUMP $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 56: jump and turn right w/ (lambda (SCAN_JUMP (SCAN_RTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 57: look right w/ (lambda (SCAN_RTURN (SCAN_LOOK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 58: walk after turn left w/ (lambda (SCAN_LTURN (SCAN_WALK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 59: look and turn left w/ (lambda (SCAN_LOOK (SCAN_LTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 60: look left w/ (lambda (SCAN_LTURN (SCAN_LOOK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 61: turn left and walk w/ (lambda (SCAN_LTURN (SCAN_WALK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 62: turn left and jump w/ (lambda (SCAN_LTURN (SCAN_JUMP $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 63: jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 64: turn right and look w/ (lambda (SCAN_RTURN (SCAN_LOOK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 65: look after turn right w/ (lambda (SCAN_RTURN (SCAN_LOOK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 66: turn right after jump w/ (lambda (SCAN_JUMP (SCAN_RTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 67: walk and turn right w/ (lambda (SCAN_WALK (SCAN_RTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 68: jump after turn right w/ (lambda (SCAN_RTURN (SCAN_JUMP $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 69: walk right w/ (lambda (SCAN_RTURN (SCAN_WALK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 70: walk after turn right w/ (lambda (SCAN_RTURN (SCAN_WALK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 71: walk left w/ (lambda (SCAN_LTURN (SCAN_WALK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 72: turn right and jump w/ (lambda (SCAN_RTURN (SCAN_JUMP $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 73: turn left after jump w/ (lambda (SCAN_JUMP (SCAN_LTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 74: turn right after walk w/ (lambda (SCAN_WALK (SCAN_RTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 75: turn left after walk w/ (lambda (SCAN_WALK (SCAN_LTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 76: turn left and look w/ (lambda (SCAN_LTURN (SCAN_LOOK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 77: jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 78: look after turn left w/ (lambda (SCAN_LTURN (SCAN_LOOK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 79: turn left after look w/ (lambda (SCAN_LOOK (SCAN_LTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 80: turn right and walk w/ (lambda (SCAN_RTURN (SCAN_WALK $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 81: walk and turn left w/ (lambda (SCAN_WALK (SCAN_LTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 82: turn right after turn left w/ (lambda (SCAN_LTURN (SCAN_RTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 83: run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 84: run twice after run w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 85: turn left after turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 86: turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 87: run after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 88: turn left and turn right w/ (lambda (SCAN_LTURN (SCAN_RTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 89: turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 90: run twice and run w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 91: turn right and turn left w/ (lambda (SCAN_RTURN (SCAN_LTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 92: turn right and turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 93: turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 94: turn left and turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 95: turn left after turn right w/ (lambda (SCAN_RTURN (SCAN_LTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 96: turn right after turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 97: run and run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 98: turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN $0))) ; log prior = -5.837730 ; log likelihood = 0.000000
HIT 99: run twice after jump w/ (lambda (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 100: look and run twice w/ (lambda (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 101: jump after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 102: walk after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 103: run twice and look w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 104: run twice and walk w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 105: run twice after walk w/ (lambda (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 106: run twice after look w/ (lambda (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 107: look after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 108: walk and run twice w/ (lambda (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 109: jump and run twice w/ (lambda (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 110: run twice and jump w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 111: run and jump twice w/ (lambda (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 112: turn right and run twice w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 113: run right after run w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 114: run twice and turn right w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 115: run and run right w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 116: run after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 117: run twice after turn left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 118: turn left after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 119: run after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 120: walk twice and run w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 121: run and run left w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 122: run twice and turn left w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 123: look twice and run w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 124: run and look twice w/ (lambda (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 125: look twice after run w/ (lambda (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 126: jump twice after run w/ (lambda (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 127: walk twice after run w/ (lambda (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 128: turn right after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 129: run right and run w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 130: run and walk twice w/ (lambda (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 131: run after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 132: turn left and run twice w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 133: run left and run w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 134: run twice after turn right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 135: run after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 136: run left after run w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 137: run after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 138: jump twice and run w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 139: run and look right w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 140: walk after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 141: walk twice and jump w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 142: look twice and look w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 143: walk right after run w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 144: jump right and run w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 145: run after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 146: jump left and run w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 147: look twice and jump w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 148: look after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 149: run after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 150: walk twice after jump w/ (lambda (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 151: run left and look w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 152: jump and jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 153: run left after walk w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 154: walk twice after walk w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 155: walk right and run w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 156: jump twice after jump w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 157: jump thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 158: jump twice and walk w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 159: run right after jump w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 160: look right and run w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 161: run and walk right w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 162: run and walk left w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 163: jump after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 164: jump and run left w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 165: walk after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 166: run left and jump w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 167: jump and walk twice w/ (lambda (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 168: jump after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 169: look after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 170: look twice after look w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 171: run right and jump w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 172: run right after look w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 173: jump after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 174: walk after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 175: run left after look w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 176: walk and run left w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 177: jump twice after walk w/ (lambda (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 178: look twice after jump w/ (lambda (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 179: look and look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 180: walk after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 181: run after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 182: walk left after run w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 183: look and run left w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 184: walk left and run w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 185: look twice after walk w/ (lambda (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 186: jump and run right w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 187: look thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 188: look left and run w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 189: jump left after run w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 190: look and walk twice w/ (lambda (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 191: jump after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 192: jump twice after look w/ (lambda (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 193: look twice and walk w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 194: look after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 195: walk and look twice w/ (lambda (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 196: walk and walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 197: look and jump twice w/ (lambda (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 198: jump and look twice w/ (lambda (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 199: walk twice and look w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 200: run and look left w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 201: jump after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 202: jump twice and jump w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 203: run after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 204: walk twice after look w/ (lambda (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 205: walk after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 206: look right after run w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 207: run left after jump w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 208: run and jump right w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 209: walk thrice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 210: run left and walk w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 211: jump twice and look w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 212: look left after run w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 213: look and run right w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 214: jump right after run w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 215: run after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 216: run right and walk w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 217: walk and jump twice w/ (lambda (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 218: run right after walk w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 219: walk twice and walk w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 220: look after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 221: run and jump left w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 222: run right and look w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 223: look after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 224: walk and run right w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 225: run after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 226: jump left and walk w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 227: look right after jump w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 228: run and turn opposite left w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 229: walk and jump left w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 230: run left after turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 231: run right after turn left w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 232: jump left and jump w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 233: turn opposite right and run w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 234: look after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 235: turn right after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 236: look after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 237: look left and jump w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 238: look and look left w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 239: run right and turn left w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 240: jump right and jump w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 241: look after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 242: walk after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 243: jump twice after turn right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 244: jump and jump right w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 245: look after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 246: look right after look w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 247: turn right and jump twice w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 248: look left and look w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 249: jump after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 250: turn opposite left and run w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 251: turn left twice after run w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 252: turn right after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 253: run left and turn right w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 254: walk and walk left w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 255: jump after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 256: jump and look left w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 258: look right after walk w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 259: turn left after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 260: run right and turn right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 261: look and walk left w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 262: turn right twice and run w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 263: walk right after walk w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 264: look left and walk w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 265: turn right and walk twice w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 266: walk left and walk w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 267: turn left and run right w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 270: turn left twice and run w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 271: walk left after look w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 272: turn right and look twice w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 273: turn left after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 274: turn right twice after run w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 275: run opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 276: jump after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 277: jump twice after turn left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 278: jump after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 279: run after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 280: walk after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 281: walk twice after turn left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 282: look and look right w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 283: run after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 284: look and walk right w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 285: look right and walk w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 286: jump left after look w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 287: jump left after jump w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 288: turn left and walk twice w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 289: look twice and turn left w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 290: jump after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 291: walk and walk right w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 292: run and turn right twice w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 293: run opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 294: jump left after walk w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 295: walk left after walk w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 296: look left after look w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 297: run and turn opposite right w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 298: turn opposite right after run w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 299: look twice after turn right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 300: turn right after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 301: run right after turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 302: look after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 303: walk and look left w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 304: look and jump left w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 305: look right and jump w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 307: look right and look w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 308: look left after jump w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 309: turn left and jump twice w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 310: turn right after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 312: turn left after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 313: turn left after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 314: turn right after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 315: walk right and look w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 316: walk left and jump w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 317: walk twice and turn right w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 318: jump right and walk w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 319: jump and jump left w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 320: jump right and look w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 321: jump and walk right w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 322: walk left after jump w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 323: walk twice and turn left w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 324: jump right after look w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 325: run and turn left twice w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 326: turn opposite left after run w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 327: jump and look right w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 328: walk left and look w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 329: jump and walk left w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 330: walk twice after turn right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 331: walk after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 332: jump right after walk w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 333: walk right and jump w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 334: walk right after look w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 335: walk right and walk w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 336: run left after turn right w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 337: run left and turn left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 338: jump twice and turn left w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 339: walk after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 340: jump left and look w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 341: turn left after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 342: look twice after turn left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 343: look and jump right w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 344: look left after walk w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 345: walk right after jump w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 346: turn right and run right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 348: run after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 349: walk and look right w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 350: look twice and turn right w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 351: walk after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 352: jump right after jump w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 353: turn left and run left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 354: look after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 355: walk after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 356: jump after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 357: turn left and look twice w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 358: run after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 359: turn right and run left w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 360: walk and jump right w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 361: jump twice and turn right w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 362: turn left and jump left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 363: turn right and jump right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 364: jump opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 365: turn left and walk right w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 367: turn opposite left and walk w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 368: look left and turn left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 369: jump and turn opposite left w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 370: jump after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 371: jump right and turn right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 372: turn opposite left and look w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 374: walk and turn opposite left w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 375: jump left after turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 376: walk right after turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 377: look left after turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 378: turn right after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 379: turn right twice and walk w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 380: walk and turn right twice w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 381: turn opposite right and jump w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 382: turn left twice after walk w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 384: jump after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 385: walk after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 386: look right after turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 387: jump right after turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 388: walk and turn opposite right w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 389: walk left after turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 390: turn opposite left after jump w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 391: walk after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 392: look right and turn right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 393: turn left and jump right w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 394: turn right and walk left w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 395: turn left after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 396: turn right after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 397: turn opposite right and walk w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 398: turn right after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 399: jump opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 400: turn left after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 401: turn left and walk left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 402: turn left after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 403: jump after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 404: turn opposite left after walk w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 405: turn left after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 406: jump and turn left twice w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 407: jump left and turn right w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 408: walk right and turn left w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 409: turn opposite left after look w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 410: look after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 411: walk left after turn right w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 412: turn opposite left and jump w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 413: jump left after turn right w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 414: turn right twice and jump w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 415: look and turn opposite right w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 416: look right after turn left w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 417: turn right twice and look w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 418: look opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 419: walk after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 420: jump after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 421: look and turn left twice w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 422: look after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 423: turn right after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 424: turn right twice after look w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 425: turn right twice after walk w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 427: jump and turn opposite right w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 428: look left and turn right w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 429: turn right and look right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 430: turn left twice after look w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 432: jump right and turn left w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 435: jump and turn right twice w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 436: turn right after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 437: turn left after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 438: turn right twice after jump w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 441: look right and turn left w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 442: jump left and turn left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 443: look opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 444: turn left after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 445: walk left and turn right w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 446: walk opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 448: look and turn right twice w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 449: turn right and look left w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 450: turn opposite right and look w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 451: look after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 452: turn opposite right after walk w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 453: turn left twice and jump w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 454: look left after turn right w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 455: turn opposite right after look w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 456: walk after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 457: look after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 458: walk left and turn left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 459: turn left and look left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 460: look and turn opposite left w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 461: turn opposite right after jump w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 462: turn right after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 463: turn right and jump left w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 464: turn left twice and walk w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 465: turn right and walk right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 466: turn left twice and look w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 467: walk and turn left twice w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 468: jump right after turn left w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 469: walk opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 471: turn left and look right w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 472: walk right and turn right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 474: walk right after turn left w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 475: turn left twice after jump w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 477: turn left thrice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 479: turn left and turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 480: turn left and turn opposite right w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 482: turn right and turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 484: turn right after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 485: turn right twice and turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 487: turn left after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 489: turn left and turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 491: turn left twice after turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 492: turn right and turn left twice w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 493: turn left after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 498: turn opposite right and turn left w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 500: turn right after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 501: turn right twice and turn left w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 505: turn left twice and turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 508: turn opposite right after turn left w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 509: turn opposite left and turn right w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 510: turn right after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 512: turn left after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 513: turn opposite left after turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 519: turn right and turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 520: turn left after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 521: turn right twice after turn left w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 522: turn opposite right and turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 523: turn right twice after turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 524: turn left twice after turn right w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 525: turn opposite left and turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 526: turn left twice and turn right w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 530: turn opposite left after turn right w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 533: turn left and turn right twice w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 534: turn right and turn opposite left w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 535: turn right thrice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 536: turn opposite right after turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
HIT 537: turn right after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN $0)))) ; log prior = -7.783641 ; log likelihood = 0.000000
Hits 492/2000 tasks
Average description length of a program solving a task: 7.388130 nats
Generative model average:  3 sec.	median: 4 	max: 4 	standard deviation 1
Currently using this much memory: 193970176
Frontiers discovered top down: 492
Total frontiers: 492
Using an ensemble size of 1. Note that we will only store and test on the best recognition model.
Currently using this much memory: 194387968
(ID=0): Training a recognition model from 492 frontiers, 0% Helmholtz, feature extractor ScanFeatures.
(ID=0): Got 0 Helmholtz frontiers - random Helmholtz training? : True
(ID=0): Contextual? False
(ID=0): Bias optimal? False
(ID=0): Aux loss? False (n.b. we train a 'auxiliary' classifier anyway - this controls if gradients propagate back to the future extractor)
(ID=0):  Epoch 1 Loss 6.128418552681683
(ID=0):  	vs MDL (w/o neural net) 7.388130403323799
(ID=0):  	492 cumulative gradient steps. 461.294776 steps/sec
(ID=0):  	6-way auxiliary classification loss 0.6777170588209377
(ID=0):   Trained recognition model in 60.84067940711975 seconds
Currently using this much memory: 197775360
Trained an ensemble of 1 recognition models, now enumerating.
Enumerating from recognizer 0 of 1
Evaluated recognition model in 0.7 seconds
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)

	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.872016.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.792298.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.734444.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.678877.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.625175.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.573925.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.464460.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.528504.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.419479.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.370045.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.320094.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.271713.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.222445.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.116142.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.179664.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.074342.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.024910.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.974793.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927816.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.877109.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.911303.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.922463.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927758.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931547.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931170.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.932871.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.937664.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.936368.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.936601.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.936674.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.936751.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.936218.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.936573.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.936344.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.933981.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.933755.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.934084.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.933912.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.933514.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.932772.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930401.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926732.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.923074.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.921789.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.919823.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.916270.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.914012.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.912311.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.911863.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.911548.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.911662.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.911531.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.911375.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.914524.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.913630.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.913247.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.913599.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.913370.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.913942.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.916668.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.919353.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.921314.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.921240.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.924292.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927252.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.929737.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931758.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931037.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931188.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931039.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930760.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930650.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931065.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930689.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930216.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930138.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930266.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.929820.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.929771.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930155.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.932972.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.932004.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931902.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930736.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927621.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.924221.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.921750.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.918118.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.913711.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.908715.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.905675.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.902614.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.902171.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.902494.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.902478.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.899535.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.899603.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.899240.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.898660.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.898654.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.898973.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.899489.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.899947.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.904300.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.907563.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.910230.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.913051.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.917479.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.921426.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.925608.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927370.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927105.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927468.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927253.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.929924.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930102.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926239.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.925749.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.925607.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.925027.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.924784.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.924879.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.924686.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.924491.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.923573.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.915792.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.914735.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.909598.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.905259.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.900408.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.894268.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.890358.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.887397.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.881855.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.878112.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.882656.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.883367.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.883720.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.881468.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.881554.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.881317.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.881058.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.880724.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.878815.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.885479.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.886329.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.892344.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.895707.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.902316.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.907066.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.910534.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.914991.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.919880.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.922921.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.923206.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.922647.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.922575.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926196.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.925410.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.925463.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926213.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.923841.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927575.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927522.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928148.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928053.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928314.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928750.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928192.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928189.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.925951.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.922904.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.917455.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.912691.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.908671.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.906235.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.901665.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.898683.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.898588.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.898183.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.900747.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.900523.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.900440.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.900566.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.900949.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.901065.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.900571.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.901047.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.900959.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.902851.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.905747.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.912340.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.915169.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.919665.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.922917.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927927.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930514.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930618.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928393.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928430.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928220.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928167.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928630.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928118.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928221.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928505.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928633.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928484.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926461.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926127.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926418.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926462.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926643.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.925896.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.923481.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.920508.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.914878.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.914093.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.910016.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.907773.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.902916.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.900416.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.899652.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.899282.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.898949.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.894933.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.894106.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.897062.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.897010.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.896820.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.896693.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.897041.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.897524.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.899404.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.902527.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.909029.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.912312.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.915551.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.918615.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.924115.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.925980.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926718.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927300.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927392.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.932466.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.932456.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.932543.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.932235.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.932468.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.932347.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931933.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931366.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930153.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928915.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927892.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927867.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927485.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.921476.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.916983.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.910903.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.905018.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.901284.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.898483.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.892516.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.889408.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.889172.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.889096.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.888972.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.889112.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.889453.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.890120.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.890700.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.892089.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.892689.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.892989.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.892613.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.899087.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.902608.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.908896.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.913048.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.915781.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.918639.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.924440.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927477.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927809.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928149.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927895.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928071.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928043.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927871.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927986.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927654.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927738.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927182.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927492.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927669.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927789.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928135.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.929304.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.929872.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926792.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.924788.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.922838.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.918210.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.915438.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.909855.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.900979.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.894955.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.894334.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.893985.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.894318.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.894522.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.894776.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.894900.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.894803.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.894549.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.894360.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.893892.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.893985.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.897200.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.899753.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.901326.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.906123.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.908762.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.914936.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.923044.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930296.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930386.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930642.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930403.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930638.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930942.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931186.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931281.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930017.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928771.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926833.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926840.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926363.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926135.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926317.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926421.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.924312.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.920511.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.917707.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.913222.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.909296.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.906757.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.902328.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.899332.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.897405.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.896892.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.895272.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.895556.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.897347.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.900243.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.899849.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.899757.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.900435.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.900024.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.899786.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.900195.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.903126.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.905738.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.910537.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.913924.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.917120.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.922507.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.924277.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926423.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926249.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928082.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928665.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.929030.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.929068.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928624.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.929024.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928649.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928887.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.929037.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.929648.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930615.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930665.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931449.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931319.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930687.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.925611.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.921726.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.919216.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.912807.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.911193.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.907223.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.903514.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.903409.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.903828.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.903833.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.904083.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.904349.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.904528.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.904712.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.904938.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.904916.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.905199.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.905451.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.906072.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.911998.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.915262.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.918173.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.924939.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927093.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931968.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.935837.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.935928.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.935808.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.935992.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.936114.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.935799.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.933603.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.933564.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.933490.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.933691.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.933180.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.933293.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.933144.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.932329.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.932307.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.932956.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.932624.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.932497.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931555.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926849.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.920521.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.915981.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.913008.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.910514.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.905697.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.904676.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.904542.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.904498.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.904730.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.904915.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.904715.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.904887.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.905062.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.902979.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.902089.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.902446.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.902302.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.902980.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.907567.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.914044.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.917986.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.921160.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.923311.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928987.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931322.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931265.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931439.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931501.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931096.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931361.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931256.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931330.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.933006.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.934175.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.934189.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.934198.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.934844.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.935013.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.934863.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.934281.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.933860.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931184.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.925689.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.922574.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.920553.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.917311.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.911852.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.906300.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.902548.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.902313.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.901756.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.901541.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.901818.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.901566.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.901094.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.900399.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.900299.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.899813.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.900229.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.900614.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.902990.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.909170.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.911889.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.915321.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.918487.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.923400.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.929543.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.932444.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931383.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931510.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931438.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931200.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.930577.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.931118.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928522.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928602.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928828.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928535.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928443.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928169.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928302.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927830.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.927810.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.928173.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.926637.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.923654.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.919951.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.918049.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.916306.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.913675.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.910709.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.780875.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.700670.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.645741.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.589877.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.535630.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.483162.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.370886.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.434311.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.325137.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.275465.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.225585.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.177219.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.108855.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.972373.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.007650.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.874496.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.796107.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.716859.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.640947.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.561642.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.578419.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.589452.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.594013.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.557586.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.526765.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.499362.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.472719.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.439876.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.408536.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.375954.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.342027.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.349442.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.381700.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.410511.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.436497.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.464863.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.494992.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.526579.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.557935.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.578451.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.576595.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.573114.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.601514.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.632632.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.662885.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.691455.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.720943.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.751109.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.783171.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.816133.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.825357.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.827112.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.830030.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.837167.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.839690.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.838312.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.839324.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.838895.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.839372.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.841637.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.844402.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.848975.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.848819.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.851683.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.853614.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.856074.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.857816.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.856927.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.857086.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.857413.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.857510.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.854562.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.851429.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.847310.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.842940.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.838774.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.835083.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.830163.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.826312.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.826239.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.828019.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.826787.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.826075.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.825297.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.822123.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.818575.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.816505.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.812553.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.791557.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.754232.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.721863.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.690007.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.651759.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.655593.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.659271.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.661602.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.665160.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.669115.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.667525.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.668744.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.669603.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.670315.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.669581.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.673482.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.675805.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.675362.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.674128.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.688553.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.725456.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.761745.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.794678.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.830760.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.832194.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.829080.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.828027.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.825691.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.819579.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.816682.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.816252.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.815213.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.814977.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.816374.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.817070.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.817565.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.815922.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.812814.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.812883.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.807810.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.803632.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.798889.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.794860.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.794902.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.795257.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.794055.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.793204.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.801865.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.805207.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.804967.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.803052.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.803310.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.802777.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.802038.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.801440.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.802247.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.808949.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.810114.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.816144.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.819555.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.825564.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.830099.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.833566.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.838026.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.842693.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.844677.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.840652.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.837175.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.834798.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.834428.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.829294.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.825921.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.824640.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.822091.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.825699.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.826061.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.826613.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.826369.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.826419.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.827410.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.828177.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.829446.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.827449.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.824726.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.819439.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.819789.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.818560.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.817035.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.813437.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.814511.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.819036.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.821218.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.823117.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.823045.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.823222.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.823174.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.820172.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.819941.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.818951.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.819199.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.819095.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.820896.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.823256.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.830400.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.833589.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.838017.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.841138.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.849054.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.848555.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.842783.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.835082.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.831174.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.826994.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.823349.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.821987.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.825080.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.824188.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.824609.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.824713.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.823431.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.821427.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.821496.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.821933.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.820397.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.820651.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.819904.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.818058.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.818602.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.817071.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.823837.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.821420.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.823247.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.821642.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.820878.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.820569.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.819858.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.820376.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.816267.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.813566.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.816457.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.816169.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.815832.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.817014.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.817412.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.818145.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.820053.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.823325.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.829790.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.832968.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.833864.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.836062.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.838730.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.837491.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.835798.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.835249.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.833661.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.836093.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.835152.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.835211.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.835010.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.835121.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.835232.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.834881.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.834393.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.833188.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.831928.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.830764.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.831110.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.834318.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.828596.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.826967.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.824506.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.821512.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.820113.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.819020.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.815786.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.815902.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.816725.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.816297.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.816582.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.816760.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.817261.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.818475.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.819285.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.817965.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.818182.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.818390.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.817999.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.824659.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.828345.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.834160.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.838342.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.841338.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.843540.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.846708.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.847018.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.846073.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.844295.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.841390.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.837018.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.833552.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.831026.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.831043.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.833103.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.833266.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.830047.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.830109.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.830169.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.830162.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.813524.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.798744.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.798709.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.795795.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.795409.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.795830.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.793004.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.794635.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.791704.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.787166.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.783068.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.785674.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.785415.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.785905.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.786446.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.790867.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.785621.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.777726.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.774465.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.784571.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.803992.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.803202.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.805129.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.805943.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.807647.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.805794.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.796745.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.785144.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.777087.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.769822.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.760000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.752165.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.744607.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.743623.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.742708.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.743914.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.751931.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.751890.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.752282.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.750748.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.751281.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.751022.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.750904.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.750423.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.755265.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.762327.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.775181.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.788810.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.800448.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.805232.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.807636.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.805832.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.803461.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.801227.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.802909.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.800532.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.801652.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.803374.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.805685.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.804840.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.804085.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.804902.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.804473.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.803953.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.805149.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.806925.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.809242.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.811475.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.809168.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.810538.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.816948.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.813274.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.812994.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.806933.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.807105.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.803436.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.803621.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.803891.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.802470.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.802381.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.800792.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.799812.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.798330.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.797609.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.798231.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.797472.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.800002.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.804688.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.807702.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.770800.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.741658.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.739654.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.735700.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.738312.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.739887.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.735548.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.736020.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.738922.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.741746.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.743952.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.746607.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.745634.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.748698.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.749244.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.750622.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.751281.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.752899.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.755287.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.792410.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.826841.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.834024.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.834392.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.829593.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.827148.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.826931.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.822424.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.818269.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.818309.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.818055.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.816840.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.818711.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.818392.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.819125.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.819118.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.818264.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.814050.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.813861.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.812799.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.812849.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.815633.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.820879.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.827798.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.835079.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.835416.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.833459.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.833023.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.828657.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.826327.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.822016.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.821750.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.821851.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.819268.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.819790.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.819976.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.824631.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.824902.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.825301.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.827134.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.825063.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.826682.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.826342.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.827588.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.830165.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.833675.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.834932.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.836335.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.833564.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.836680.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.834213.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.829223.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.831846.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.831299.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.830991.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.830815.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.830186.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.829617.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.831463.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.833255.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.833332.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.833893.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.834304.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.835631.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.838294.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.837904.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.840995.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.841036.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.838633.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.838515.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.842027.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.839507.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.834490.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.826396.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.820477.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.820210.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.820401.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.819762.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.820333.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.820266.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.818733.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.817973.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.818136.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.817669.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.821069.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.821971.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.826788.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.829951.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.829903.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.832093.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.832358.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.834654.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.839654.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.840656.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.837513.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.837481.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.837655.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.837112.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.836509.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.837337.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.835522.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.834708.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.834545.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.834239.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.834193.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.834099.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.836752.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.839233.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.841134.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.845368.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.846210.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.847355.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.845618.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.847069.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.845510.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.842236.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.839320.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 2.709369.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 2.629134.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 2.574210.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 2.518523.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 2.464263.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 2.411672.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 2.298775.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 2.362332.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 2.253484.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 2.203799.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 2.153303.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 2.104668.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 2.034815.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.895362.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.927876.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.791677.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.709575.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.628177.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.547709.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.464055.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.478024.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.489077.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.493622.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.456598.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.425844.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.398487.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.371936.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.338552.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.306633.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.273784.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.240200.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.248159.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.282928.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.314142.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.344018.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.375498.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.408288.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.442785.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.477670.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.498626.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.496323.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.492669.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.521637.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.552933.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.582416.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.610815.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.640109.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.670432.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.702856.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.735937.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.745392.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.746690.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.749325.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.756424.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.758513.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.756705.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.753355.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.749224.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.747206.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.745382.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.745447.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.746213.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.743320.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.743986.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.745753.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.748605.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.748840.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.748171.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.748068.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.747888.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.748376.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.742286.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.738298.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.734808.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.730134.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.729475.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.727141.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.726428.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.726716.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.727669.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.731563.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.734051.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.736255.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.734172.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.731200.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.728887.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.726523.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.722366.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.701827.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.664731.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.635377.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.603600.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.565787.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.569234.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.572614.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.578276.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.581849.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.585914.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.586790.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.586921.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.585331.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.583738.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.580045.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.577066.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.576858.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.573067.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.571645.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.585275.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.621486.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.657116.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.689671.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.725365.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.726614.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.723949.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.722327.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.719623.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.713389.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.710595.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.711634.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.711886.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.712601.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.715541.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.720938.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.724265.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.725998.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.721512.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.722110.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.717424.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.713615.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.708998.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.705841.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.705792.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.706372.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.705358.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.704736.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.713647.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.716859.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.716589.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.717638.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.718697.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.719021.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.716279.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.712841.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.710329.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.714229.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.711354.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.711910.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.711196.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.716968.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.721330.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.724112.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.728507.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.733186.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.735025.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.731234.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.727370.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.724552.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.723597.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.718217.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.714871.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.715300.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.716042.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.722669.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.726868.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.731312.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.735393.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.740853.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.742997.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.744095.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.745559.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.743809.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.740991.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.735805.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.735209.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.733700.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.731099.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.728266.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.728623.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.733316.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.735636.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.737291.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.737058.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.737159.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.734879.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.728048.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.723999.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.718008.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.715734.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.714609.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.713983.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.714983.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.721821.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.725371.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.731227.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.735766.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.743664.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.743794.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.737903.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.730286.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.726596.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.722455.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.718422.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.719009.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.726117.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.727196.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.731741.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.734645.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.732856.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.731440.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.733156.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.734074.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.732729.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.732835.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.731998.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.729997.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.730356.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.728871.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.735804.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.733607.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.734342.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.733143.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.733253.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.732919.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.734532.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.735519.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.729526.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.726730.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.727149.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.724402.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.720052.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.717201.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.713905.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.711418.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.712492.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.715900.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.722710.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.725634.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.726257.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.729241.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.731803.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.730373.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.728346.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.727935.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.726159.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.729893.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.731251.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.734122.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.736749.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.740865.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.744742.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.748204.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.750711.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.750362.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.749218.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.746949.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.746718.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.748291.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.742062.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.740453.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.738004.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.734966.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.733248.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.731366.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.727496.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.727759.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.728214.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.727793.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.727932.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.726166.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.724407.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.722461.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.719529.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.714646.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.711533.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.709179.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.709329.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.716382.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.720105.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.725717.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.729987.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.733393.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.736104.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.740120.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.739208.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.739079.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.736992.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.734393.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.731471.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.731024.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.731384.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.735399.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.741130.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.744090.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.742029.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.744407.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.744527.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.744838.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.728279.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.713659.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.714077.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.710898.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.710376.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.712058.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.708626.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.710737.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.707515.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.703131.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.698852.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.701357.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.701389.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.698150.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.697960.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.699133.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.690649.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.678248.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.670948.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.677058.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.694209.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.692977.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.694874.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.695590.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.697331.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.696002.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.687018.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.675547.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.667248.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.659571.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.649919.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.642120.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.638417.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.640200.
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.643450.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.646979.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.659615.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.663968.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.667954.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.669434.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.669145.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.668863.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.668705.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.668078.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.673158.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.679981.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.692957.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.706637.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.718528.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.723377.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.725876.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.724315.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.721709.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.719745.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.721513.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.718311.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.716737.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.715727.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.714976.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.710788.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.707514.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.706117.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.701851.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.700597.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.701659.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.703813.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.705760.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.705872.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.703051.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.704342.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.710030.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.706375.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.706025.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.699659.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.700180.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.698536.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.701896.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.705526.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.708540.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.711471.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.712080.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.714886.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.714362.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.713430.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.713477.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.713267.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.718136.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.722273.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.725349.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.688991.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.659976.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.658203.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.654714.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.657384.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.657978.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.650846.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.650516.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.652075.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.651758.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.651755.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.649784.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.644395.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.645179.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.644057.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.639781.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.637231.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.639144.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.641462.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.678460.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.710709.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.717678.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.717677.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.712713.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.711199.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.714753.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.710003.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.705728.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.701519.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.701709.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.704900.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.710945.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.710990.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.714846.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.718782.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.722374.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.717876.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.717889.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.717091.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.719762.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.721109.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.726727.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.733559.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.740538.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.740265.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.738314.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.738012.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.740711.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.740633.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.736776.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.736405.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.739505.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.734601.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.732651.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.729815.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.731766.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.729398.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.726592.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.725567.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.721723.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.722108.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.722303.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.723423.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.726555.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.729970.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.731358.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.732552.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.728951.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.731514.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.728127.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.722853.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.727205.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.728742.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.731840.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.734864.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.736409.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.737579.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.743024.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.747707.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.747973.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.748405.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.749322.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.750570.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.753177.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.753095.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.756188.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.756398.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.753550.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.754184.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.757869.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.755704.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.751178.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.742610.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.736711.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.734274.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.733409.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.728950.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.726152.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.723301.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.717583.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.712753.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.712821.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.712244.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.715368.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.716308.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.721198.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.725848.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.725826.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.727843.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.728338.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.730143.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.735498.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.736498.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.734770.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.734902.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.738942.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.741942.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.744420.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.749452.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.751606.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.751646.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.751476.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.751477.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.751504.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.751109.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.753639.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.756632.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.758713.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.762620.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.763866.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.764914.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.763331.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.765107.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.765944.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.762649.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.760072.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 1.628122.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 1.544820.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 1.487713.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 1.428669.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 1.368055.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 1.310551.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 1.191159.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 1.251089.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 1.141507.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 1.090647.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 1.039484.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.990682.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.920329.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.780856.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.812603.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.648738.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.533207.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.510614.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.537208.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.567055.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.603062.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.635971.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.646073.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.647072.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.650152.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.657578.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.659339.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.660223.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.654441.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.650297.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.648149.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.648573.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.652437.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.655227.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.655608.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.657083.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.662103.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.667597.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.668724.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.668148.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.667782.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.665926.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.667204.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.660600.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.655642.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.651736.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.646657.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.649754.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.645806.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.644430.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.644464.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.645466.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.649621.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.651324.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.653855.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.649863.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.643557.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.639458.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.632107.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.624179.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.600697.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.561842.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.531583.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.501763.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.537321.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.553096.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.581955.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.622966.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.628306.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.621688.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.618443.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.620672.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.619657.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.620367.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.621951.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.626461.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.628310.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.625433.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.616869.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.614330.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.605481.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.601958.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.595120.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.591561.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.591351.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.593131.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.592115.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.591474.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.599175.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.600484.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.598750.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.599198.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.600897.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.595035.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.582989.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.572062.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.564698.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.564386.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.558225.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.554388.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.550447.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.552760.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.552172.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.547955.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.546026.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.543492.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.535902.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.527661.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.520751.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.507246.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.502872.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.508955.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.516037.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.517757.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.520545.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.522116.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.519129.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.516790.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.513808.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.511834.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.507419.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.506428.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.503587.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.503511.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.508999.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.513500.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.534439.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.540413.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.540393.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.543151.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.545524.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.546208.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.543490.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.539009.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.520932.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.500725.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.525952.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.536528.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.536793.
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.539201.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.543601.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.550988.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.555073.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.565783.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.573467.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.583146.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.591189.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.601493.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.612106.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.621739.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.629617.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.635560.
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.642352.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.644474.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.647011.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.650486.
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.647416.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.650228.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.652481.
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.648083.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.645672.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.646135.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.642292.
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.643119.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.641698.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.637825.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.606142.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.573691.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.541772.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.510176.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.504451.
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.535769.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.565907.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.590228.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.618862.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.643254.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.641780.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.632117.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.627633.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.620749.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.607716.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.526265.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.527594.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.523086.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.593117.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.601907.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.619184.
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.625662.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.630656.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.636183.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.636245.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.636386.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.636235.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.635924.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.643926.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.651302.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.664544.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.678448.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.690573.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.695815.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.700042.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.698534.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.696287.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.694202.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.696112.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.693230.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.693614.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.693137.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.647617.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.615355.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.608232.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.602758.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.594561.
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.590760.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.589092.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.589820.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.591482.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.591436.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.588082.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.587990.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.593126.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.588421.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.588424.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.581682.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.582123.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.580431.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.583823.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.628534.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.662986.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.669602.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.674251.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.681347.
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.683912.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.686535.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.687949.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.688066.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.693504.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.697917.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.702266.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.665344.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.638198.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.636390.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.633139.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.635711.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.636596.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.628968.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.625342.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.625897.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.625503.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.624655.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.622229.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.615428.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.614110.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.609843.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.603897.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.597626.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.595061.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.593486.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.630962.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.662803.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.669656.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.669517.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.664562.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.663213.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.666654.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.662287.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.657061.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.620602.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.590782.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.563901.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.540530.
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.512746.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.503620.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.510537.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.509683.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.511082.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.512784.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.543693.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.575046.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.602075.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.616576.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.648596.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.672696.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.690489.
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.687067.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.685886.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.682454.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.677569.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.676317.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.672417.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.634151.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.604249.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.574604.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.548233.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.522016.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.504611.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.536546.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.568043.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.599292.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.631789.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.662289.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.695500.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.725541.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.736711.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.738011.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.741325.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.739182.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.735392.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.724739.
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.718033.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.709287.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.703382.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.693900.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.687330.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.683029.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.674239.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.668469.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.669617.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.668806.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.669261.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.669364.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.673607.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.678267.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.678478.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.681473.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.679725.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.680221.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.687680.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.690917.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.696143.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.700070.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.710121.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.716733.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.721611.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.730762.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.733653.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.730703.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.729496.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.690310.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.659482.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.630086.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.603398.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.576462.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.542646.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.535441.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.535921.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.535690.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.532148.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.533273.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.533572.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.529067.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 0.524636.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
We enumerated this many programs, for each task:
	 [15, 18, 14, 14, 16, 15, 16, 15, 16, 63, 63, 85, 85, 70, 63, 64, 63, 63, 63, 70, 64, 88, 84, 88, 31, 12, 31, 31, 12, 31, 31, 84, 34, 15, 11, 31, 31, 15, 36, 36, 11, 34, 31, 31, 12, 31, 36, 31, 36, 11, 10, 31, 31, 32, 36, 31, 36, 31, 32, 32, 30, 80, 31, 105, 32, 36, 113, 97, 113, 88, 96, 84, 36, 31, 96, 32, 32, 63, 80, 80, 97, 80, 106, 21, 22, 16, 16, 22, 85, 17, 22, 85, 19, 18, 16, 106, 18, 22, 20, 127, 105, 127, 106, 105, 106, 106, 105, 105, 106, 120, 120, 120, 113, 113, 113, 113, 105, 127, 127, 127, 106, 93, 127, 105, 105, 105, 127, 106, 120, 113, 106, 93, 127, 93, 120, 113, 93, 106, 120, 120, 20, 106, 20, 111, 112, 111, 117, 113, 105, 121, 37, 40, 20, 40, 20, 34, 19, 17, 106, 39, 120, 34, 40, 39, 117, 111, 117, 106, 39, 121, 16, 112, 121, 19, 105, 40, 40, 37, 36, 20, 37, 40, 40, 40, 40, 105, 112, 15, 40, 39, 31, 37, 36, 31, 40, 31, 15, 113, 113, 31, 40, 36, 20, 39, 105, 40, 121, 39, 112, 14, 40, 113, 40, 120, 39, 40, 34, 106, 111, 15, 16, 117, 120, 36, 34, 39, 39, 39, 88, 39, 36, 116, 118, 126, 92, 113, 116, 113, 92, 116, 88, 39, 120, 127, 88, 120, 93, 127, 92, 88, 88, 127, 127, 116, 85, 39, 113, 22, 116, 116, 34, 121, 113, 106, 121, 113, 85, 116, 38, 22, 127, 120, 127, 36, 120, 85, 120, 113, 112, 127, 106, 105, 93, 119, 116, 116, 112, 97, 105, 120, 97, 105, 113, 96, 120, 106, 92, 126, 119, 127, 116, 88, 93, 121, 113, 116, 36, 93, 112, 113, 127, 38, 105, 113, 88, 116, 39, 113, 118, 118, 116, 118, 120, 105, 39, 127, 88, 116, 121, 39, 113, 106, 113, 118, 116, 105, 116, 31, 113, 116, 113, 105, 105, 116, 120, 113, 34, 36, 88, 116, 127, 113, 88, 31, 112, 120, 113, 120, 120, 116, 118, 127, 31, 36, 88, 113, 118, 33, 32, 36, 113, 36, 33, 37, 33, 31, 96, 80, 36, 113, 113, 40, 105, 37, 127, 105, 36, 113, 36, 32, 36, 113, 32, 116, 113, 113, 96, 36, 113, 106, 121, 80, 31, 36, 88, 32, 113, 116, 113, 89, 105, 113, 36, 120, 127, 118, 121, 127, 88, 88, 119, 120, 89, 120, 127, 113, 97, 40, 121, 32, 105, 127, 116, 127, 127, 127, 121, 120, 127, 127, 118, 121, 31, 88, 80, 113, 87, 37, 127, 121, 118, 34, 35, 113, 121, 34, 35, 127, 80, 32, 33, 119, 113, 116, 105, 97, 120, 105, 120, 33, 97, 121, 97, 37, 113, 113, 120, 15, 105, 15, 37, 40, 16, 37, 18, 16, 106, 37, 32, 13, 40, 14, 36, 14, 37, 106, 32, 106, 37, 37, 37, 36, 35, 106, 40, 13, 37, 37, 36, 37, 16, 120, 36, 15, 127, 105, 35, 127, 35, 19, 15, 37, 19, 16, 37, 15, 36, 40, 105, 37, 36, 105, 35, 36, 37, 24, 18, 36, 117, 127, 112, 112, 127, 120, 37, 121, 120, 127, 127, 119, 37, 118, 121, 121, 119, 121, 122, 37, 39, 97, 39, 122, 34, 34, 37, 117, 34, 97, 127, 127, 37, 34, 37, 118, 121, 25, 36, 20, 37, 25, 34, 93, 113, 113, 120, 20, 37, 20, 33, 22, 37, 35, 37, 105, 19, 36, 37, 36, 113, 19, 127, 36, 31, 35, 32, 36, 34, 36, 36, 36, 25, 21, 36, 113, 15, 37, 36, 126, 127, 113, 138, 34, 121, 138, 37, 22, 113, 36, 37, 122, 25, 36, 93, 37, 36, 113, 127, 127, 121, 16, 112, 112, 120, 36, 114, 36, 37, 127, 113, 20, 39, 113, 106, 36, 21, 106, 105, 33, 34, 113, 37, 31, 119, 127, 19, 114, 113, 127, 36, 37, 117, 114, 20, 119, 117, 114, 39, 113, 113, 120, 126, 113, 127, 121, 37, 37, 120, 85, 122, 36, 118, 122, 108, 113, 127, 115, 40, 117, 117, 99, 117, 117, 117, 123, 123, 118, 112, 84, 121, 112, 121, 118, 97, 127, 127, 127, 118, 119, 118, 127, 127, 115, 121, 121, 112, 117, 40, 37, 122, 117, 34, 37, 117, 117, 36, 127, 40, 34, 34, 127, 37, 99, 28, 37, 121, 39, 34, 84, 34, 36, 41, 117, 127, 99, 37, 118, 34, 112, 123, 33, 108, 118, 120, 40, 115, 37, 33, 111, 119, 127, 40, 37, 34, 34, 37, 39, 39, 118, 37, 118, 112, 97, 33, 121, 37, 37, 33, 118, 117, 112, 118, 35, 84, 39, 108, 118, 112, 34, 33, 35, 40, 121, 123, 121, 33, 40, 117, 33, 40, 33, 35, 127, 127, 113, 111, 84, 41, 37, 39, 34, 40, 127, 127, 121, 115, 117, 40, 40, 34, 37, 37, 112, 40, 121, 108, 33, 117, 41, 127, 117, 117, 40, 41, 39, 28, 31, 37, 112, 122, 34, 122, 35, 33, 37, 37, 40, 34, 28, 117, 127, 40, 32, 112, 39, 28, 35, 121, 39, 120, 40, 121, 121, 31, 121, 117, 40, 37, 35, 99, 40, 32, 34, 113, 32, 119, 31, 120, 106, 122, 126, 127, 100, 119, 37, 122, 127, 118, 93, 118, 96, 113, 39, 118, 105, 34, 105, 120, 106, 120, 118, 36, 32, 34, 36, 35, 88, 30, 116, 34, 40, 31, 121, 110, 34, 105, 116, 116, 118, 36, 34, 31, 39, 32, 127, 35, 32, 116, 113, 118, 113, 118, 35, 88, 97, 93, 31, 105, 122, 117, 116, 31, 127, 122, 88, 106, 121, 118, 35, 105, 112, 126, 120, 112, 111, 105, 117, 113, 113, 127, 114, 122, 39, 116, 116, 34, 31, 96, 88, 34, 116, 119, 114, 118, 119, 112, 36, 129, 93, 118, 106, 113, 127, 134, 111, 113, 112, 88, 39, 127, 111, 121, 122, 112, 113, 31, 111, 113, 34, 116, 135, 127, 118, 126, 85, 100, 111, 122, 39, 34, 93, 116, 112, 122, 39, 106, 32, 88, 112, 118, 112, 110, 93, 112, 31, 31, 112, 112, 112, 126, 122, 127, 120, 88, 93, 39, 37, 113, 30, 36, 92, 105, 127, 36, 120, 85, 30, 39, 122, 128, 113, 113, 88, 93, 34, 30, 113, 120, 135, 37, 36, 121, 122, 122, 131, 37, 143, 126, 35, 113, 112, 35, 143, 120, 127, 106, 112, 113, 113, 120, 112, 122, 112, 117, 106, 31, 39, 116, 113, 127, 113, 126, 129, 113, 39, 120, 122, 96, 40, 92, 116, 105, 127, 100, 112, 105, 113, 100, 119, 118, 122, 113, 34, 131, 88, 122, 34, 127, 127, 36, 113, 111, 37, 118, 96, 112, 88, 120, 118, 112, 118, 39, 112, 117, 127, 119, 134, 37, 39, 113, 116, 127, 128, 116, 118, 127, 120, 118, 125, 127, 31, 117, 121, 36, 128, 112, 113, 34, 127, 121, 88, 35, 116, 112, 135, 89, 36, 121, 105, 36, 89, 88, 122, 127, 127, 118, 121, 121, 117, 127, 122, 35, 37, 111, 119, 135, 121, 116, 89, 112, 34, 127, 120, 122, 112, 105, 122, 120, 113, 36, 120, 111, 112, 35, 134, 36, 118, 121, 143, 121, 122, 33, 116, 111, 111, 121, 33, 37, 33, 111, 134, 120, 88, 122, 37, 127, 40, 111, 118, 121, 36, 127, 40, 113, 121, 127, 121, 37, 118, 127, 36, 40, 105, 34, 120, 116, 105, 111, 121, 111, 127, 116, 121, 113, 36, 116, 113, 125, 31, 118, 40, 36, 32, 37, 118, 127, 37, 118, 112, 123, 112, 105, 33, 89, 119, 123, 88, 33, 37, 127, 127, 127, 127, 116, 119, 121, 112, 33, 120, 117, 37, 127, 120, 120, 121, 37, 112, 34, 36, 37, 127, 112, 118, 36, 113, 121, 36, 121, 120, 105, 33, 111, 111, 118, 113, 127, 111, 128, 37, 127, 127, 111, 118, 111, 112, 113, 111, 40, 37, 32, 116, 37, 35, 120, 143, 121, 127, 119, 37, 113, 40, 127, 112, 117, 121, 33, 127, 113, 116, 116, 118, 113, 22, 121, 134, 36, 128, 37, 134, 142, 121, 22, 20, 143, 21, 22, 113, 143, 21, 37, 40, 118, 113, 113, 35, 37, 36, 143, 19, 16, 25, 143, 113, 15, 127, 40, 118, 15, 25, 36, 19, 138, 127, 128, 27, 142, 121, 40, 23, 113, 35, 40, 38, 143, 113, 35, 138, 27, 113, 18, 143, 23, 113, 18, 14, 37, 35, 143, 138, 22, 14, 13, 16, 121, 138, 113, 20, 21, 127, 36, 113, 36, 22, 113, 143, 21, 127, 121, 116, 33, 111, 37, 26, 117, 122, 116, 33, 37, 120, 26, 120, 33, 33, 36, 26, 116, 37, 116, 36, 37, 113, 121, 33, 121, 112, 122, 33, 111, 37, 45, 134, 122, 123, 33, 34, 116, 118, 34, 37, 113, 121, 121, 121, 120, 33, 33, 125, 33, 39, 116, 122, 112, 36, 120, 37, 117, 33, 34, 119, 119, 33, 33, 116, 134, 123, 34, 33, 127, 117, 118, 36, 37, 37, 134, 120, 120, 127, 125, 125, 117, 116, 26, 113, 122, 127, 113, 116, 121, 120, 117, 39, 127, 117, 37, 122, 116, 125, 122, 120, 121, 134, 122, 116, 116, 45, 39, 127, 121, 34, 143, 117, 126, 119, 120, 116, 143, 113, 34, 121, 122, 118, 39, 126, 123, 143, 118, 143, 119, 34, 123, 119, 122, 126, 121, 120, 37, 34, 113, 121, 116, 37, 40, 143, 126, 37, 40, 33, 143, 41, 117, 122, 121, 116, 37, 40, 35, 113, 126, 119, 37, 120, 118, 122, 120, 39, 40, 112, 121, 116, 127, 39, 39, 123, 122, 37, 37, 112, 40, 122, 117, 121, 117, 40, 35, 34, 119, 120, 127, 127, 35, 121, 34, 34, 134, 37, 125, 113, 122, 122, 41, 39, 41, 33, 34, 121, 120, 39, 125, 34, 113, 37, 113, 119, 39, 127, 35, 37, 40, 39, 116, 37, 39, 123, 33, 33, 39, 37, 127, 40, 121, 117, 134, 36, 127, 122, 128, 34, 121, 128, 121, 138, 37, 138, 127, 39, 41, 118, 117, 37, 119, 37, 119, 122, 37, 39, 113, 37, 39, 126, 36, 113, 34, 37, 34, 116, 117, 122, 127, 117, 93, 97, 34, 40, 135, 117, 97, 121, 121, 122, 111, 121, 125, 37, 37, 134, 97, 143, 121, 117, 37, 127, 112, 104, 104, 128, 118, 127, 122, 115, 117, 37, 128, 35, 119, 112, 119, 122, 39, 119, 34, 127, 127, 114, 41, 143, 113, 118, 118, 121, 35, 138, 34, 138, 118, 40, 117, 34, 115, 125, 121, 93, 127, 121, 33, 135, 127, 125, 121, 137, 127, 121, 127, 117, 125, 134, 33, 127, 128, 124, 118, 125, 127, 111, 122, 134, 34, 41, 113, 114, 118, 36, 121, 127, 114, 117, 125, 111, 118, 121, 119, 97, 143, 121, 137, 112, 34, 123, 104, 33, 40, 127, 127, 127, 35, 37, 134, 143, 117, 41, 128, 117, 35, 118, 34, 40, 97, 117, 135, 123, 117, 127, 118, 118, 149, 39, 128, 39, 121, 97, 111, 125, 34, 121, 127, 127, 118, 34, 117, 122, 118, 111, 112, 128, 39, 112, 40, 121, 118, 121, 115, 33, 127, 104, 120, 33, 127, 127, 120, 126, 125, 121, 117, 135, 134, 128, 126, 104, 35, 118, 114, 127, 128, 33, 137, 40, 125, 125, 124, 37, 118, 117, 33, 124, 118, 40, 93, 118, 37, 40, 97, 134, 139, 97, 135, 121, 121, 121, 41, 34, 125, 35, 122, 93, 111, 120, 123, 112, 104, 117, 121, 134, 135, 111, 117, 120, 129, 97, 120, 117, 111, 33, 111, 114, 121, 134, 118, 120, 34, 97, 117, 121, 127, 125, 127, 126, 129, 112, 104, 121, 121, 112, 134, 40, 124, 118, 137, 117, 128, 118, 114, 37, 121, 125, 117, 134, 121, 115, 117, 117, 125, 149, 111, 117, 121, 127, 127, 121, 125, 111, 126, 121]
Recognizer 0 solved 1409/20910 tasks; total tasks solved is now 1409.
Best recognizer: 0.
Currently using this much memory: 250609664
Recognition model enumeration results for the best recognizer.
HIT 0: run w/ (lambda (SCAN_RUN $0)) ; log prior = -1.401770 ; log likelihood = 0.000000
HIT 1: look w/ (lambda (SCAN_LOOK $0)) ; log prior = -1.403631 ; log likelihood = 0.000000
HIT 2: jump w/ (lambda (SCAN_JUMP $0)) ; log prior = -1.425190 ; log likelihood = 0.000000
HIT 3: walk w/ (lambda (SCAN_WALK $0)) ; log prior = -1.401177 ; log likelihood = 0.000000
HIT 4: turn right w/ (lambda (SCAN_RTURN $0)) ; log prior = -1.509430 ; log likelihood = 0.000000
HIT 5: turn left w/ (lambda (SCAN_LTURN $0)) ; log prior = -1.460844 ; log likelihood = 0.000000
HIT 6: run after run w/ (lambda (SCAN_RUN (SCAN_RUN $0))) ; log prior = -1.922202 ; log likelihood = 0.000000
HIT 7: run twice w/ (lambda (SCAN_RUN (SCAN_RUN $0))) ; log prior = -1.932554 ; log likelihood = 0.000000
HIT 8: run and run w/ (lambda (SCAN_RUN (SCAN_RUN $0))) ; log prior = -1.922337 ; log likelihood = 0.000000
HIT 9: walk and run w/ (lambda (SCAN_WALK (SCAN_RUN $0))) ; log prior = -3.319012 ; log likelihood = 0.000000
HIT 10: run and walk w/ (lambda (SCAN_RUN (SCAN_WALK $0))) ; log prior = -3.319012 ; log likelihood = 0.000000
HIT 11: run and jump w/ (lambda (SCAN_RUN (SCAN_JUMP $0))) ; log prior = -3.314685 ; log likelihood = 0.000000
HIT 12: jump and run w/ (lambda (SCAN_JUMP (SCAN_RUN $0))) ; log prior = -3.314685 ; log likelihood = 0.000000
HIT 13: run after jump w/ (lambda (SCAN_JUMP (SCAN_RUN $0))) ; log prior = -3.306972 ; log likelihood = 0.000000
HIT 14: look and run w/ (lambda (SCAN_LOOK (SCAN_RUN $0))) ; log prior = -3.309336 ; log likelihood = 0.000000
HIT 15: run after look w/ (lambda (SCAN_LOOK (SCAN_RUN $0))) ; log prior = -3.308513 ; log likelihood = 0.000000
HIT 16: run after walk w/ (lambda (SCAN_WALK (SCAN_RUN $0))) ; log prior = -3.321740 ; log likelihood = 0.000000
HIT 17: walk after run w/ (lambda (SCAN_RUN (SCAN_WALK $0))) ; log prior = -3.321740 ; log likelihood = 0.000000
HIT 18: run and look w/ (lambda (SCAN_RUN (SCAN_LOOK $0))) ; log prior = -3.309336 ; log likelihood = 0.000000
HIT 19: jump after run w/ (lambda (SCAN_RUN (SCAN_JUMP $0))) ; log prior = -3.306972 ; log likelihood = 0.000000
HIT 20: look after run w/ (lambda (SCAN_RUN (SCAN_LOOK $0))) ; log prior = -3.308513 ; log likelihood = 0.000000
HIT 21: turn right after run w/ (lambda (SCAN_RUN (SCAN_RTURN $0))) ; log prior = -3.456687 ; log likelihood = 0.000000
HIT 22: look after jump w/ (lambda (SCAN_JUMP (SCAN_LOOK $0))) ; log prior = -3.341283 ; log likelihood = 0.000000
HIT 23: run after turn right w/ (lambda (SCAN_RTURN (SCAN_RUN $0))) ; log prior = -3.456687 ; log likelihood = 0.000000
HIT 24: walk after look w/ (lambda (SCAN_LOOK (SCAN_WALK $0))) ; log prior = -3.304389 ; log likelihood = 0.000000
HIT 25: jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP $0))) ; log prior = -1.924018 ; log likelihood = 0.000000
HIT 26: walk after jump w/ (lambda (SCAN_JUMP (SCAN_WALK $0))) ; log prior = -3.311287 ; log likelihood = 0.000000
HIT 27: walk and jump w/ (lambda (SCAN_WALK (SCAN_JUMP $0))) ; log prior = -3.309258 ; log likelihood = 0.000000
HIT 28: look after look w/ (lambda (SCAN_LOOK (SCAN_LOOK $0))) ; log prior = -1.923288 ; log likelihood = 0.000000
HIT 29: run and turn left w/ (lambda (SCAN_RUN (SCAN_LTURN $0))) ; log prior = -3.343224 ; log likelihood = 0.000000
HIT 30: jump after walk w/ (lambda (SCAN_WALK (SCAN_JUMP $0))) ; log prior = -3.311287 ; log likelihood = 0.000000
HIT 31: jump after look w/ (lambda (SCAN_LOOK (SCAN_JUMP $0))) ; log prior = -3.341283 ; log likelihood = 0.000000
HIT 32: turn right and run w/ (lambda (SCAN_RTURN (SCAN_RUN $0))) ; log prior = -3.526939 ; log likelihood = 0.000000
HIT 33: jump after jump w/ (lambda (SCAN_JUMP (SCAN_JUMP $0))) ; log prior = -1.941721 ; log likelihood = 0.000000
HIT 34: walk after walk w/ (lambda (SCAN_WALK (SCAN_WALK $0))) ; log prior = -1.944362 ; log likelihood = 0.000000
HIT 35: run left w/ (lambda (SCAN_LTURN (SCAN_RUN $0))) ; log prior = -3.308546 ; log likelihood = 0.000000
HIT 36: look after walk w/ (lambda (SCAN_WALK (SCAN_LOOK $0))) ; log prior = -3.304389 ; log likelihood = 0.000000
HIT 37: jump and jump w/ (lambda (SCAN_JUMP (SCAN_JUMP $0))) ; log prior = -1.951647 ; log likelihood = 0.000000
HIT 38: turn left after run w/ (lambda (SCAN_RUN (SCAN_LTURN $0))) ; log prior = -3.348689 ; log likelihood = 0.000000
HIT 39: look and jump w/ (lambda (SCAN_LOOK (SCAN_JUMP $0))) ; log prior = -3.353727 ; log likelihood = 0.000000
HIT 40: walk twice w/ (lambda (SCAN_WALK (SCAN_WALK $0))) ; log prior = -1.947769 ; log likelihood = 0.000000
HIT 41: run and turn right w/ (lambda (SCAN_RUN (SCAN_RTURN $0))) ; log prior = -3.526939 ; log likelihood = 0.000000
HIT 42: turn left and run w/ (lambda (SCAN_LTURN (SCAN_RUN $0))) ; log prior = -3.343224 ; log likelihood = 0.000000
HIT 43: look and walk w/ (lambda (SCAN_LOOK (SCAN_WALK $0))) ; log prior = -3.306425 ; log likelihood = 0.000000
HIT 44: look and look w/ (lambda (SCAN_LOOK (SCAN_LOOK $0))) ; log prior = -1.923196 ; log likelihood = 0.000000
HIT 45: run right w/ (lambda (SCAN_RTURN (SCAN_RUN $0))) ; log prior = -3.341305 ; log likelihood = 0.000000
HIT 46: jump and look w/ (lambda (SCAN_JUMP (SCAN_LOOK $0))) ; log prior = -3.353727 ; log likelihood = 0.000000
HIT 47: jump and walk w/ (lambda (SCAN_JUMP (SCAN_WALK $0))) ; log prior = -3.309258 ; log likelihood = 0.000000
HIT 48: run after turn left w/ (lambda (SCAN_LTURN (SCAN_RUN $0))) ; log prior = -3.348689 ; log likelihood = 0.000000
HIT 49: look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK $0))) ; log prior = -1.943929 ; log likelihood = 0.000000
HIT 50: walk and walk w/ (lambda (SCAN_WALK (SCAN_WALK $0))) ; log prior = -1.951481 ; log likelihood = 0.000000
HIT 51: walk and look w/ (lambda (SCAN_WALK (SCAN_LOOK $0))) ; log prior = -3.306425 ; log likelihood = 0.000000
HIT 52: jump and turn left w/ (lambda (SCAN_JUMP (SCAN_LTURN $0))) ; log prior = -3.343348 ; log likelihood = 0.000000
HIT 53: look and turn right w/ (lambda (SCAN_LOOK (SCAN_RTURN $0))) ; log prior = -3.393924 ; log likelihood = 0.000000
HIT 54: turn right after look w/ (lambda (SCAN_LOOK (SCAN_RTURN $0))) ; log prior = -3.365586 ; log likelihood = 0.000000
HIT 55: jump after turn left w/ (lambda (SCAN_LTURN (SCAN_JUMP $0))) ; log prior = -3.337235 ; log likelihood = 0.000000
HIT 56: jump and turn right w/ (lambda (SCAN_JUMP (SCAN_RTURN $0))) ; log prior = -3.391681 ; log likelihood = 0.000000
HIT 57: look right w/ (lambda (SCAN_RTURN (SCAN_LOOK $0))) ; log prior = -3.312011 ; log likelihood = 0.000000
HIT 58: walk after turn left w/ (lambda (SCAN_LTURN (SCAN_WALK $0))) ; log prior = -3.379917 ; log likelihood = 0.000000
HIT 59: look and turn left w/ (lambda (SCAN_LOOK (SCAN_LTURN $0))) ; log prior = -3.369921 ; log likelihood = 0.000000
HIT 60: look left w/ (lambda (SCAN_LTURN (SCAN_LOOK $0))) ; log prior = -3.321060 ; log likelihood = 0.000000
HIT 61: turn left and walk w/ (lambda (SCAN_LTURN (SCAN_WALK $0))) ; log prior = -3.378701 ; log likelihood = 0.000000
HIT 62: turn left and jump w/ (lambda (SCAN_LTURN (SCAN_JUMP $0))) ; log prior = -3.343348 ; log likelihood = 0.000000
HIT 63: jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP $0))) ; log prior = -3.316976 ; log likelihood = 0.000000
HIT 64: turn right and look w/ (lambda (SCAN_RTURN (SCAN_LOOK $0))) ; log prior = -3.393924 ; log likelihood = 0.000000
HIT 65: look after turn right w/ (lambda (SCAN_RTURN (SCAN_LOOK $0))) ; log prior = -3.365586 ; log likelihood = 0.000000
HIT 66: turn right after jump w/ (lambda (SCAN_JUMP (SCAN_RTURN $0))) ; log prior = -3.376397 ; log likelihood = 0.000000
HIT 67: walk and turn right w/ (lambda (SCAN_WALK (SCAN_RTURN $0))) ; log prior = -3.605926 ; log likelihood = 0.000000
HIT 68: jump after turn right w/ (lambda (SCAN_RTURN (SCAN_JUMP $0))) ; log prior = -3.376397 ; log likelihood = 0.000000
HIT 69: walk right w/ (lambda (SCAN_RTURN (SCAN_WALK $0))) ; log prior = -3.445250 ; log likelihood = 0.000000
HIT 70: walk after turn right w/ (lambda (SCAN_RTURN (SCAN_WALK $0))) ; log prior = -3.565605 ; log likelihood = 0.000000
HIT 71: walk left w/ (lambda (SCAN_LTURN (SCAN_WALK $0))) ; log prior = -3.328685 ; log likelihood = 0.000000
HIT 72: turn right and jump w/ (lambda (SCAN_RTURN (SCAN_JUMP $0))) ; log prior = -3.391681 ; log likelihood = 0.000000
HIT 73: turn left after jump w/ (lambda (SCAN_JUMP (SCAN_LTURN $0))) ; log prior = -3.337235 ; log likelihood = 0.000000
HIT 74: turn right after walk w/ (lambda (SCAN_WALK (SCAN_RTURN $0))) ; log prior = -3.565605 ; log likelihood = 0.000000
HIT 75: turn left after walk w/ (lambda (SCAN_WALK (SCAN_LTURN $0))) ; log prior = -3.379917 ; log likelihood = 0.000000
HIT 76: turn left and look w/ (lambda (SCAN_LTURN (SCAN_LOOK $0))) ; log prior = -3.369921 ; log likelihood = 0.000000
HIT 77: jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP $0))) ; log prior = -3.304207 ; log likelihood = 0.000000
HIT 78: look after turn left w/ (lambda (SCAN_LTURN (SCAN_LOOK $0))) ; log prior = -3.382888 ; log likelihood = 0.000000
HIT 79: turn left after look w/ (lambda (SCAN_LOOK (SCAN_LTURN $0))) ; log prior = -3.382888 ; log likelihood = 0.000000
HIT 80: turn right and walk w/ (lambda (SCAN_RTURN (SCAN_WALK $0))) ; log prior = -3.605926 ; log likelihood = 0.000000
HIT 81: walk and turn left w/ (lambda (SCAN_WALK (SCAN_LTURN $0))) ; log prior = -3.378701 ; log likelihood = 0.000000
HIT 82: turn right after turn left w/ (lambda (SCAN_LTURN (SCAN_RTURN $0))) ; log prior = -3.355050 ; log likelihood = 0.000000
HIT 83: run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -2.266479 ; log likelihood = 0.000000
HIT 84: run twice after run w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -2.262417 ; log likelihood = 0.000000
HIT 85: turn left after turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN $0))) ; log prior = -1.920472 ; log likelihood = 0.000000
HIT 86: turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN $0))) ; log prior = -1.920650 ; log likelihood = 0.000000
HIT 87: run after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -2.262417 ; log likelihood = 0.000000
HIT 88: turn left and turn right w/ (lambda (SCAN_LTURN (SCAN_RTURN $0))) ; log prior = -3.371571 ; log likelihood = 0.000000
HIT 89: turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN $0))) ; log prior = -1.922703 ; log likelihood = 0.000000
HIT 90: run twice and run w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -2.262628 ; log likelihood = 0.000000
HIT 91: turn right and turn left w/ (lambda (SCAN_RTURN (SCAN_LTURN $0))) ; log prior = -3.371571 ; log likelihood = 0.000000
HIT 92: turn right and turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN $0))) ; log prior = -1.934348 ; log likelihood = 0.000000
HIT 93: turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN $0))) ; log prior = -1.928255 ; log likelihood = 0.000000
HIT 94: turn left and turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN $0))) ; log prior = -1.921722 ; log likelihood = 0.000000
HIT 95: turn left after turn right w/ (lambda (SCAN_RTURN (SCAN_LTURN $0))) ; log prior = -3.355050 ; log likelihood = 0.000000
HIT 96: turn right after turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN $0))) ; log prior = -1.927926 ; log likelihood = 0.000000
HIT 97: run and run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -2.262628 ; log likelihood = 0.000000
HIT 98: turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN $0))) ; log prior = -1.951865 ; log likelihood = 0.000000
HIT 99: run twice after jump w/ (lambda (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -4.344492 ; log likelihood = 0.000000
HIT 100: look and run twice w/ (lambda (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -4.283349 ; log likelihood = 0.000000
HIT 101: jump after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP $0)))) ; log prior = -4.344492 ; log likelihood = 0.000000
HIT 102: walk after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK $0)))) ; log prior = -4.203852 ; log likelihood = 0.000000
HIT 103: run twice and look w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK $0)))) ; log prior = -4.283349 ; log likelihood = 0.000000
HIT 104: run twice and walk w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK $0)))) ; log prior = -4.229579 ; log likelihood = 0.000000
HIT 105: run twice after walk w/ (lambda (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -4.203852 ; log likelihood = 0.000000
HIT 106: run twice after look w/ (lambda (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -4.260017 ; log likelihood = 0.000000
HIT 107: look after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK $0)))) ; log prior = -4.260017 ; log likelihood = 0.000000
HIT 108: walk and run twice w/ (lambda (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -4.229579 ; log likelihood = 0.000000
HIT 109: jump and run twice w/ (lambda (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -4.420070 ; log likelihood = 0.000000
HIT 110: run twice and jump w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP $0)))) ; log prior = -4.420070 ; log likelihood = 0.000000
HIT 111: run and jump twice w/ (lambda (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -4.268753 ; log likelihood = 0.000000
HIT 112: turn right and run twice w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -4.546480 ; log likelihood = 0.000000
HIT 113: run right after run w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -4.177174 ; log likelihood = 0.000000
HIT 114: run twice and turn right w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN $0)))) ; log prior = -4.546480 ; log likelihood = 0.000000
HIT 115: run and run right w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -4.201454 ; log likelihood = 0.000000
HIT 116: run after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN $0)))) ; log prior = -4.439601 ; log likelihood = 0.000000
HIT 117: run twice after turn left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -4.348042 ; log likelihood = 0.000000
HIT 118: turn left after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN $0)))) ; log prior = -4.348042 ; log likelihood = 0.000000
HIT 119: run after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN $0)))) ; log prior = -4.326344 ; log likelihood = 0.000000
HIT 120: walk twice and run w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN $0)))) ; log prior = -4.497578 ; log likelihood = 0.000000
HIT 121: run and run left w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -4.171084 ; log likelihood = 0.000000
HIT 122: run twice and turn left w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN $0)))) ; log prior = -4.347356 ; log likelihood = 0.000000
HIT 123: look twice and run w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN $0)))) ; log prior = -4.410573 ; log likelihood = 0.000000
HIT 124: run and look twice w/ (lambda (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -4.410573 ; log likelihood = 0.000000
HIT 125: look twice after run w/ (lambda (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -4.439601 ; log likelihood = 0.000000
HIT 126: jump twice after run w/ (lambda (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -4.326344 ; log likelihood = 0.000000
HIT 127: walk twice after run w/ (lambda (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -4.569806 ; log likelihood = 0.000000
HIT 128: turn right after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN $0)))) ; log prior = -4.427384 ; log likelihood = 0.000000
HIT 129: run right and run w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -4.201454 ; log likelihood = 0.000000
HIT 130: run and walk twice w/ (lambda (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -4.497578 ; log likelihood = 0.000000
HIT 131: run after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -4.169896 ; log likelihood = 0.000000
HIT 132: turn left and run twice w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -4.347356 ; log likelihood = 0.000000
HIT 133: run left and run w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -4.171084 ; log likelihood = 0.000000
HIT 134: run twice after turn right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -4.427384 ; log likelihood = 0.000000
HIT 135: run after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0)))) ; log prior = -4.177174 ; log likelihood = 0.000000
HIT 136: run left after run w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -4.169896 ; log likelihood = 0.000000
HIT 137: run after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN $0)))) ; log prior = -4.569806 ; log likelihood = 0.000000
HIT 138: jump twice and run w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN $0)))) ; log prior = -4.268753 ; log likelihood = 0.000000
HIT 139: run and look right w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -5.571385 ; log likelihood = 0.000000
HIT 140: walk after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -2.268502 ; log likelihood = 0.000000
HIT 141: walk twice and jump w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP $0)))) ; log prior = -4.505325 ; log likelihood = 0.000000
HIT 142: look twice and look w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -2.266081 ; log likelihood = 0.000000
HIT 143: walk right after run w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -5.604136 ; log likelihood = 0.000000
HIT 144: jump right and run w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN $0)))) ; log prior = -5.596381 ; log likelihood = 0.000000
HIT 145: run after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN $0)))) ; log prior = -5.604136 ; log likelihood = 0.000000
HIT 146: jump left and run w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN $0)))) ; log prior = -5.587119 ; log likelihood = 0.000000
HIT 147: look twice and jump w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP $0)))) ; log prior = -4.617682 ; log likelihood = 0.000000
HIT 148: look after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK $0)))) ; log prior = -4.429795 ; log likelihood = 0.000000
HIT 149: run after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RUN $0)))) ; log prior = -5.558978 ; log likelihood = 0.000000
HIT 150: walk twice after jump w/ (lambda (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -4.500764 ; log likelihood = 0.000000
HIT 151: run left and look w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_LOOK $0)))) ; log prior = -5.557075 ; log likelihood = 0.000000
HIT 152: jump and jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -2.283157 ; log likelihood = 0.000000
HIT 153: run left after walk w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -5.564682 ; log likelihood = 0.000000
HIT 154: walk twice after walk w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -2.268502 ; log likelihood = 0.000000
HIT 155: walk right and run w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN $0)))) ; log prior = -5.619739 ; log likelihood = 0.000000
HIT 156: jump twice after jump w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -2.273730 ; log likelihood = 0.000000
HIT 157: jump thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -2.268096 ; log likelihood = 0.000000
HIT 158: jump twice and walk w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK $0)))) ; log prior = -4.227144 ; log likelihood = 0.000000
HIT 159: run right after jump w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -5.576097 ; log likelihood = 0.000000
HIT 160: look right and run w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RUN $0)))) ; log prior = -5.571385 ; log likelihood = 0.000000
HIT 161: run and walk right w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -5.619739 ; log likelihood = 0.000000
HIT 162: run and walk left w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -5.561528 ; log likelihood = 0.000000
HIT 163: jump after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP $0)))) ; log prior = -5.574477 ; log likelihood = 0.000000
HIT 164: jump and run left w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -5.587119 ; log likelihood = 0.000000
HIT 165: walk after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK $0)))) ; log prior = -5.604136 ; log likelihood = 0.000000
HIT 166: run left and jump w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP $0)))) ; log prior = -5.587119 ; log likelihood = 0.000000
HIT 167: jump and walk twice w/ (lambda (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -4.505325 ; log likelihood = 0.000000
HIT 168: jump after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP $0)))) ; log prior = -5.576097 ; log likelihood = 0.000000
HIT 169: look after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_LOOK $0)))) ; log prior = -5.558978 ; log likelihood = 0.000000
HIT 170: look twice after look w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -2.264977 ; log likelihood = 0.000000
HIT 171: run right and jump w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP $0)))) ; log prior = -5.596381 ; log likelihood = 0.000000
HIT 172: run right after look w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -5.558978 ; log likelihood = 0.000000
HIT 173: jump after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -2.273730 ; log likelihood = 0.000000
HIT 174: walk after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK $0)))) ; log prior = -4.278907 ; log likelihood = 0.000000
HIT 175: run left after look w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -5.558953 ; log likelihood = 0.000000
HIT 176: walk and run left w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -5.561528 ; log likelihood = 0.000000
HIT 177: jump twice after walk w/ (lambda (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -4.228363 ; log likelihood = 0.000000
HIT 178: look twice after jump w/ (lambda (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -4.590594 ; log likelihood = 0.000000
HIT 179: look and look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -2.266081 ; log likelihood = 0.000000
HIT 180: walk after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK $0)))) ; log prior = -4.228363 ; log likelihood = 0.000000
HIT 181: run after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RUN $0)))) ; log prior = -5.558953 ; log likelihood = 0.000000
HIT 182: walk left after run w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -5.564682 ; log likelihood = 0.000000
HIT 183: look and run left w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -5.557075 ; log likelihood = 0.000000
HIT 184: walk left and run w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_RUN $0)))) ; log prior = -5.561528 ; log likelihood = 0.000000
HIT 185: look twice after walk w/ (lambda (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -4.278907 ; log likelihood = 0.000000
HIT 186: jump and run right w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -5.596381 ; log likelihood = 0.000000
HIT 187: look thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -2.278065 ; log likelihood = 0.000000
HIT 188: look left and run w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RUN $0)))) ; log prior = -5.557075 ; log likelihood = 0.000000
HIT 189: jump left after run w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -5.574477 ; log likelihood = 0.000000
HIT 190: look and walk twice w/ (lambda (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -4.425740 ; log likelihood = 0.000000
HIT 191: jump after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP $0)))) ; log prior = -4.500764 ; log likelihood = 0.000000
HIT 192: jump twice after look w/ (lambda (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -4.196362 ; log likelihood = 0.000000
HIT 193: look twice and walk w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK $0)))) ; log prior = -4.274461 ; log likelihood = 0.000000
HIT 194: look after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_LOOK $0)))) ; log prior = -5.558953 ; log likelihood = 0.000000
HIT 195: walk and look twice w/ (lambda (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -4.274461 ; log likelihood = 0.000000
HIT 196: walk and walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -2.267046 ; log likelihood = 0.000000
HIT 197: look and jump twice w/ (lambda (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -4.191149 ; log likelihood = 0.000000
HIT 198: jump and look twice w/ (lambda (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -4.617682 ; log likelihood = 0.000000
HIT 199: walk twice and look w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK $0)))) ; log prior = -4.425740 ; log likelihood = 0.000000
HIT 200: run and look left w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -5.557075 ; log likelihood = 0.000000
HIT 201: jump after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP $0)))) ; log prior = -4.590594 ; log likelihood = 0.000000
HIT 202: jump twice and jump w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -2.283157 ; log likelihood = 0.000000
HIT 203: run after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN $0)))) ; log prior = -5.574477 ; log likelihood = 0.000000
HIT 204: walk twice after look w/ (lambda (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -4.429795 ; log likelihood = 0.000000
HIT 205: walk after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_WALK $0)))) ; log prior = -5.564682 ; log likelihood = 0.000000
HIT 206: look right after run w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -5.558978 ; log likelihood = 0.000000
HIT 207: run left after jump w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -5.574477 ; log likelihood = 0.000000
HIT 208: run and jump right w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -5.596381 ; log likelihood = 0.000000
HIT 209: walk thrice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -2.284505 ; log likelihood = 0.000000
HIT 210: run left and walk w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_WALK $0)))) ; log prior = -5.561528 ; log likelihood = 0.000000
HIT 211: jump twice and look w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK $0)))) ; log prior = -4.191149 ; log likelihood = 0.000000
HIT 212: look left after run w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -5.558953 ; log likelihood = 0.000000
HIT 213: look and run right w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -5.571385 ; log likelihood = 0.000000
HIT 214: jump right after run w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -5.576097 ; log likelihood = 0.000000
HIT 215: run after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_RUN $0)))) ; log prior = -5.564682 ; log likelihood = 0.000000
HIT 216: run right and walk w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK $0)))) ; log prior = -5.619739 ; log likelihood = 0.000000
HIT 217: walk and jump twice w/ (lambda (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -4.227144 ; log likelihood = 0.000000
HIT 218: run right after walk w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -5.604136 ; log likelihood = 0.000000
HIT 219: walk twice and walk w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -2.267046 ; log likelihood = 0.000000
HIT 220: look after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -2.264977 ; log likelihood = 0.000000
HIT 221: run and jump left w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -5.587119 ; log likelihood = 0.000000
HIT 222: run right and look w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_LOOK $0)))) ; log prior = -5.571385 ; log likelihood = 0.000000
HIT 223: look after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK $0)))) ; log prior = -4.196362 ; log likelihood = 0.000000
HIT 224: walk and run right w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -5.619739 ; log likelihood = 0.000000
HIT 225: run after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN $0)))) ; log prior = -5.576097 ; log likelihood = 0.000000
HIT 226: jump left and walk w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK $0)))) ; log prior = -5.581140 ; log likelihood = 0.000000
HIT 227: look right after jump w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -5.573965 ; log likelihood = 0.000000
HIT 228: run and turn opposite left w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -4.165316 ; log likelihood = 0.000000
HIT 229: walk and jump left w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -5.581140 ; log likelihood = 0.000000
HIT 230: run left after turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -4.220948 ; log likelihood = 0.000000
HIT 231: run right after turn left w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -5.607287 ; log likelihood = 0.000000
HIT 232: jump left and jump w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -4.220420 ; log likelihood = 0.000000
HIT 233: turn opposite right and run w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -4.339400 ; log likelihood = 0.000000
HIT 234: look after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -4.185031 ; log likelihood = 0.000000
HIT 235: turn right after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN $0)))) ; log prior = -4.578645 ; log likelihood = 0.000000
HIT 236: look after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_LOOK $0)))) ; log prior = -5.583500 ; log likelihood = 0.000000
HIT 237: look left and jump w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP $0)))) ; log prior = -5.665792 ; log likelihood = 0.000000
HIT 238: look and look left w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -4.181768 ; log likelihood = 0.000000
HIT 239: run right and turn left w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_LTURN $0)))) ; log prior = -5.641932 ; log likelihood = 0.000000
HIT 240: jump right and jump w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -4.169076 ; log likelihood = 0.000000
HIT 241: look after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK $0)))) ; log prior = -5.573965 ; log likelihood = 0.000000
HIT 242: walk after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK $0)))) ; log prior = -5.578247 ; log likelihood = 0.000000
HIT 243: jump twice after turn right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -4.298386 ; log likelihood = 0.000000
HIT 244: jump and jump right w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -4.169076 ; log likelihood = 0.000000
HIT 245: look after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK $0)))) ; log prior = -5.578247 ; log likelihood = 0.000000
HIT 246: look right after look w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -4.170283 ; log likelihood = 0.000000
HIT 247: turn right and jump twice w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -4.319179 ; log likelihood = 0.000000
HIT 248: look left and look w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -4.181768 ; log likelihood = 0.000000
HIT 249: jump after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -4.168007 ; log likelihood = 0.000000
HIT 250: turn opposite left and run w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -4.165316 ; log likelihood = 0.000000
HIT 251: turn left twice after run w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -4.321496 ; log likelihood = 0.000000
HIT 252: turn right after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN $0)))) ; log prior = -4.298386 ; log likelihood = 0.000000
HIT 253: run left and turn right w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_RTURN $0)))) ; log prior = -5.641932 ; log likelihood = 0.000000
HIT 254: walk and walk left w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -4.198665 ; log likelihood = 0.000000
HIT 255: jump after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP $0)))) ; log prior = -5.573965 ; log likelihood = 0.000000
HIT 256: jump and look left w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -5.665792 ; log likelihood = 0.000000
HIT 257: run twice after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -2.539363 ; log likelihood = 0.000000
HIT 258: look right after walk w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -5.583500 ; log likelihood = 0.000000
HIT 259: turn left after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_LTURN $0)))) ; log prior = -5.607287 ; log likelihood = 0.000000
HIT 260: run right and turn right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0)))) ; log prior = -4.177310 ; log likelihood = 0.000000
HIT 261: look and walk left w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -5.572292 ; log likelihood = 0.000000
HIT 262: turn right twice and run w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -4.215463 ; log likelihood = 0.000000
HIT 263: walk right after walk w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -4.235665 ; log likelihood = 0.000000
HIT 264: look left and walk w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK $0)))) ; log prior = -5.572292 ; log likelihood = 0.000000
HIT 265: turn right and walk twice w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -4.617371 ; log likelihood = 0.000000
HIT 266: walk left and walk w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -4.198665 ; log likelihood = 0.000000
HIT 267: turn left and run right w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -5.641932 ; log likelihood = 0.000000
HIT 268: run thrice and run w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -2.592654 ; log likelihood = 0.000000
HIT 269: run twice and run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -2.538988 ; log likelihood = 0.000000
HIT 270: turn left twice and run w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -4.322368 ; log likelihood = 0.000000
HIT 271: walk left after look w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -5.578247 ; log likelihood = 0.000000
HIT 272: turn right and look twice w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -4.376796 ; log likelihood = 0.000000
HIT 273: turn left after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0)))) ; log prior = -4.220948 ; log likelihood = 0.000000
HIT 274: turn right twice after run w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -4.262154 ; log likelihood = 0.000000
HIT 275: run opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -4.235704 ; log likelihood = 0.000000
HIT 276: jump after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP $0)))) ; log prior = -5.577459 ; log likelihood = 0.000000
HIT 277: jump twice after turn left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -4.205360 ; log likelihood = 0.000000
HIT 278: jump after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP $0)))) ; log prior = -5.631201 ; log likelihood = 0.000000
HIT 279: run after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -4.321496 ; log likelihood = 0.000000
HIT 280: walk after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -4.203896 ; log likelihood = 0.000000
HIT 281: walk twice after turn left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -4.468844 ; log likelihood = 0.000000
HIT 282: look and look right w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -4.175461 ; log likelihood = 0.000000
HIT 283: run after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -4.282792 ; log likelihood = 0.000000
HIT 284: look and walk right w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -5.583528 ; log likelihood = 0.000000
HIT 285: look right and walk w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_WALK $0)))) ; log prior = -5.583528 ; log likelihood = 0.000000
HIT 286: jump left after look w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -5.631201 ; log likelihood = 0.000000
HIT 287: jump left after jump w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -4.193445 ; log likelihood = 0.000000
HIT 288: turn left and walk twice w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -4.473353 ; log likelihood = 0.000000
HIT 289: look twice and turn left w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN $0)))) ; log prior = -4.396865 ; log likelihood = 0.000000
HIT 290: jump after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -4.193445 ; log likelihood = 0.000000
HIT 291: walk and walk right w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -4.257366 ; log likelihood = 0.000000
HIT 292: run and turn right twice w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -4.215463 ; log likelihood = 0.000000
HIT 293: run opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -4.180504 ; log likelihood = 0.000000
HIT 294: jump left after walk w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -5.577459 ; log likelihood = 0.000000
HIT 295: walk left after walk w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -4.203896 ; log likelihood = 0.000000
HIT 296: look left after look w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -4.185031 ; log likelihood = 0.000000
HIT 297: run and turn opposite right w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -4.339400 ; log likelihood = 0.000000
HIT 298: turn opposite right after run w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -4.282792 ; log likelihood = 0.000000
HIT 299: look twice after turn right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -4.348874 ; log likelihood = 0.000000
HIT 300: turn right after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_RTURN $0)))) ; log prior = -5.607287 ; log likelihood = 0.000000
HIT 301: run right after turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -4.172722 ; log likelihood = 0.000000
HIT 302: look after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -4.170283 ; log likelihood = 0.000000
HIT 303: walk and look left w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -5.572292 ; log likelihood = 0.000000
HIT 304: look and jump left w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -5.665792 ; log likelihood = 0.000000
HIT 305: look right and jump w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP $0)))) ; log prior = -5.578670 ; log likelihood = 0.000000
HIT 306: run after run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -2.573032 ; log likelihood = 0.000000
HIT 307: look right and look w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -4.175461 ; log likelihood = 0.000000
HIT 308: look left after jump w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -5.631201 ; log likelihood = 0.000000
HIT 309: turn left and jump twice w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0)))) ; log prior = -4.193120 ; log likelihood = 0.000000
HIT 310: turn right after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN $0)))) ; log prior = -4.348874 ; log likelihood = 0.000000
HIT 311: run and run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -2.592654 ; log likelihood = 0.000000
HIT 312: turn left after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN $0)))) ; log prior = -4.446963 ; log likelihood = 0.000000
HIT 313: turn left after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN $0)))) ; log prior = -4.205360 ; log likelihood = 0.000000
HIT 314: turn right after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0)))) ; log prior = -4.172722 ; log likelihood = 0.000000
HIT 315: walk right and look w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_LOOK $0)))) ; log prior = -5.583528 ; log likelihood = 0.000000
HIT 316: walk left and jump w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP $0)))) ; log prior = -5.581140 ; log likelihood = 0.000000
HIT 317: walk twice and turn right w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN $0)))) ; log prior = -4.617371 ; log likelihood = 0.000000
HIT 318: jump right and walk w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_WALK $0)))) ; log prior = -5.620555 ; log likelihood = 0.000000
HIT 319: jump and jump left w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -4.220420 ; log likelihood = 0.000000
HIT 320: jump right and look w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK $0)))) ; log prior = -5.578670 ; log likelihood = 0.000000
HIT 321: jump and walk right w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -5.620555 ; log likelihood = 0.000000
HIT 322: walk left after jump w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -5.577459 ; log likelihood = 0.000000
HIT 323: walk twice and turn left w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN $0)))) ; log prior = -4.473353 ; log likelihood = 0.000000
HIT 324: jump right after look w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -5.573965 ; log likelihood = 0.000000
HIT 325: run and turn left twice w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -4.322368 ; log likelihood = 0.000000
HIT 326: turn opposite left after run w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -4.165624 ; log likelihood = 0.000000
HIT 327: jump and look right w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -5.578670 ; log likelihood = 0.000000
HIT 328: walk left and look w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK $0)))) ; log prior = -5.572292 ; log likelihood = 0.000000
HIT 329: jump and walk left w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -5.581140 ; log likelihood = 0.000000
HIT 330: walk twice after turn right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -4.578645 ; log likelihood = 0.000000
HIT 331: walk after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -4.235665 ; log likelihood = 0.000000
HIT 332: jump right after walk w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -5.602376 ; log likelihood = 0.000000
HIT 333: walk right and jump w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_JUMP $0)))) ; log prior = -5.620555 ; log likelihood = 0.000000
HIT 334: walk right after look w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -5.583500 ; log likelihood = 0.000000
HIT 335: walk right and walk w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0)))) ; log prior = -4.257366 ; log likelihood = 0.000000
HIT 336: run left after turn right w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -5.607287 ; log likelihood = 0.000000
HIT 337: run left and turn left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0)))) ; log prior = -4.231023 ; log likelihood = 0.000000
HIT 338: jump twice and turn left w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN $0)))) ; log prior = -4.193120 ; log likelihood = 0.000000
HIT 339: walk after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_WALK $0)))) ; log prior = -5.583500 ; log likelihood = 0.000000
HIT 340: jump left and look w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK $0)))) ; log prior = -5.665792 ; log likelihood = 0.000000
HIT 341: turn left after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN $0)))) ; log prior = -4.468844 ; log likelihood = 0.000000
HIT 342: look twice after turn left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -4.446963 ; log likelihood = 0.000000
HIT 343: look and jump right w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -5.578670 ; log likelihood = 0.000000
HIT 344: look left after walk w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -5.578247 ; log likelihood = 0.000000
HIT 345: walk right after jump w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -5.602376 ; log likelihood = 0.000000
HIT 346: turn right and run right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -4.177310 ; log likelihood = 0.000000
HIT 347: run thrice after run w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -2.573032 ; log likelihood = 0.000000
HIT 348: run after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -4.165624 ; log likelihood = 0.000000
HIT 349: walk and look right w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -5.583528 ; log likelihood = 0.000000
HIT 350: look twice and turn right w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN $0)))) ; log prior = -4.376796 ; log likelihood = 0.000000
HIT 351: walk after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_WALK $0)))) ; log prior = -5.602376 ; log likelihood = 0.000000
HIT 352: jump right after jump w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -4.168007 ; log likelihood = 0.000000
HIT 353: turn left and run left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -4.231023 ; log likelihood = 0.000000
HIT 354: look after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK $0)))) ; log prior = -5.631201 ; log likelihood = 0.000000
HIT 355: walk after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK $0)))) ; log prior = -5.577459 ; log likelihood = 0.000000
HIT 356: jump after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_JUMP $0)))) ; log prior = -5.602376 ; log likelihood = 0.000000
HIT 357: turn left and look twice w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0)))) ; log prior = -4.396865 ; log likelihood = 0.000000
HIT 358: run after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))) ; log prior = -4.262154 ; log likelihood = 0.000000
HIT 359: turn right and run left w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_RUN $0)))) ; log prior = -5.641932 ; log likelihood = 0.000000
HIT 360: walk and jump right w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -5.620555 ; log likelihood = 0.000000
HIT 361: jump twice and turn right w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN $0)))) ; log prior = -4.319179 ; log likelihood = 0.000000
HIT 362: turn left and jump left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -4.304701 ; log likelihood = 0.000000
HIT 363: turn right and jump right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -4.191670 ; log likelihood = 0.000000
HIT 364: jump opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -4.169420 ; log likelihood = 0.000000
HIT 365: turn left and walk right w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -5.688693 ; log likelihood = 0.000000
HIT 366: run thrice after walk w/ (lambda (SCAN_WALK (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -4.798619 ; log likelihood = 0.000000
HIT 367: turn opposite left and walk w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -4.187215 ; log likelihood = 0.000000
HIT 368: look left and turn left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN $0)))) ; log prior = -4.224077 ; log likelihood = 0.000000
HIT 369: jump and turn opposite left w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -4.212631 ; log likelihood = 0.000000
HIT 370: jump after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -4.591197 ; log likelihood = 0.000000
HIT 371: jump right and turn right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN $0)))) ; log prior = -4.191670 ; log likelihood = 0.000000
HIT 372: turn opposite left and look w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -4.182047 ; log likelihood = 0.000000
HIT 373: run thrice and look w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LOOK $0))))) ; log prior = -5.079856 ; log likelihood = 0.000000
HIT 374: walk and turn opposite left w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -4.187215 ; log likelihood = 0.000000
HIT 375: jump left after turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -4.273833 ; log likelihood = 0.000000
HIT 376: walk right after turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -4.191549 ; log likelihood = 0.000000
HIT 377: look left after turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -4.215475 ; log likelihood = 0.000000
HIT 378: turn right after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN $0)))) ; log prior = -4.197032 ; log likelihood = 0.000000
HIT 379: turn right twice and walk w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -4.190564 ; log likelihood = 0.000000
HIT 380: walk and turn right twice w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -4.190564 ; log likelihood = 0.000000
HIT 381: turn opposite right and jump w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -4.195337 ; log likelihood = 0.000000
HIT 382: turn left twice after walk w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -4.247146 ; log likelihood = 0.000000
HIT 383: look and run thrice w/ (lambda (SCAN_LOOK (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.079856 ; log likelihood = 0.000000
HIT 384: jump after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -4.381247 ; log likelihood = 0.000000
HIT 385: walk after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -4.247146 ; log likelihood = 0.000000
HIT 386: look right after turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -4.197032 ; log likelihood = 0.000000
HIT 387: jump right after turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -4.198105 ; log likelihood = 0.000000
HIT 388: walk and turn opposite right w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -4.356352 ; log likelihood = 0.000000
HIT 389: walk left after turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -4.212958 ; log likelihood = 0.000000
HIT 390: turn opposite left after jump w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -4.198501 ; log likelihood = 0.000000
HIT 391: walk after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -4.197579 ; log likelihood = 0.000000
HIT 392: look right and turn right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN $0)))) ; log prior = -4.179336 ; log likelihood = 0.000000
HIT 393: turn left and jump right w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -5.583479 ; log likelihood = 0.000000
HIT 394: turn right and walk left w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -5.688693 ; log likelihood = 0.000000
HIT 395: turn left after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN $0)))) ; log prior = -5.667390 ; log likelihood = 0.000000
HIT 396: turn right after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN $0)))) ; log prior = -4.191549 ; log likelihood = 0.000000
HIT 397: turn opposite right and walk w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -4.356352 ; log likelihood = 0.000000
HIT 398: turn right after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN $0)))) ; log prior = -5.667390 ; log likelihood = 0.000000
HIT 399: jump opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -4.227728 ; log likelihood = 0.000000
HIT 400: turn left after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN $0)))) ; log prior = -5.554937 ; log likelihood = 0.000000
HIT 401: turn left and walk left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -4.219539 ; log likelihood = 0.000000
HIT 402: turn left after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN $0)))) ; log prior = -4.273833 ; log likelihood = 0.000000
HIT 403: jump after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -4.198501 ; log likelihood = 0.000000
HIT 404: turn opposite left after walk w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -4.186671 ; log likelihood = 0.000000
HIT 405: turn left after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN $0)))) ; log prior = -4.212958 ; log likelihood = 0.000000
HIT 406: jump and turn left twice w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -4.631352 ; log likelihood = 0.000000
HIT 407: jump left and turn right w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN $0)))) ; log prior = -5.583479 ; log likelihood = 0.000000
HIT 408: walk right and turn left w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN $0)))) ; log prior = -5.688693 ; log likelihood = 0.000000
HIT 409: turn opposite left after look w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -4.179128 ; log likelihood = 0.000000
HIT 410: look after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -4.253492 ; log likelihood = 0.000000
HIT 411: walk left after turn right w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -5.667390 ; log likelihood = 0.000000
HIT 412: turn opposite left and jump w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -4.212631 ; log likelihood = 0.000000
HIT 413: jump left after turn right w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -5.568506 ; log likelihood = 0.000000
HIT 414: turn right twice and jump w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -4.369552 ; log likelihood = 0.000000
HIT 415: look and turn opposite right w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -4.188518 ; log likelihood = 0.000000
HIT 416: look right after turn left w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -5.554937 ; log likelihood = 0.000000
HIT 417: turn right twice and look w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -4.296943 ; log likelihood = 0.000000
HIT 418: look opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -4.166343 ; log likelihood = 0.000000
HIT 419: walk after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -4.186671 ; log likelihood = 0.000000
HIT 420: jump after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -4.184222 ; log likelihood = 0.000000
HIT 421: look and turn left twice w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -4.286835 ; log likelihood = 0.000000
HIT 422: look after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -4.179128 ; log likelihood = 0.000000
HIT 423: turn right after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN $0)))) ; log prior = -5.568506 ; log likelihood = 0.000000
HIT 424: turn right twice after look w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -4.319564 ; log likelihood = 0.000000
HIT 425: turn right twice after walk w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -4.197579 ; log likelihood = 0.000000
HIT 426: run thrice and walk w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_WALK $0))))) ; log prior = -4.820621 ; log likelihood = 0.000000
HIT 427: jump and turn opposite right w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -4.195337 ; log likelihood = 0.000000
HIT 428: look left and turn right w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN $0)))) ; log prior = -5.570914 ; log likelihood = 0.000000
HIT 429: turn right and look right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -4.179336 ; log likelihood = 0.000000
HIT 430: turn left twice after look w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -4.253492 ; log likelihood = 0.000000
HIT 431: jump and run thrice w/ (lambda (SCAN_JUMP (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.339214 ; log likelihood = 0.000000
HIT 432: jump right and turn left w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN $0)))) ; log prior = -5.583479 ; log likelihood = 0.000000
HIT 433: run thrice after jump w/ (lambda (SCAN_JUMP (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.265704 ; log likelihood = 0.000000
HIT 434: jump after run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_JUMP $0))))) ; log prior = -5.265704 ; log likelihood = 0.000000
HIT 435: jump and turn right twice w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -4.369552 ; log likelihood = 0.000000
HIT 436: turn right after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN $0)))) ; log prior = -5.554937 ; log likelihood = 0.000000
HIT 437: turn left after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN $0)))) ; log prior = -5.568506 ; log likelihood = 0.000000
HIT 438: turn right twice after jump w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -4.381247 ; log likelihood = 0.000000
HIT 439: run thrice and jump w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_JUMP $0))))) ; log prior = -5.339214 ; log likelihood = 0.000000
HIT 440: walk after run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_WALK $0))))) ; log prior = -4.798619 ; log likelihood = 0.000000
HIT 441: look right and turn left w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN $0)))) ; log prior = -5.570914 ; log likelihood = 0.000000
HIT 442: jump left and turn left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN $0)))) ; log prior = -4.304701 ; log likelihood = 0.000000
HIT 443: look opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -4.185907 ; log likelihood = 0.000000
HIT 444: turn left after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN $0)))) ; log prior = -4.215475 ; log likelihood = 0.000000
HIT 445: walk left and turn right w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN $0)))) ; log prior = -5.688693 ; log likelihood = 0.000000
HIT 446: walk opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -4.237844 ; log likelihood = 0.000000
HIT 447: look after run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LOOK $0))))) ; log prior = -5.033554 ; log likelihood = 0.000000
HIT 448: look and turn right twice w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -4.296943 ; log likelihood = 0.000000
HIT 449: turn right and look left w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -5.570914 ; log likelihood = 0.000000
HIT 450: turn opposite right and look w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -4.188518 ; log likelihood = 0.000000
HIT 451: look after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -4.176072 ; log likelihood = 0.000000
HIT 452: turn opposite right after walk w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -4.314469 ; log likelihood = 0.000000
HIT 453: turn left twice and jump w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -4.631352 ; log likelihood = 0.000000
HIT 454: look left after turn right w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -5.554937 ; log likelihood = 0.000000
HIT 455: turn opposite right after look w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -4.176072 ; log likelihood = 0.000000
HIT 456: walk after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -4.314469 ; log likelihood = 0.000000
HIT 457: look after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -4.319564 ; log likelihood = 0.000000
HIT 458: walk left and turn left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN $0)))) ; log prior = -4.219539 ; log likelihood = 0.000000
HIT 459: turn left and look left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -4.224077 ; log likelihood = 0.000000
HIT 460: look and turn opposite left w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -4.182047 ; log likelihood = 0.000000
HIT 461: turn opposite right after jump w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -4.184222 ; log likelihood = 0.000000
HIT 462: turn right after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN $0)))) ; log prior = -4.198105 ; log likelihood = 0.000000
HIT 463: turn right and jump left w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0)))) ; log prior = -5.583479 ; log likelihood = 0.000000
HIT 464: turn left twice and walk w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -4.247695 ; log likelihood = 0.000000
HIT 465: turn right and walk right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -4.199025 ; log likelihood = 0.000000
HIT 466: turn left twice and look w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))) ; log prior = -4.286835 ; log likelihood = 0.000000
HIT 467: walk and turn left twice w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -4.247695 ; log likelihood = 0.000000
HIT 468: jump right after turn left w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_JUMP $0)))) ; log prior = -5.568506 ; log likelihood = 0.000000
HIT 469: walk opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))) ; log prior = -4.223749 ; log likelihood = 0.000000
HIT 470: walk and run thrice w/ (lambda (SCAN_WALK (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -4.820621 ; log likelihood = 0.000000
HIT 471: turn left and look right w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0)))) ; log prior = -5.570914 ; log likelihood = 0.000000
HIT 472: walk right and turn right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN $0)))) ; log prior = -4.199025 ; log likelihood = 0.000000
HIT 473: run thrice after look w/ (lambda (SCAN_LOOK (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.033554 ; log likelihood = 0.000000
HIT 474: walk right after turn left w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0)))) ; log prior = -5.667390 ; log likelihood = 0.000000
HIT 475: turn left twice after jump w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -4.591197 ; log likelihood = 0.000000
HIT 476: jump twice and run twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.313531 ; log likelihood = 0.000000
HIT 477: turn left thrice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -2.269093 ; log likelihood = 0.000000
HIT 478: look twice and run twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.357526 ; log likelihood = 0.000000
HIT 479: turn left and turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -2.267838 ; log likelihood = 0.000000
HIT 480: turn left and turn opposite right w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -4.176037 ; log likelihood = 0.000000
HIT 481: run right and run twice w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -4.773531 ; log likelihood = 0.000000
HIT 482: turn right and turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -2.262776 ; log likelihood = 0.000000
HIT 483: run thrice and turn left w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LTURN $0))))) ; log prior = -5.088610 ; log likelihood = 0.000000
HIT 484: turn right after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -2.268702 ; log likelihood = 0.000000
HIT 485: turn right twice and turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -2.262776 ; log likelihood = 0.000000
HIT 486: run twice and walk twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.369935 ; log likelihood = 0.000000
HIT 487: turn left after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN $0)))) ; log prior = -4.239122 ; log likelihood = 0.000000
HIT 488: run thrice after turn right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.409549 ; log likelihood = 0.000000
HIT 489: turn left and turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -2.295919 ; log likelihood = 0.000000
HIT 490: run twice after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -4.767356 ; log likelihood = 0.000000
HIT 491: turn left twice after turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -2.284447 ; log likelihood = 0.000000
HIT 492: turn right and turn left twice w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -4.547097 ; log likelihood = 0.000000
HIT 493: turn left after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -2.284447 ; log likelihood = 0.000000
HIT 494: turn left after run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LTURN $0))))) ; log prior = -5.106004 ; log likelihood = 0.000000
HIT 495: run twice after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.401610 ; log likelihood = 0.000000
HIT 496: turn right after run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RTURN $0))))) ; log prior = -5.409549 ; log likelihood = 0.000000
HIT 497: walk twice after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.401610 ; log likelihood = 0.000000
HIT 498: turn opposite right and turn left w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN $0)))) ; log prior = -4.176037 ; log likelihood = 0.000000
HIT 499: turn right and run thrice w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.566973 ; log likelihood = 0.000000
HIT 500: turn right after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN $0)))) ; log prior = -4.481555 ; log likelihood = 0.000000
HIT 501: turn right twice and turn left w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN $0)))) ; log prior = -4.212870 ; log likelihood = 0.000000
HIT 502: run left after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -4.772932 ; log likelihood = 0.000000
HIT 503: walk twice and run twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.369935 ; log likelihood = 0.000000
HIT 504: run twice and run right w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -4.773531 ; log likelihood = 0.000000
HIT 505: turn left twice and turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -2.295919 ; log likelihood = 0.000000
HIT 506: turn left and run thrice w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.088610 ; log likelihood = 0.000000
HIT 507: run thrice after turn left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.106004 ; log likelihood = 0.000000
HIT 508: turn opposite right after turn left w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -4.186314 ; log likelihood = 0.000000
HIT 509: turn opposite left and turn right w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN $0)))) ; log prior = -4.723224 ; log likelihood = 0.000000
HIT 510: turn right after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -2.265467 ; log likelihood = 0.000000
HIT 511: run twice and jump twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.313531 ; log likelihood = 0.000000
HIT 512: turn left after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN $0)))) ; log prior = -4.186314 ; log likelihood = 0.000000
HIT 513: turn opposite left after turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -2.265063 ; log likelihood = 0.000000
HIT 514: run twice after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.304435 ; log likelihood = 0.000000
HIT 515: look twice after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.346062 ; log likelihood = 0.000000
HIT 516: run left and run twice w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -4.770273 ; log likelihood = 0.000000
HIT 517: jump twice after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.304435 ; log likelihood = 0.000000
HIT 518: run twice after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -4.772932 ; log likelihood = 0.000000
HIT 519: turn right and turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -2.278288 ; log likelihood = 0.000000
HIT 520: turn left after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -2.265063 ; log likelihood = 0.000000
HIT 521: turn right twice after turn left w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -4.239122 ; log likelihood = 0.000000
HIT 522: turn opposite right and turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -2.278288 ; log likelihood = 0.000000
HIT 523: turn right twice after turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -2.265467 ; log likelihood = 0.000000
HIT 524: turn left twice after turn right w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -4.481555 ; log likelihood = 0.000000
HIT 525: turn opposite left and turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -2.267838 ; log likelihood = 0.000000
HIT 526: turn left twice and turn right w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN $0)))) ; log prior = -4.547097 ; log likelihood = 0.000000
HIT 527: run right after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -4.767356 ; log likelihood = 0.000000
HIT 528: run twice after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.346062 ; log likelihood = 0.000000
HIT 529: run thrice and turn right w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RTURN $0))))) ; log prior = -5.566973 ; log likelihood = 0.000000
HIT 530: turn opposite left after turn right w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -4.640890 ; log likelihood = 0.000000
HIT 531: run twice and look twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.357526 ; log likelihood = 0.000000
HIT 532: run twice and run left w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -4.770273 ; log likelihood = 0.000000
HIT 533: turn left and turn right twice w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -4.212870 ; log likelihood = 0.000000
HIT 534: turn right and turn opposite left w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0)))) ; log prior = -4.723224 ; log likelihood = 0.000000
HIT 535: turn right thrice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -2.272355 ; log likelihood = 0.000000
HIT 536: turn opposite right after turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))) ; log prior = -2.268702 ; log likelihood = 0.000000
HIT 537: turn right after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN $0)))) ; log prior = -4.640890 ; log likelihood = 0.000000
HIT 538: run twice after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -6.697706 ; log likelihood = 0.000000
HIT 539: run twice after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -6.724353 ; log likelihood = 0.000000
HIT 540: run twice after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -6.963758 ; log likelihood = 0.000000
HIT 541: jump right after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -6.963758 ; log likelihood = 0.000000
HIT 542: jump thrice and run w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RUN $0))))) ; log prior = -5.248170 ; log likelihood = 0.000000
HIT 543: run twice after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -6.921316 ; log likelihood = 0.000000
HIT 544: run and look thrice w/ (lambda (SCAN_RUN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.543760 ; log likelihood = 0.000000
HIT 545: run twice and walk right w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -6.715634 ; log likelihood = 0.000000
HIT 546: jump left after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -6.921316 ; log likelihood = 0.000000
HIT 547: run and jump thrice w/ (lambda (SCAN_RUN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.248170 ; log likelihood = 0.000000
HIT 548: run after jump thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RUN $0))))) ; log prior = -5.351109 ; log likelihood = 0.000000
HIT 549: run twice and jump left w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -6.952079 ; log likelihood = 0.000000
HIT 550: look thrice and run w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RUN $0))))) ; log prior = -5.543760 ; log likelihood = 0.000000
HIT 551: walk thrice after run w/ (lambda (SCAN_RUN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -6.459365 ; log likelihood = 0.000000
HIT 552: look right and run twice w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -6.852326 ; log likelihood = 0.000000
HIT 553: run twice and look right w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -6.852326 ; log likelihood = 0.000000
HIT 554: jump left and run twice w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -6.952079 ; log likelihood = 0.000000
HIT 555: walk right and run twice w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -6.715634 ; log likelihood = 0.000000
HIT 556: jump right and run twice w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -6.988177 ; log likelihood = 0.000000
HIT 557: run after look thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RUN $0))))) ; log prior = -5.633785 ; log likelihood = 0.000000
HIT 559: walk thrice and run w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_RUN $0))))) ; log prior = -6.336684 ; log likelihood = 0.000000
HIT 561: run twice and jump right w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -6.988177 ; log likelihood = 0.000000
HIT 564: look thrice after run w/ (lambda (SCAN_RUN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.633785 ; log likelihood = 0.000000
HIT 565: walk right after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -6.697706 ; log likelihood = 0.000000
HIT 567: run and walk thrice w/ (lambda (SCAN_RUN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -6.336684 ; log likelihood = 0.000000
HIT 568: jump thrice after run w/ (lambda (SCAN_RUN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.351109 ; log likelihood = 0.000000
HIT 569: walk left after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -6.724353 ; log likelihood = 0.000000
HIT 573: run after walk thrice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_RUN $0))))) ; log prior = -6.459365 ; log likelihood = 0.000000
HIT 574: look twice and run right w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -6.866384 ; log likelihood = 0.000000
HIT 575: jump after jump thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -2.551314 ; log likelihood = 0.000000
HIT 576: walk thrice after jump w/ (lambda (SCAN_JUMP (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.823755 ; log likelihood = 0.000000
HIT 577: walk after walk thrice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -2.517556 ; log likelihood = 0.000000
HIT 578: run twice after run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -2.871772 ; log likelihood = 0.000000
HIT 579: jump thrice and jump w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -2.549926 ; log likelihood = 0.000000
HIT 581: run left after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -5.496658 ; log likelihood = 0.000000
HIT 582: run right after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -5.455550 ; log likelihood = 0.000000
HIT 583: run twice and turn right twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.345614 ; log likelihood = 0.000000
HIT 584: jump twice after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -6.845769 ; log likelihood = 0.000000
HIT 585: walk twice after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -2.590225 ; log likelihood = 0.000000
HIT 586: jump and walk thrice w/ (lambda (SCAN_JUMP (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.931744 ; log likelihood = 0.000000
HIT 587: look twice and look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -2.577638 ; log likelihood = 0.000000
HIT 588: run twice after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.463637 ; log likelihood = 0.000000
HIT 589: look and look thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -2.522980 ; log likelihood = 0.000000
HIT 590: run twice and turn opposite left w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.335072 ; log likelihood = 0.000000
HIT 592: run thrice after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -2.871772 ; log likelihood = 0.000000
HIT 593: walk twice after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.383081 ; log likelihood = 0.000000
HIT 594: walk thrice and walk w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -2.518567 ; log likelihood = 0.000000
HIT 595: run and run opposite left w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -5.375971 ; log likelihood = 0.000000
HIT 596: run thrice and run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -2.879294 ; log likelihood = 0.000000
HIT 598: look twice and jump twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.390220 ; log likelihood = 0.000000
HIT 599: jump twice after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -2.518188 ; log likelihood = 0.000000
HIT 600: run twice after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.323243 ; log likelihood = 0.000000
HIT 601: jump after walk thrice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_JUMP $0))))) ; log prior = -5.823755 ; log likelihood = 0.000000
HIT 602: walk twice and look twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.369056 ; log likelihood = 0.000000
HIT 604: run right twice w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -5.367772 ; log likelihood = 0.000000
HIT 605: walk thrice after look w/ (lambda (SCAN_LOOK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.758698 ; log likelihood = 0.000000
HIT 608: walk after look thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_WALK $0))))) ; log prior = -5.026034 ; log likelihood = 0.000000
HIT 609: jump thrice and look w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK $0))))) ; log prior = -4.956140 ; log likelihood = 0.000000
HIT 610: jump thrice after jump w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -2.551314 ; log likelihood = 0.000000
HIT 611: look after look thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -2.520720 ; log likelihood = 0.000000
HIT 612: look after walk thrice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LOOK $0))))) ; log prior = -5.758698 ; log likelihood = 0.000000
HIT 613: look thrice and walk w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_WALK $0))))) ; log prior = -5.020808 ; log likelihood = 0.000000
HIT 614: walk twice and walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -2.583005 ; log likelihood = 0.000000
HIT 615: walk thrice and jump w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_JUMP $0))))) ; log prior = -5.931744 ; log likelihood = 0.000000
HIT 616: look and jump thrice w/ (lambda (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -4.956140 ; log likelihood = 0.000000
HIT 617: run and run opposite right w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -5.293528 ; log likelihood = 0.000000
HIT 618: walk twice after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -7.064377 ; log likelihood = 0.000000
HIT 619: walk thrice and look w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LOOK $0))))) ; log prior = -5.732692 ; log likelihood = 0.000000
HIT 620: turn opposite right and run twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.531129 ; log likelihood = 0.000000
HIT 622: walk twice and run right w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -7.060998 ; log likelihood = 0.000000
HIT 623: run twice and turn opposite right w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.531129 ; log likelihood = 0.000000
HIT 625: look thrice and look w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -2.522980 ; log likelihood = 0.000000
HIT 626: look and walk thrice w/ (lambda (SCAN_LOOK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.732692 ; log likelihood = 0.000000
HIT 627: jump thrice after walk w/ (lambda (SCAN_WALK (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -4.965712 ; log likelihood = 0.000000
HIT 628: jump thrice and walk w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_WALK $0))))) ; log prior = -4.932363 ; log likelihood = 0.000000
HIT 629: jump twice and run right w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -6.731952 ; log likelihood = 0.000000
HIT 630: jump and jump thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -2.549926 ; log likelihood = 0.000000
HIT 631: jump twice after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.385783 ; log likelihood = 0.000000
HIT 632: run left and run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -5.494628 ; log likelihood = 0.000000
HIT 633: run twice and run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -2.879294 ; log likelihood = 0.000000
HIT 634: jump and look thrice w/ (lambda (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.790135 ; log likelihood = 0.000000
HIT 635: turn opposite left after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.337744 ; log likelihood = 0.000000
HIT 636: run opposite right after run w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -5.282889 ; log likelihood = 0.000000
HIT 637: run twice and turn left twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.323873 ; log likelihood = 0.000000
HIT 638: run right and walk twice w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -7.060998 ; log likelihood = 0.000000
HIT 639: look twice after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -2.571471 ; log likelihood = 0.000000
HIT 640: jump twice after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -6.744637 ; log likelihood = 0.000000
HIT 641: run right after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -6.744637 ; log likelihood = 0.000000
HIT 642: run left after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -6.845769 ; log likelihood = 0.000000
HIT 643: look thrice and jump w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP $0))))) ; log prior = -5.790135 ; log likelihood = 0.000000
HIT 644: jump after look thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP $0))))) ; log prior = -5.826191 ; log likelihood = 0.000000
HIT 645: run opposite left and run w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.375971 ; log likelihood = 0.000000
HIT 646: walk twice after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.364027 ; log likelihood = 0.000000
HIT 647: run left after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -7.064377 ; log likelihood = 0.000000
HIT 648: run after run opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.388379 ; log likelihood = 0.000000
HIT 649: walk thrice after walk w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -2.517556 ; log likelihood = 0.000000
HIT 651: turn right twice and run twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.345614 ; log likelihood = 0.000000
HIT 652: walk twice and jump twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.370479 ; log likelihood = 0.000000
HIT 653: look twice after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.385783 ; log likelihood = 0.000000
HIT 654: look thrice after look w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -2.520720 ; log likelihood = 0.000000
HIT 655: jump twice and walk twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.370479 ; log likelihood = 0.000000
HIT 656: look twice after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.383081 ; log likelihood = 0.000000
HIT 657: turn opposite right after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.463637 ; log likelihood = 0.000000
HIT 659: walk and look thrice w/ (lambda (SCAN_WALK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.020808 ; log likelihood = 0.000000
HIT 660: jump twice after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.364027 ; log likelihood = 0.000000
HIT 661: look twice and walk twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.369056 ; log likelihood = 0.000000
HIT 662: jump twice and run left w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -6.823251 ; log likelihood = 0.000000
HIT 663: turn left twice after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.323243 ; log likelihood = 0.000000
HIT 664: walk and walk thrice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -2.518567 ; log likelihood = 0.000000
HIT 665: look after jump thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK $0))))) ; log prior = -4.937765 ; log likelihood = 0.000000
HIT 666: run right and run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -5.383831 ; log likelihood = 0.000000
HIT 667: run after run opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.282889 ; log likelihood = 0.000000
HIT 668: look thrice after walk w/ (lambda (SCAN_WALK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.026034 ; log likelihood = 0.000000
HIT 670: walk twice after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -7.120771 ; log likelihood = 0.000000
HIT 671: jump thrice after look w/ (lambda (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -4.937765 ; log likelihood = 0.000000
HIT 672: jump twice and jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -2.514626 ; log likelihood = 0.000000
HIT 673: run left and jump twice w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -6.823251 ; log likelihood = 0.000000
HIT 674: run right after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -7.120771 ; log likelihood = 0.000000
HIT 675: look thrice after jump w/ (lambda (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.826191 ; log likelihood = 0.000000
HIT 677: run opposite left after run w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -5.388379 ; log likelihood = 0.000000
HIT 678: jump twice and look twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.390220 ; log likelihood = 0.000000
HIT 679: run twice after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.321904 ; log likelihood = 0.000000
HIT 680: run opposite right and run w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.293528 ; log likelihood = 0.000000
HIT 681: run twice after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.337744 ; log likelihood = 0.000000
HIT 682: turn left twice and run twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.323873 ; log likelihood = 0.000000
HIT 683: run right and look twice w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -6.866384 ; log likelihood = 0.000000
HIT 684: walk and jump thrice w/ (lambda (SCAN_WALK (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -4.932363 ; log likelihood = 0.000000
HIT 685: turn opposite left and run twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))) ; log prior = -5.335072 ; log likelihood = 0.000000
HIT 686: turn right twice after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.321904 ; log likelihood = 0.000000
HIT 687: run left twice w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -5.428195 ; log likelihood = 0.000000
HIT 688: run right and jump twice w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -6.731952 ; log likelihood = 0.000000
HIT 689: walk after jump thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_WALK $0))))) ; log prior = -4.965712 ; log likelihood = 0.000000
HIT 690: look opposite left after run w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -6.797226 ; log likelihood = 0.000000
HIT 691: walk right and look twice w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -6.775365 ; log likelihood = 0.000000
HIT 693: walk thrice after turn right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.646934 ; log likelihood = 0.000000
HIT 694: look opposite right after run w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -6.670437 ; log likelihood = 0.000000
HIT 695: walk twice and jump left w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -7.095813 ; log likelihood = 0.000000
HIT 697: jump opposite right and run w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_RUN $0))))) ; log prior = -6.689487 ; log likelihood = 0.000000
HIT 698: look left and jump twice w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -6.710223 ; log likelihood = 0.000000
HIT 700: look twice and jump left w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -7.320955 ; log likelihood = 0.000000
HIT 701: walk opposite right and run w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_RUN $0))))) ; log prior = -6.715788 ; log likelihood = 0.000000
HIT 702: look and run opposite right w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -6.679352 ; log likelihood = 0.000000
HIT 703: look right after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -6.695335 ; log likelihood = 0.000000
HIT 704: look twice after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -7.100753 ; log likelihood = 0.000000
HIT 705: run opposite left after look w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -6.797226 ; log likelihood = 0.000000
HIT 706: run right and jump right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -6.813680 ; log likelihood = 0.000000
HIT 708: run opposite left and jump w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_JUMP $0))))) ; log prior = -6.935701 ; log likelihood = 0.000000
HIT 710: walk twice and look left w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -6.930218 ; log likelihood = 0.000000
HIT 711: walk twice and walk right w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -4.838836 ; log likelihood = 0.000000
HIT 712: walk left and walk twice w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -4.805304 ; log likelihood = 0.000000
HIT 713: turn left and walk thrice w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.380931 ; log likelihood = 0.000000
HIT 714: look right and jump twice w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -6.695966 ; log likelihood = 0.000000
HIT 715: jump twice after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -6.719971 ; log likelihood = 0.000000
HIT 716: look and run opposite left w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -6.782232 ; log likelihood = 0.000000
HIT 717: jump right and jump twice w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -4.766661 ; log likelihood = 0.000000
HIT 718: look twice after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -4.774930 ; log likelihood = 0.000000
HIT 719: look thrice and turn right w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN $0))))) ; log prior = -5.348253 ; log likelihood = 0.000000
HIT 720: run opposite right after look w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -6.670437 ; log likelihood = 0.000000
HIT 721: jump left and walk twice w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -7.095813 ; log likelihood = 0.000000
HIT 722: look left after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -6.964378 ; log likelihood = 0.000000
HIT 723: run and jump opposite left w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -6.935701 ; log likelihood = 0.000000
HIT 725: run left and jump left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -7.018267 ; log likelihood = 0.000000
HIT 727: turn left and look thrice w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.511174 ; log likelihood = 0.000000
HIT 728: walk twice and look right w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -7.070053 ; log likelihood = 0.000000
HIT 729: run opposite right and look w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_LOOK $0))))) ; log prior = -6.679352 ; log likelihood = 0.000000
HIT 731: turn right after jump thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN $0))))) ; log prior = -5.111347 ; log likelihood = 0.000000
HIT 732: look opposite right and run w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_RUN $0))))) ; log prior = -6.679352 ; log likelihood = 0.000000
HIT 733: jump left and look twice w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -7.320955 ; log likelihood = 0.000000
HIT 734: jump left after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -4.834807 ; log likelihood = 0.000000
HIT 735: run after look opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_RUN $0))))) ; log prior = -6.670437 ; log likelihood = 0.000000
HIT 737: jump twice and jump left w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -4.863613 ; log likelihood = 0.000000
HIT 739: walk left after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -6.719971 ; log likelihood = 0.000000
HIT 740: jump thrice and turn left w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN $0))))) ; log prior = -4.939818 ; log likelihood = 0.000000
HIT 743: jump thrice after turn right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.111347 ; log likelihood = 0.000000
HIT 744: look twice after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -6.841243 ; log likelihood = 0.000000
HIT 749: jump twice after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -4.834807 ; log likelihood = 0.000000
HIT 751: run and look opposite right w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -6.679352 ; log likelihood = 0.000000
HIT 752: walk twice after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -7.086609 ; log likelihood = 0.000000
HIT 754: walk thrice and turn right w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_RTURN $0))))) ; log prior = -5.640064 ; log likelihood = 0.000000
HIT 755: run and look opposite left w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -6.782232 ; log likelihood = 0.000000
HIT 756: jump left and jump twice w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -4.863613 ; log likelihood = 0.000000
HIT 758: jump right after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -7.100753 ; log likelihood = 0.000000
HIT 761: look left after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -4.774930 ; log likelihood = 0.000000
HIT 762: look right and run right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -6.814143 ; log likelihood = 0.000000
HIT 764: walk left and jump twice w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -6.727128 ; log likelihood = 0.000000
HIT 765: turn right and jump thrice w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.137321 ; log likelihood = 0.000000
HIT 767: run right after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -6.797765 ; log likelihood = 0.000000
HIT 768: jump twice and jump right w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -4.766661 ; log likelihood = 0.000000
HIT 769: jump twice and look right w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -6.695966 ; log likelihood = 0.000000
HIT 770: look right after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -4.766012 ; log likelihood = 0.000000
HIT 771: look thrice after turn left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.479140 ; log likelihood = 0.000000
HIT 774: turn right and walk thrice w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.640064 ; log likelihood = 0.000000
HIT 776: look twice and look left w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -4.771582 ; log likelihood = 0.000000
HIT 777: look after run opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_LOOK $0))))) ; log prior = -6.797226 ; log likelihood = 0.000000
HIT 778: turn left and jump thrice w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -4.939818 ; log likelihood = 0.000000
HIT 779: run after look opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_RUN $0))))) ; log prior = -6.797226 ; log likelihood = 0.000000
HIT 781: walk twice and walk left w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -4.805304 ; log likelihood = 0.000000
HIT 783: walk twice after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -6.964378 ; log likelihood = 0.000000
HIT 784: jump thrice and turn right w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN $0))))) ; log prior = -5.137321 ; log likelihood = 0.000000
HIT 785: jump thrice after turn left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -4.941292 ; log likelihood = 0.000000
HIT 787: look opposite left and run w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_RUN $0))))) ; log prior = -6.782232 ; log likelihood = 0.000000
HIT 788: jump left and run left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -7.018267 ; log likelihood = 0.000000
HIT 790: run opposite left and look w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_LOOK $0))))) ; log prior = -6.782232 ; log likelihood = 0.000000
HIT 793: look left and look twice w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -4.771582 ; log likelihood = 0.000000
HIT 795: walk right and walk twice w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -4.838836 ; log likelihood = 0.000000
HIT 801: look twice and walk left w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -6.855164 ; log likelihood = 0.000000
HIT 802: jump twice after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -6.695335 ; log likelihood = 0.000000
HIT 803: run right after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -6.849667 ; log likelihood = 0.000000
HIT 806: walk and run opposite right w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -6.715788 ; log likelihood = 0.000000
HIT 808: look twice after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -4.766012 ; log likelihood = 0.000000
HIT 811: walk thrice and turn left w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LTURN $0))))) ; log prior = -5.380931 ; log likelihood = 0.000000
HIT 812: look twice and jump right w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -7.093739 ; log likelihood = 0.000000
HIT 813: turn right after walk thrice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_RTURN $0))))) ; log prior = -5.646934 ; log likelihood = 0.000000
HIT 814: walk right after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -6.797765 ; log likelihood = 0.000000
HIT 817: turn left after jump thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN $0))))) ; log prior = -4.941292 ; log likelihood = 0.000000
HIT 818: look twice and look right w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -4.767753 ; log likelihood = 0.000000
HIT 819: walk twice after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -4.811201 ; log likelihood = 0.000000
HIT 821: jump right and look twice w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -7.093739 ; log likelihood = 0.000000
HIT 822: turn right and look thrice w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.348253 ; log likelihood = 0.000000
HIT 823: look right after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -6.849667 ; log likelihood = 0.000000
HIT 824: jump twice and walk left w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -6.727128 ; log likelihood = 0.000000
HIT 825: run and walk opposite right w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -6.715788 ; log likelihood = 0.000000
HIT 829: turn left after look thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN $0))))) ; log prior = -5.479140 ; log likelihood = 0.000000
HIT 831: jump right and run right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -6.813680 ; log likelihood = 0.000000
HIT 833: look left and walk twice w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -6.930218 ; log likelihood = 0.000000
HIT 835: walk right after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -4.822328 ; log likelihood = 0.000000
HIT 836: run opposite right and jump w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_JUMP $0))))) ; log prior = -6.689487 ; log likelihood = 0.000000
HIT 838: jump left after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -7.086609 ; log likelihood = 0.000000
HIT 839: run opposite right and walk w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_WALK $0))))) ; log prior = -6.715788 ; log likelihood = 0.000000
HIT 840: run and jump opposite right w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -6.689487 ; log likelihood = 0.000000
HIT 843: look right and look twice w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -4.767753 ; log likelihood = 0.000000
HIT 845: look thrice after turn right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.286649 ; log likelihood = 0.000000
HIT 848: look right and walk twice w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -7.070053 ; log likelihood = 0.000000
HIT 850: look twice and walk right w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -6.775365 ; log likelihood = 0.000000
HIT 852: walk twice after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -4.822328 ; log likelihood = 0.000000
HIT 854: look thrice and turn left w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN $0))))) ; log prior = -5.511174 ; log likelihood = 0.000000
HIT 858: jump and run opposite right w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -6.689487 ; log likelihood = 0.000000
HIT 859: look after run opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_LOOK $0))))) ; log prior = -6.670437 ; log likelihood = 0.000000
HIT 861: turn left after walk thrice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LTURN $0))))) ; log prior = -5.450911 ; log likelihood = 0.000000
HIT 865: jump right after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -4.768797 ; log likelihood = 0.000000
HIT 866: jump opposite left and run w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_RUN $0))))) ; log prior = -6.935701 ; log likelihood = 0.000000
HIT 868: run right and look right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -6.814143 ; log likelihood = 0.000000
HIT 870: jump and run opposite left w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -6.935701 ; log likelihood = 0.000000
HIT 871: walk left after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -6.841243 ; log likelihood = 0.000000
HIT 872: turn right after look thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN $0))))) ; log prior = -5.286649 ; log likelihood = 0.000000
HIT 873: walk left and look twice w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -6.855164 ; log likelihood = 0.000000
HIT 874: jump twice and look left w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -6.710223 ; log likelihood = 0.000000
HIT 877: jump twice after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -4.768797 ; log likelihood = 0.000000
HIT 880: walk thrice after turn left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.450911 ; log likelihood = 0.000000
HIT 881: walk left after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -4.811201 ; log likelihood = 0.000000
HIT 882: turn right twice and run right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -5.014597 ; log likelihood = 0.000000
HIT 883: turn opposite left and jump twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.295805 ; log likelihood = 0.000000
HIT 884: run opposite right after turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -4.768395 ; log likelihood = 0.000000
HIT 885: look after look opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.296360 ; log likelihood = 0.000000
HIT 886: look and look opposite left w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -5.322790 ; log likelihood = 0.000000
HIT 887: walk right after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -5.365059 ; log likelihood = 0.000000
HIT 888: jump opposite right and look w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK $0))))) ; log prior = -6.745672 ; log likelihood = 0.000000
HIT 889: turn right and run opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -4.784245 ; log likelihood = 0.000000
HIT 890: run left after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -5.296698 ; log likelihood = 0.000000
HIT 892: jump and jump opposite left w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -5.605009 ; log likelihood = 0.000000
HIT 893: run and turn right thrice w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.065198 ; log likelihood = 0.000000
HIT 894: jump after look opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP $0))))) ; log prior = -6.965525 ; log likelihood = 0.000000
HIT 895: jump opposite right and jump w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.315042 ; log likelihood = 0.000000
HIT 896: jump and walk opposite right w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -6.763020 ; log likelihood = 0.000000
HIT 897: walk twice after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.503841 ; log likelihood = 0.000000
HIT 898: walk after jump opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_WALK $0))))) ; log prior = -6.937372 ; log likelihood = 0.000000
HIT 900: turn opposite right and look twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.399147 ; log likelihood = 0.000000
HIT 902: jump opposite right and walk w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_WALK $0))))) ; log prior = -6.763020 ; log likelihood = 0.000000
HIT 903: walk twice after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.377760 ; log likelihood = 0.000000
HIT 905: walk right and walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -5.353124 ; log likelihood = 0.000000
HIT 906: turn left twice and look twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.350194 ; log likelihood = 0.000000
HIT 907: walk left after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -5.429846 ; log likelihood = 0.000000
HIT 908: walk left after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -6.980073 ; log likelihood = 0.000000
HIT 909: walk opposite right and jump w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_JUMP $0))))) ; log prior = -6.763020 ; log likelihood = 0.000000
HIT 911: run after turn right thrice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -5.173311 ; log likelihood = 0.000000
HIT 913: jump twice and turn opposite right w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.361300 ; log likelihood = 0.000000
HIT 915: jump right and jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -5.517560 ; log likelihood = 0.000000
HIT 917: look right and jump right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -6.947401 ; log likelihood = 0.000000
HIT 920: walk opposite left and walk w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.344394 ; log likelihood = 0.000000
HIT 921: walk left and look left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -6.886669 ; log likelihood = 0.000000
HIT 922: jump right after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -6.931824 ; log likelihood = 0.000000
HIT 924: look twice after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.357658 ; log likelihood = 0.000000
HIT 925: look opposite left and walk w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_WALK $0))))) ; log prior = -6.716250 ; log likelihood = 0.000000
HIT 926: walk after look opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_WALK $0))))) ; log prior = -6.719840 ; log likelihood = 0.000000
HIT 927: jump opposite left after walk w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -6.937372 ; log likelihood = 0.000000
HIT 928: walk opposite right and walk w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.380129 ; log likelihood = 0.000000
HIT 930: look and look opposite right w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -5.289142 ; log likelihood = 0.000000
HIT 932: walk right twice w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -5.345567 ; log likelihood = 0.000000
HIT 933: jump twice and turn right twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.285939 ; log likelihood = 0.000000
HIT 934: run thrice after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -5.233387 ; log likelihood = 0.000000
HIT 935: turn right thrice after run w/ (lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.173311 ; log likelihood = 0.000000
HIT 936: walk opposite left and look w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_LOOK $0))))) ; log prior = -6.716250 ; log likelihood = 0.000000
HIT 937: turn right twice after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.385551 ; log likelihood = 0.000000
HIT 938: jump right and walk right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -6.785672 ; log likelihood = 0.000000
HIT 939: jump right after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -6.815138 ; log likelihood = 0.000000
HIT 940: walk and jump opposite right w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -6.763020 ; log likelihood = 0.000000
HIT 941: run thrice and run left w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))) ; log prior = -5.238174 ; log likelihood = 0.000000
HIT 942: run left and turn opposite left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -4.865176 ; log likelihood = 0.000000
HIT 943: jump left after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -5.764194 ; log likelihood = 0.000000
HIT 944: turn opposite left after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.503841 ; log likelihood = 0.000000
HIT 946: turn left twice after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.377760 ; log likelihood = 0.000000
HIT 947: look opposite right and jump w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP $0))))) ; log prior = -6.745672 ; log likelihood = 0.000000
HIT 948: jump opposite right after walk w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -6.743666 ; log likelihood = 0.000000
HIT 949: walk opposite left after look w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -6.719840 ; log likelihood = 0.000000
HIT 951: run thrice and jump twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -6.235724 ; log likelihood = 0.000000
HIT 952: look and jump opposite left w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -7.007310 ; log likelihood = 0.000000
HIT 953: run opposite left after turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -4.853896 ; log likelihood = 0.000000
HIT 954: look right twice w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -5.363307 ; log likelihood = 0.000000
HIT 955: look left and walk left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -6.886669 ; log likelihood = 0.000000
HIT 956: walk right and jump right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -6.785672 ; log likelihood = 0.000000
HIT 958: turn left twice and walk twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.385534 ; log likelihood = 0.000000
HIT 959: walk right and walk left w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -6.799562 ; log likelihood = 0.000000
HIT 960: turn opposite left after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.290512 ; log likelihood = 0.000000
HIT 961: look twice and turn left twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.350194 ; log likelihood = 0.000000
HIT 962: walk left and walk right w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -6.799562 ; log likelihood = 0.000000
HIT 964: look left twice w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -5.399025 ; log likelihood = 0.000000
HIT 965: walk after jump opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_WALK $0))))) ; log prior = -6.743666 ; log likelihood = 0.000000
HIT 966: turn opposite right after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.344705 ; log likelihood = 0.000000
HIT 967: turn left twice after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.360810 ; log likelihood = 0.000000
HIT 968: jump after jump opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.302399 ; log likelihood = 0.000000
HIT 969: turn opposite right after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.378429 ; log likelihood = 0.000000
HIT 970: jump opposite right after look w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -6.759216 ; log likelihood = 0.000000
HIT 972: look after walk opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_LOOK $0))))) ; log prior = -6.719840 ; log likelihood = 0.000000
HIT 973: walk and look opposite left w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -6.716250 ; log likelihood = 0.000000
HIT 977: turn opposite left after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -4.853896 ; log likelihood = 0.000000
HIT 979: look right after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -6.842588 ; log likelihood = 0.000000
HIT 980: run right after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -4.768395 ; log likelihood = 0.000000
HIT 981: look twice after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.378429 ; log likelihood = 0.000000
HIT 982: walk twice and turn opposite right w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.684608 ; log likelihood = 0.000000
HIT 983: turn opposite right after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -4.768395 ; log likelihood = 0.000000
HIT 984: turn opposite right after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -6.752854 ; log likelihood = 0.000000
HIT 986: run thrice and run right w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))) ; log prior = -5.264429 ; log likelihood = 0.000000
HIT 987: turn opposite left and walk twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.491842 ; log likelihood = 0.000000
HIT 988: turn opposite right after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.653899 ; log likelihood = 0.000000
HIT 989: look left and look right w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -6.745795 ; log likelihood = 0.000000
HIT 990: look twice and turn opposite right w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.399147 ; log likelihood = 0.000000
HIT 991: jump twice and run thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.235724 ; log likelihood = 0.000000
HIT 992: run thrice after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.181840 ; log likelihood = 0.000000
HIT 993: jump left and jump right w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -6.973309 ; log likelihood = 0.000000
HIT 994: walk twice after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.385551 ; log likelihood = 0.000000
HIT 995: turn opposite left after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -7.161033 ; log likelihood = 0.000000
HIT 996: jump right after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -5.527102 ; log likelihood = 0.000000
HIT 998: jump twice after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.296382 ; log likelihood = 0.000000
HIT 1000: look after look opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.325647 ; log likelihood = 0.000000
HIT 1001: jump and look opposite right w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -6.745672 ; log likelihood = 0.000000
HIT 1002: turn left and run opposite right w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -6.737919 ; log likelihood = 0.000000
HIT 1003: jump twice and turn left twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.384455 ; log likelihood = 0.000000
HIT 1004: look opposite right after look w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -5.296360 ; log likelihood = 0.000000
HIT 1005: jump right and jump left w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -6.973309 ; log likelihood = 0.000000
HIT 1006: turn left twice and jump twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.384455 ; log likelihood = 0.000000
HIT 1008: look and walk opposite left w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -6.716250 ; log likelihood = 0.000000
HIT 1009: run thrice and look twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.103992 ; log likelihood = 0.000000
HIT 1010: look twice and turn right twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.305346 ; log likelihood = 0.000000
HIT 1011: jump after walk opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_JUMP $0))))) ; log prior = -6.937372 ; log likelihood = 0.000000
HIT 1012: run right and turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -4.784245 ; log likelihood = 0.000000
HIT 1013: jump right twice w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -5.577811 ; log likelihood = 0.000000
HIT 1016: look and jump opposite right w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -6.745672 ; log likelihood = 0.000000
HIT 1019: look right after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -5.490480 ; log likelihood = 0.000000
HIT 1020: walk right after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -6.842588 ; log likelihood = 0.000000
HIT 1021: run left and turn opposite right w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -6.737919 ; log likelihood = 0.000000
HIT 1022: look after jump opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK $0))))) ; log prior = -6.965525 ; log likelihood = 0.000000
HIT 1024: look right after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -6.761376 ; log likelihood = 0.000000
HIT 1025: jump twice and turn opposite left w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.295805 ; log likelihood = 0.000000
HIT 1026: run opposite left and turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))) ; log prior = -4.865176 ; log likelihood = 0.000000
HIT 1027: run opposite left after turn right w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -7.161033 ; log likelihood = 0.000000
HIT 1028: walk twice after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.653899 ; log likelihood = 0.000000
HIT 1029: run right and turn opposite left w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -7.272433 ; log likelihood = 0.000000
HIT 1030: jump left after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -6.931824 ; log likelihood = 0.000000
HIT 1031: jump left twice w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -5.500876 ; log likelihood = 0.000000
HIT 1032: run left after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -6.752854 ; log likelihood = 0.000000
HIT 1033: walk and walk opposite left w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -5.344394 ; log likelihood = 0.000000
HIT 1034: look opposite right and look w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.289142 ; log likelihood = 0.000000
HIT 1035: turn right after run opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RTURN $0))))) ; log prior = -7.161033 ; log likelihood = 0.000000
HIT 1036: run opposite left and turn right w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RTURN $0))))) ; log prior = -7.272433 ; log likelihood = 0.000000
HIT 1037: turn right and run opposite left w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -7.272433 ; log likelihood = 0.000000
HIT 1038: run opposite right and turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))) ; log prior = -4.784245 ; log likelihood = 0.000000
HIT 1039: jump opposite left and look w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK $0))))) ; log prior = -7.007310 ; log likelihood = 0.000000
HIT 1040: turn left twice and run left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -5.298886 ; log likelihood = 0.000000
HIT 1041: turn right twice after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.156674 ; log likelihood = 0.000000
HIT 1042: turn left after run opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))) ; log prior = -4.853896 ; log likelihood = 0.000000
HIT 1043: look right and look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -5.466160 ; log likelihood = 0.000000
HIT 1045: turn right thrice and run w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -5.065198 ; log likelihood = 0.000000
HIT 1046: jump left and look left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -7.180148 ; log likelihood = 0.000000
HIT 1049: look left after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -5.451587 ; log likelihood = 0.000000
HIT 1050: turn left twice after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.357658 ; log likelihood = 0.000000
HIT 1051: turn right twice and look twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.305346 ; log likelihood = 0.000000
HIT 1053: look left after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -6.871980 ; log likelihood = 0.000000
HIT 1054: walk left and walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -5.441831 ; log likelihood = 0.000000
HIT 1057: look after jump opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK $0))))) ; log prior = -6.759216 ; log likelihood = 0.000000
HIT 1058: walk twice and run thrice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.258350 ; log likelihood = 0.000000
HIT 1059: jump twice after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.360810 ; log likelihood = 0.000000
HIT 1060: turn right twice and walk twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.389173 ; log likelihood = 0.000000
HIT 1061: run left after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -4.853896 ; log likelihood = 0.000000
HIT 1062: walk twice and turn opposite left w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.491842 ; log likelihood = 0.000000
HIT 1065: walk right after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -6.815138 ; log likelihood = 0.000000
HIT 1066: walk opposite left after walk w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -5.355981 ; log likelihood = 0.000000
HIT 1067: look twice and run thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.103992 ; log likelihood = 0.000000
HIT 1068: turn left thrice and run w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -5.523046 ; log likelihood = 0.000000
HIT 1069: walk and walk opposite right w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -5.380129 ; log likelihood = 0.000000
HIT 1070: look opposite left after look w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -5.325647 ; log likelihood = 0.000000
HIT 1071: jump and look opposite left w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -7.007310 ; log likelihood = 0.000000
HIT 1072: look opposite right after jump w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -6.759216 ; log likelihood = 0.000000
HIT 1073: run thrice after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -5.237896 ; log likelihood = 0.000000
HIT 1074: turn left thrice after run w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.495993 ; log likelihood = 0.000000
HIT 1075: run thrice after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.132286 ; log likelihood = 0.000000
HIT 1076: turn opposite right and run right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -4.784245 ; log likelihood = 0.000000
HIT 1077: run right after run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))) ; log prior = -5.233387 ; log likelihood = 0.000000
HIT 1078: turn opposite left and look twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.420211 ; log likelihood = 0.000000
HIT 1079: run right after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -7.161033 ; log likelihood = 0.000000
HIT 1080: run left and run thrice w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -5.238174 ; log likelihood = 0.000000
HIT 1081: look twice after run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.132286 ; log likelihood = 0.000000
HIT 1082: look opposite left and look w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.322790 ; log likelihood = 0.000000
HIT 1083: run left and turn left twice w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.298886 ; log likelihood = 0.000000
HIT 1084: look right and look left w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -6.745795 ; log likelihood = 0.000000
HIT 1085: run opposite right and turn left w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_LTURN $0))))) ; log prior = -6.737919 ; log likelihood = 0.000000
HIT 1086: look twice and turn opposite left w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.420211 ; log likelihood = 0.000000
HIT 1087: walk opposite right after walk w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -5.374584 ; log likelihood = 0.000000
HIT 1088: walk left after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -6.871980 ; log likelihood = 0.000000
HIT 1089: turn left after run opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_LTURN $0))))) ; log prior = -6.752854 ; log likelihood = 0.000000
HIT 1090: jump opposite left after look w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -6.965525 ; log likelihood = 0.000000
HIT 1091: run opposite right after turn left w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -6.752854 ; log likelihood = 0.000000
HIT 1092: jump after walk opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_JUMP $0))))) ; log prior = -6.743666 ; log likelihood = 0.000000
HIT 1093: look left after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -6.761376 ; log likelihood = 0.000000
HIT 1096: walk right and look right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -6.839589 ; log likelihood = 0.000000
HIT 1097: look twice after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.445660 ; log likelihood = 0.000000
HIT 1098: turn left twice after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.296698 ; log likelihood = 0.000000
HIT 1099: walk after walk opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.374584 ; log likelihood = 0.000000
HIT 1100: jump twice after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.290512 ; log likelihood = 0.000000
HIT 1101: run right and run thrice w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -5.264429 ; log likelihood = 0.000000
HIT 1102: run right and turn right twice w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.014597 ; log likelihood = 0.000000
HIT 1104: walk after walk opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.355981 ; log likelihood = 0.000000
HIT 1105: look opposite left and jump w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP $0))))) ; log prior = -7.007310 ; log likelihood = 0.000000
HIT 1108: look left and look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -5.455962 ; log likelihood = 0.000000
HIT 1109: jump right and look right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -6.947401 ; log likelihood = 0.000000
HIT 1110: walk twice and turn left twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.385534 ; log likelihood = 0.000000
HIT 1111: jump opposite right after jump w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -5.302399 ; log likelihood = 0.000000
HIT 1113: look left after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -7.078920 ; log likelihood = 0.000000
HIT 1114: walk left twice w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -5.395473 ; log likelihood = 0.000000
HIT 1115: walk twice and turn right twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.389173 ; log likelihood = 0.000000
HIT 1117: turn right after run opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))) ; log prior = -4.768395 ; log likelihood = 0.000000
HIT 1118: jump left and jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -5.848696 ; log likelihood = 0.000000
HIT 1119: jump after look opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP $0))))) ; log prior = -6.759216 ; log likelihood = 0.000000
HIT 1120: turn opposite left after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.445660 ; log likelihood = 0.000000
HIT 1122: run left after run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))) ; log prior = -5.237896 ; log likelihood = 0.000000
HIT 1123: turn left and run opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -4.865176 ; log likelihood = 0.000000
HIT 1124: look opposite left after jump w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -6.965525 ; log likelihood = 0.000000
HIT 1126: jump and jump opposite right w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -5.315042 ; log likelihood = 0.000000
HIT 1127: turn right twice after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.307854 ; log likelihood = 0.000000
HIT 1128: turn opposite right and jump twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.361300 ; log likelihood = 0.000000
HIT 1129: jump twice after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.344705 ; log likelihood = 0.000000
HIT 1131: run after turn left thrice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -5.495993 ; log likelihood = 0.000000
HIT 1132: jump after jump opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.597713 ; log likelihood = 0.000000
HIT 1134: jump left after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -7.078920 ; log likelihood = 0.000000
HIT 1135: turn opposite left and run left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -4.865176 ; log likelihood = 0.000000
HIT 1136: jump left after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -6.980073 ; log likelihood = 0.000000
HIT 1137: turn opposite right and walk twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))) ; log prior = -5.684608 ; log likelihood = 0.000000
HIT 1138: turn opposite right and run left w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_RUN $0))))) ; log prior = -6.737919 ; log likelihood = 0.000000
HIT 1139: walk opposite left after jump w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -6.937372 ; log likelihood = 0.000000
HIT 1141: turn opposite left and run right w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -7.272433 ; log likelihood = 0.000000
HIT 1142: walk opposite right after jump w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -6.743666 ; log likelihood = 0.000000
HIT 1143: turn right twice and jump twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.285939 ; log likelihood = 0.000000
HIT 1144: jump opposite left and jump w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))) ; log prior = -5.605009 ; log likelihood = 0.000000
HIT 1145: jump twice after run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -6.181840 ; log likelihood = 0.000000
HIT 1146: run and turn left thrice w/ (lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.523046 ; log likelihood = 0.000000
HIT 1148: look left and jump left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -7.180148 ; log likelihood = 0.000000
HIT 1149: look opposite left after walk w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -6.719840 ; log likelihood = 0.000000
HIT 1150: turn right twice after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.296382 ; log likelihood = 0.000000
HIT 1151: run thrice and walk twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -6.258350 ; log likelihood = 0.000000
HIT 1152: look right and walk right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -6.839589 ; log likelihood = 0.000000
HIT 1153: jump opposite left after jump w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -5.597713 ; log likelihood = 0.000000
HIT 1154: look twice after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))) ; log prior = -5.307854 ; log likelihood = 0.000000
HIT 1155: run right after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))) ; log prior = -5.156674 ; log likelihood = 0.000000
HIT 1156: look left after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -6.765142 ; log likelihood = 0.000000
HIT 1158: turn opposite left and look right w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -7.052689 ; log likelihood = 0.000000
HIT 1159: turn right thrice after look w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.284031 ; log likelihood = 0.000000
HIT 1161: turn left twice and look right w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -7.065421 ; log likelihood = 0.000000
HIT 1162: walk opposite right and turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_RTURN $0))))) ; log prior = -4.794541 ; log likelihood = 0.000000
HIT 1163: run twice and walk thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -7.204867 ; log likelihood = 0.000000
HIT 1164: walk left after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -6.749238 ; log likelihood = 0.000000
HIT 1165: turn left twice and jump left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -5.822687 ; log likelihood = 0.000000
HIT 1166: look right after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -4.795127 ; log likelihood = 0.000000
HIT 1167: jump thrice and run twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.244062 ; log likelihood = 0.000000
HIT 1168: turn left and jump opposite right w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -6.696591 ; log likelihood = 0.000000
HIT 1169: turn left after walk opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_LTURN $0))))) ; log prior = -4.868945 ; log likelihood = 0.000000
HIT 1170: turn opposite right after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -4.782053 ; log likelihood = 0.000000
HIT 1171: walk left and turn right twice w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -6.814148 ; log likelihood = 0.000000
HIT 1172: turn right twice and jump left w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -7.265817 ; log likelihood = 0.000000
HIT 1173: run twice and look thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.546139 ; log likelihood = 0.000000
HIT 1174: look left after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -4.863720 ; log likelihood = 0.000000
HIT 1175: jump left and turn opposite left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.034820 ; log likelihood = 0.000000
HIT 1176: turn right twice and look left w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -6.981673 ; log likelihood = 0.000000
HIT 1177: turn left twice after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.156063 ; log likelihood = 0.000000
HIT 1178: jump left after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -5.005007 ; log likelihood = 0.000000
HIT 1179: turn opposite left after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -4.863720 ; log likelihood = 0.000000
HIT 1180: walk left after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -4.868945 ; log likelihood = 0.000000
HIT 1182: look opposite left and turn right w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN $0))))) ; log prior = -7.052689 ; log likelihood = 0.000000
HIT 1183: look and turn right thrice w/ (lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.226523 ; log likelihood = 0.000000
HIT 1184: look opposite left after turn right w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -6.956093 ; log likelihood = 0.000000
HIT 1185: jump right and turn opposite left w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -7.269681 ; log likelihood = 0.000000
HIT 1186: jump left and turn opposite right w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -6.696591 ; log likelihood = 0.000000
HIT 1188: look right and turn right twice w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.225493 ; log likelihood = 0.000000
HIT 1189: turn right twice after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -7.051113 ; log likelihood = 0.000000
HIT 1190: walk right after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -4.782053 ; log likelihood = 0.000000
HIT 1191: look after turn left thrice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -5.124463 ; log likelihood = 0.000000
HIT 1192: walk left and turn opposite right w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -6.728077 ; log likelihood = 0.000000
HIT 1193: jump opposite right after turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -4.780344 ; log likelihood = 0.000000
HIT 1194: look thrice and run twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.546139 ; log likelihood = 0.000000
HIT 1195: jump opposite right and turn left w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN $0))))) ; log prior = -6.696591 ; log likelihood = 0.000000
HIT 1196: walk right and turn left twice w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -7.184178 ; log likelihood = 0.000000
HIT 1197: turn left after look opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN $0))))) ; log prior = -4.863720 ; log likelihood = 0.000000
HIT 1198: turn opposite left after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -7.264279 ; log likelihood = 0.000000
HIT 1199: look opposite right after turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -4.795127 ; log likelihood = 0.000000
HIT 1200: look opposite right and turn left w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN $0))))) ; log prior = -6.723557 ; log likelihood = 0.000000
HIT 1202: look left after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -7.051113 ; log likelihood = 0.000000
HIT 1204: walk left after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -5.156063 ; log likelihood = 0.000000
HIT 1206: turn left twice after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -7.152514 ; log likelihood = 0.000000
HIT 1207: turn right twice after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.004485 ; log likelihood = 0.000000
HIT 1208: turn opposite right and walk right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -4.794541 ; log likelihood = 0.000000
HIT 1210: turn right and walk opposite left w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -7.334805 ; log likelihood = 0.000000
HIT 1211: turn opposite right after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -6.749238 ; log likelihood = 0.000000
HIT 1212: walk opposite right after turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -4.782053 ; log likelihood = 0.000000
HIT 1213: run twice after jump thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.359860 ; log likelihood = 0.000000
HIT 1214: turn left after jump opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN $0))))) ; log prior = -5.005007 ; log likelihood = 0.000000
HIT 1215: look right after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -6.956093 ; log likelihood = 0.000000
HIT 1216: turn opposite left after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -7.186930 ; log likelihood = 0.000000
HIT 1217: run twice after look thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.657685 ; log likelihood = 0.000000
HIT 1218: turn opposite right and jump left w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -6.696591 ; log likelihood = 0.000000
HIT 1219: turn left twice after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -7.032514 ; log likelihood = 0.000000
HIT 1220: turn opposite left and look left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -4.884254 ; log likelihood = 0.000000
HIT 1222: walk opposite right and turn left w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_LTURN $0))))) ; log prior = -6.728077 ; log likelihood = 0.000000
HIT 1224: turn left after jump opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN $0))))) ; log prior = -6.702978 ; log likelihood = 0.000000
HIT 1225: look left and turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -4.884254 ; log likelihood = 0.000000
HIT 1226: turn left thrice after look w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.124463 ; log likelihood = 0.000000
HIT 1227: turn left and look opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -4.884254 ; log likelihood = 0.000000
HIT 1228: turn left and walk opposite right w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -6.728077 ; log likelihood = 0.000000
HIT 1229: jump thrice after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -6.359860 ; log likelihood = 0.000000
HIT 1230: look left and turn left twice w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.240163 ; log likelihood = 0.000000
HIT 1231: turn opposite left after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -4.868945 ; log likelihood = 0.000000
HIT 1232: look right after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -7.032514 ; log likelihood = 0.000000
HIT 1233: turn right thrice and walk w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -5.018941 ; log likelihood = 0.000000
HIT 1234: turn right twice after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.379243 ; log likelihood = 0.000000
HIT 1235: turn right and jump opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -4.773053 ; log likelihood = 0.000000
HIT 1237: look opposite right after turn left w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -6.765142 ; log likelihood = 0.000000
HIT 1238: look left and turn right twice w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -6.981673 ; log likelihood = 0.000000
HIT 1239: turn right and walk opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -4.794541 ; log likelihood = 0.000000
HIT 1242: jump left after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -5.746647 ; log likelihood = 0.000000
HIT 1243: turn opposite left and jump right w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -7.269681 ; log likelihood = 0.000000
HIT 1244: turn right twice and look right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -5.225493 ; log likelihood = 0.000000
HIT 1245: jump opposite right after turn left w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -6.702978 ; log likelihood = 0.000000
HIT 1246: turn left thrice after jump w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.878957 ; log likelihood = 0.000000
HIT 1247: turn opposite right after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -6.765142 ; log likelihood = 0.000000
HIT 1248: run twice and jump thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -6.244062 ; log likelihood = 0.000000
HIT 1249: turn opposite left after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.005007 ; log likelihood = 0.000000
HIT 1251: turn left twice and walk left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -5.159876 ; log likelihood = 0.000000
HIT 1252: turn opposite right after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -4.795127 ; log likelihood = 0.000000
HIT 1253: walk right after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -7.152514 ; log likelihood = 0.000000
HIT 1254: turn left twice and walk right w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -7.184178 ; log likelihood = 0.000000
HIT 1255: turn left twice after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.164187 ; log likelihood = 0.000000
HIT 1256: walk opposite left and turn right w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_RTURN $0))))) ; log prior = -7.334805 ; log likelihood = 0.000000
HIT 1257: turn opposite right after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -6.702978 ; log likelihood = 0.000000
HIT 1258: turn opposite left and walk right w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -7.334805 ; log likelihood = 0.000000
HIT 1259: turn right thrice and look w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -5.226523 ; log likelihood = 0.000000
HIT 1260: turn right twice and walk left w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -6.814148 ; log likelihood = 0.000000
HIT 1261: jump opposite left and turn right w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN $0))))) ; log prior = -7.269681 ; log likelihood = 0.000000
HIT 1262: walk after turn right thrice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -5.016609 ; log likelihood = 0.000000
HIT 1263: turn left and jump opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -5.034820 ; log likelihood = 0.000000
HIT 1265: turn right thrice after walk w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.016609 ; log likelihood = 0.000000
HIT 1267: look after turn right thrice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -5.284031 ; log likelihood = 0.000000
HIT 1268: turn right and look opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -4.777067 ; log likelihood = 0.000000
HIT 1269: turn opposite right and jump right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -4.773053 ; log likelihood = 0.000000
HIT 1270: jump opposite left and turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN $0))))) ; log prior = -5.034820 ; log likelihood = 0.000000
HIT 1271: walk after turn left thrice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -5.176408 ; log likelihood = 0.000000
HIT 1272: turn right thrice and jump w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -5.588034 ; log likelihood = 0.000000
HIT 1273: look right and turn opposite right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -4.777067 ; log likelihood = 0.000000
HIT 1275: walk and turn right thrice w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.018941 ; log likelihood = 0.000000
HIT 1276: look opposite right and turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN $0))))) ; log prior = -4.777067 ; log likelihood = 0.000000
HIT 1277: walk opposite left after turn right w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -7.264279 ; log likelihood = 0.000000
HIT 1280: look left after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -5.164187 ; log likelihood = 0.000000
HIT 1281: turn left and walk opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -4.870067 ; log likelihood = 0.000000
HIT 1282: look opposite left after turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -4.863720 ; log likelihood = 0.000000
HIT 1283: jump right after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -4.780344 ; log likelihood = 0.000000
HIT 1285: walk opposite left after turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -4.868945 ; log likelihood = 0.000000
HIT 1286: look opposite left and turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN $0))))) ; log prior = -4.884254 ; log likelihood = 0.000000
HIT 1287: turn right thrice after jump w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.608316 ; log likelihood = 0.000000
HIT 1288: look right after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -5.278544 ; log likelihood = 0.000000
HIT 1289: walk and turn left thrice w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.219228 ; log likelihood = 0.000000
HIT 1290: look right and turn opposite left w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -7.052689 ; log likelihood = 0.000000
HIT 1291: turn opposite right and look left w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -6.723557 ; log likelihood = 0.000000
HIT 1293: turn right after jump opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN $0))))) ; log prior = -4.780344 ; log likelihood = 0.000000
HIT 1294: look right and turn left twice w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -7.065421 ; log likelihood = 0.000000
HIT 1295: jump left and turn right twice w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -7.265817 ; log likelihood = 0.000000
HIT 1296: walk left and turn opposite left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -4.870067 ; log likelihood = 0.000000
HIT 1299: jump after turn left thrice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -5.878957 ; log likelihood = 0.000000
HIT 1300: jump right after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -5.379243 ; log likelihood = 0.000000
HIT 1301: walk left after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -6.835818 ; log likelihood = 0.000000
HIT 1303: jump right after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -7.186930 ; log likelihood = 0.000000
HIT 1304: jump and turn right thrice w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.588034 ; log likelihood = 0.000000
HIT 1305: turn left after walk opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_LTURN $0))))) ; log prior = -6.749238 ; log likelihood = 0.000000
HIT 1306: turn right after look opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN $0))))) ; log prior = -4.795127 ; log likelihood = 0.000000
HIT 1307: jump opposite left after turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -5.005007 ; log likelihood = 0.000000
HIT 1308: turn left thrice and look w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -5.108477 ; log likelihood = 0.000000
HIT 1309: jump right and turn right twice w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.336312 ; log likelihood = 0.000000
HIT 1310: turn right after walk opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_RTURN $0))))) ; log prior = -7.264279 ; log likelihood = 0.000000
HIT 1311: turn opposite left after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -6.956093 ; log likelihood = 0.000000
HIT 1312: turn opposite left and jump left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -5.034820 ; log likelihood = 0.000000
HIT 1313: turn right twice and walk right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -4.962367 ; log likelihood = 0.000000
HIT 1314: turn right and jump opposite left w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -7.269681 ; log likelihood = 0.000000
HIT 1315: walk right and turn opposite right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -4.794541 ; log likelihood = 0.000000
HIT 1316: jump opposite left after turn right w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -7.186930 ; log likelihood = 0.000000
HIT 1317: turn left twice and look left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -5.240163 ; log likelihood = 0.000000
HIT 1318: walk left and turn left twice w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.159876 ; log likelihood = 0.000000
HIT 1319: walk opposite left and turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_LTURN $0))))) ; log prior = -4.870067 ; log likelihood = 0.000000
HIT 1320: walk right and turn opposite left w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -7.334805 ; log likelihood = 0.000000
HIT 1321: turn right twice after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -7.311569 ; log likelihood = 0.000000
HIT 1322: turn left after look opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN $0))))) ; log prior = -6.765142 ; log likelihood = 0.000000
HIT 1323: walk right after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -5.004485 ; log likelihood = 0.000000
HIT 1324: look left and turn opposite right w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -6.723557 ; log likelihood = 0.000000
HIT 1325: turn opposite right and walk left w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -6.728077 ; log likelihood = 0.000000
HIT 1326: walk thrice and run twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -7.204867 ; log likelihood = 0.000000
HIT 1327: look and turn left thrice w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.108477 ; log likelihood = 0.000000
HIT 1328: turn left thrice and walk w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -5.219228 ; log likelihood = 0.000000
HIT 1329: turn left and look opposite right w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -6.723557 ; log likelihood = 0.000000
HIT 1330: jump left after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -7.311569 ; log likelihood = 0.000000
HIT 1331: turn right after look opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN $0))))) ; log prior = -6.956093 ; log likelihood = 0.000000
HIT 1333: walk opposite right after turn left w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -6.749238 ; log likelihood = 0.000000
HIT 1334: jump left and turn left twice w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.822687 ; log likelihood = 0.000000
HIT 1336: jump right and turn opposite right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -4.773053 ; log likelihood = 0.000000
HIT 1337: turn left thrice and jump w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -5.898795 ; log likelihood = 0.000000
HIT 1338: turn left thrice after walk w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.176408 ; log likelihood = 0.000000
HIT 1340: jump and turn left thrice w/ (lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.898795 ; log likelihood = 0.000000
HIT 1341: turn right after walk opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_RTURN $0))))) ; log prior = -4.782053 ; log likelihood = 0.000000
HIT 1342: turn right twice after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -6.835818 ; log likelihood = 0.000000
HIT 1343: look thrice after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.657685 ; log likelihood = 0.000000
HIT 1344: turn right after jump opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN $0))))) ; log prior = -7.186930 ; log likelihood = 0.000000
HIT 1345: turn right and look opposite left w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))) ; log prior = -7.052689 ; log likelihood = 0.000000
HIT 1346: turn opposite right after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -4.780344 ; log likelihood = 0.000000
HIT 1347: jump after turn right thrice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -5.608316 ; log likelihood = 0.000000
HIT 1348: walk right and turn right twice w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -4.962367 ; log likelihood = 0.000000
HIT 1349: jump opposite right and turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN $0))))) ; log prior = -4.773053 ; log likelihood = 0.000000
HIT 1350: turn right twice and jump right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))) ; log prior = -5.336312 ; log likelihood = 0.000000
HIT 1351: walk right after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0))))) ; log prior = -7.264279 ; log likelihood = 0.000000
HIT 1353: jump left after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0))))) ; log prior = -6.702978 ; log likelihood = 0.000000
HIT 1354: turn opposite left and walk left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))) ; log prior = -4.870067 ; log likelihood = 0.000000
HIT 1355: turn right twice after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.278544 ; log likelihood = 0.000000
HIT 1356: turn left twice after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.746647 ; log likelihood = 0.000000
HIT 1359: turn opposite right and look right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))) ; log prior = -4.777067 ; log likelihood = 0.000000
HIT 1360: turn right twice and turn opposite left w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.411830 ; log likelihood = 0.000000
HIT 1361: turn opposite left after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -2.546018 ; log likelihood = 0.000000
HIT 1362: turn right after turn left thrice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN $0))))) ; log prior = -5.555678 ; log likelihood = 0.000000
HIT 1363: run thrice and turn right twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))))) ; log prior = -6.086411 ; log likelihood = 0.000000
HIT 1364: turn opposite left after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.403061 ; log likelihood = 0.000000
HIT 1365: run opposite left and run twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.374526 ; log likelihood = 0.000000
HIT 1366: turn right twice after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.354239 ; log likelihood = 0.000000
HIT 1367: turn right twice and run thrice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.086411 ; log likelihood = 0.000000
HIT 1368: run twice and run opposite right w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))))) ; log prior = -6.089972 ; log likelihood = 0.000000
HIT 1369: turn left after turn right thrice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN $0))))) ; log prior = -5.087621 ; log likelihood = 0.000000
HIT 1370: turn left twice after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -2.546018 ; log likelihood = 0.000000
HIT 1371: turn left thrice and turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -2.581422 ; log likelihood = 0.000000
HIT 1372: turn opposite right after run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))))) ; log prior = -6.683623 ; log likelihood = 0.000000
HIT 1373: turn left twice and turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -2.554110 ; log likelihood = 0.000000
HIT 1374: turn opposite right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -2.538852 ; log likelihood = 0.000000
HIT 1375: turn opposite right and turn left twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.411830 ; log likelihood = 0.000000
HIT 1376: run thrice after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.125250 ; log likelihood = 0.000000
HIT 1377: turn opposite left and turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -2.554110 ; log likelihood = 0.000000
HIT 1378: turn opposite right and turn opposite left w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.444059 ; log likelihood = 0.000000
HIT 1380: run opposite left after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))))) ; log prior = -6.395692 ; log likelihood = 0.000000
HIT 1381: turn right and turn left thrice w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.708713 ; log likelihood = 0.000000
HIT 1382: turn opposite right after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.398299 ; log likelihood = 0.000000
HIT 1384: turn opposite left and turn opposite right w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.444059 ; log likelihood = 0.000000
HIT 1385: turn left twice and turn right twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.379411 ; log likelihood = 0.000000
HIT 1386: turn left twice after run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))))) ; log prior = -6.125250 ; log likelihood = 0.000000
HIT 1387: turn opposite left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -2.606983 ; log likelihood = 0.000000
HIT 1388: turn right twice after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -2.576361 ; log likelihood = 0.000000
HIT 1389: turn opposite right after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -2.516429 ; log likelihood = 0.000000
HIT 1390: turn right twice after run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))))) ; log prior = -6.118885 ; log likelihood = 0.000000
HIT 1391: turn right thrice and turn left w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN $0))))) ; log prior = -5.000875 ; log likelihood = 0.000000
HIT 1392: turn opposite left and turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -2.592467 ; log likelihood = 0.000000
HIT 1393: turn opposite left and run thrice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.234873 ; log likelihood = 0.000000
HIT 1395: run twice after run opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.395692 ; log likelihood = 0.000000
HIT 1396: turn opposite left after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -2.583967 ; log likelihood = 0.000000
HIT 1397: turn right twice after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -2.516429 ; log likelihood = 0.000000
HIT 1398: turn opposite right after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.403061 ; log likelihood = 0.000000
HIT 1399: turn opposite right and turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -2.513082 ; log likelihood = 0.000000
HIT 1400: run opposite right after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))))) ; log prior = -6.131693 ; log likelihood = 0.000000
HIT 1401: run thrice and turn opposite left w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))))) ; log prior = -6.234873 ; log likelihood = 0.000000
HIT 1402: run twice and run opposite left w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))))) ; log prior = -6.374526 ; log likelihood = 0.000000
HIT 1403: turn opposite right and turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -2.514111 ; log likelihood = 0.000000
HIT 1404: run opposite right and run twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.089972 ; log likelihood = 0.000000
HIT 1405: turn left thrice after turn right w/ (lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.555678 ; log likelihood = 0.000000
HIT 1407: turn right thrice and turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -2.535038 ; log likelihood = 0.000000
HIT 1408: turn opposite left and turn right twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.411830 ; log likelihood = 0.000000
HIT 1411: run thrice and run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))) ; log prior = -2.888003 ; log likelihood = 0.000000
HIT 1412: turn left twice and run thrice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.127210 ; log likelihood = 0.000000
HIT 1413: turn left thrice and turn right w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN $0))))) ; log prior = -5.708713 ; log likelihood = 0.000000
HIT 1415: turn opposite right and run thrice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.836262 ; log likelihood = 0.000000
HIT 1416: turn right twice and turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -2.514111 ; log likelihood = 0.000000
HIT 1417: turn right twice after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.398299 ; log likelihood = 0.000000
HIT 1418: turn opposite right after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -2.517600 ; log likelihood = 0.000000
HIT 1419: run thrice after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.683623 ; log likelihood = 0.000000
HIT 1420: turn right and turn right thrice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -2.535038 ; log likelihood = 0.000000
HIT 1421: turn opposite left after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.398299 ; log likelihood = 0.000000
HIT 1422: turn around right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -2.635762 ; log likelihood = 0.000000
HIT 1423: turn left twice after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -2.637896 ; log likelihood = 0.000000
HIT 1424: turn left twice after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.354239 ; log likelihood = 0.000000
HIT 1426: run thrice and turn left twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))))) ; log prior = -6.127210 ; log likelihood = 0.000000
HIT 1427: run twice after run opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.131693 ; log likelihood = 0.000000
HIT 1428: turn right after turn right thrice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -2.545294 ; log likelihood = 0.000000
HIT 1429: turn around left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -3.065134 ; log likelihood = 0.000000
HIT 1430: turn left twice and turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -2.666386 ; log likelihood = 0.000000
HIT 1431: turn right twice and turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -2.551034 ; log likelihood = 0.000000
HIT 1432: turn right thrice after turn left w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.087621 ; log likelihood = 0.000000
HIT 1433: run thrice and turn opposite right w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))))) ; log prior = -6.836262 ; log likelihood = 0.000000
HIT 1434: turn left twice and turn opposite right w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.411830 ; log likelihood = 0.000000
HIT 1435: turn left and turn left thrice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -2.581422 ; log likelihood = 0.000000
HIT 1436: turn left thrice after turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -2.570401 ; log likelihood = 0.000000
HIT 1437: run thrice after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.231672 ; log likelihood = 0.000000
HIT 1438: run thrice after run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))) ; log prior = -2.887214 ; log likelihood = 0.000000
HIT 1439: turn left twice after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.398299 ; log likelihood = 0.000000
HIT 1440: turn right twice and turn left twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -5.379411 ; log likelihood = 0.000000
HIT 1441: turn right thrice after turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -2.545294 ; log likelihood = 0.000000
HIT 1442: turn left and turn right thrice w/ (lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))) ; log prior = -5.000875 ; log likelihood = 0.000000
HIT 1443: run thrice after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.118885 ; log likelihood = 0.000000
HIT 1444: turn left after turn left thrice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))) ; log prior = -2.570401 ; log likelihood = 0.000000
HIT 1445: turn opposite left after run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))))) ; log prior = -6.231672 ; log likelihood = 0.000000
HIT 1451: look thrice after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -2.732055 ; log likelihood = 0.000000
HIT 1455: jump thrice after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -2.805384 ; log likelihood = 0.000000
HIT 1458: look twice and look thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -2.733069 ; log likelihood = 0.000000
HIT 1463: look thrice and look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -2.733069 ; log likelihood = 0.000000
HIT 1469: walk thrice after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -6.478399 ; log likelihood = 0.000000
HIT 1471: walk thrice after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -2.724911 ; log likelihood = 0.000000
HIT 1475: jump twice after jump thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -2.805384 ; log likelihood = 0.000000
HIT 1478: jump twice and jump thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -2.797723 ; log likelihood = 0.000000
HIT 1479: look thrice after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.569383 ; log likelihood = 0.000000
HIT 1482: walk twice and walk thrice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -2.724276 ; log likelihood = 0.000000
HIT 1488: look thrice after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.097339 ; log likelihood = 0.000000
HIT 1494: walk thrice and walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -2.724276 ; log likelihood = 0.000000
HIT 1510: walk twice after walk thrice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -2.724911 ; log likelihood = 0.000000
HIT 1512: look twice after jump thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.084837 ; log likelihood = 0.000000
HIT 1522: jump twice after look thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -6.569383 ; log likelihood = 0.000000
HIT 1530: look twice after look thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -2.732055 ; log likelihood = 0.000000
HIT 1531: walk twice after look thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -6.097339 ; log likelihood = 0.000000
HIT 1534: look twice after walk thrice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.478399 ; log likelihood = 0.000000
HIT 1549: jump thrice after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -6.084837 ; log likelihood = 0.000000
HIT 1553: jump thrice and jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -2.797723 ; log likelihood = 0.000000
HIT 1555: run opposite right after run right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))))) ; log prior = -6.191791 ; log likelihood = 0.000000
HIT 1558: turn left thrice and run twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.795486 ; log likelihood = 0.000000
HIT 1561: walk thrice and walk right w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))) ; log prior = -5.338824 ; log likelihood = 0.000000
HIT 1562: run right twice after turn right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))) ; log prior = -6.216425 ; log likelihood = 0.000000
HIT 1564: turn right thrice after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))) ; log prior = -6.781874 ; log likelihood = 0.000000
HIT 1569: jump thrice and jump left w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))) ; log prior = -5.262822 ; log likelihood = 0.000000
HIT 1573: run twice and turn left thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))) ; log prior = -6.795486 ; log likelihood = 0.000000
HIT 1574: jump left and jump thrice w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -5.262822 ; log likelihood = 0.000000
HIT 1575: run twice after turn left thrice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.789742 ; log likelihood = 0.000000
HIT 1576: walk right after walk thrice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))) ; log prior = -5.343921 ; log likelihood = 0.000000
HIT 1586: run right twice and turn right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0)))))) ; log prior = -6.144747 ; log likelihood = 0.000000
HIT 1590: walk thrice and walk left w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))) ; log prior = -5.274949 ; log likelihood = 0.000000
HIT 1591: turn left thrice after run twice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))) ; log prior = -6.789742 ; log likelihood = 0.000000
HIT 1594: look right after look thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))) ; log prior = -5.255807 ; log likelihood = 0.000000
HIT 1596: run twice after turn right thrice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.781874 ; log likelihood = 0.000000
HIT 1597: jump thrice after jump left w/ (lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -5.234202 ; log likelihood = 0.000000
HIT 1603: walk thrice after walk left w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -5.293462 ; log likelihood = 0.000000
HIT 1606: run right and run opposite right w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))))) ; log prior = -6.133092 ; log likelihood = 0.000000
HIT 1607: walk right and walk thrice w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -5.338824 ; log likelihood = 0.000000
HIT 1612: turn right after run right twice w/ (lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0)))))) ; log prior = -6.216425 ; log likelihood = 0.000000
HIT 1614: look left and look thrice w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -5.337882 ; log likelihood = 0.000000
HIT 1618: run left twice and turn left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0)))))) ; log prior = -6.300391 ; log likelihood = 0.000000
HIT 1626: walk left after walk thrice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))) ; log prior = -5.293462 ; log likelihood = 0.000000
HIT 1631: look thrice and look left w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))) ; log prior = -5.337882 ; log likelihood = 0.000000
HIT 1636: turn left after run left twice w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0)))))) ; log prior = -6.298445 ; log likelihood = 0.000000
HIT 1642: run twice and turn right thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))) ; log prior = -6.593529 ; log likelihood = 0.000000
HIT 1645: turn right and run right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))) ; log prior = -6.144747 ; log likelihood = 0.000000
HIT 1648: jump right after jump thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))) ; log prior = -5.251580 ; log likelihood = 0.000000
HIT 1650: jump left after jump thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))) ; log prior = -5.234202 ; log likelihood = 0.000000
HIT 1658: run left after run opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))) ; log prior = -6.582413 ; log likelihood = 0.000000
HIT 1661: walk thrice after walk right w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -5.343921 ; log likelihood = 0.000000
HIT 1666: walk left and walk thrice w/ (lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -5.274949 ; log likelihood = 0.000000
HIT 1676: run left twice after turn left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))) ; log prior = -6.298445 ; log likelihood = 0.000000
HIT 1677: look thrice after look right w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -5.255807 ; log likelihood = 0.000000
HIT 1680: turn right thrice and run twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0)))))) ; log prior = -6.593529 ; log likelihood = 0.000000
HIT 1682: run right after run opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))) ; log prior = -6.191791 ; log likelihood = 0.000000
HIT 1684: look right and look thrice w/ (lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -5.270383 ; log likelihood = 0.000000
HIT 1687: look thrice and look right w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))) ; log prior = -5.270383 ; log likelihood = 0.000000
HIT 1689: jump thrice and jump right w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))) ; log prior = -5.255889 ; log likelihood = 0.000000
HIT 1691: jump right and jump thrice w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -5.255889 ; log likelihood = 0.000000
HIT 1692: turn left and run left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))) ; log prior = -6.300391 ; log likelihood = 0.000000
HIT 1694: jump thrice after jump right w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -5.251580 ; log likelihood = 0.000000
HIT 1698: look left after look thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))) ; log prior = -5.340700 ; log likelihood = 0.000000
HIT 1700: look thrice after look left w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -5.340700 ; log likelihood = 0.000000
HIT 1707: run opposite right and run right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))) ; log prior = -6.133092 ; log likelihood = 0.000000
HIT 1709: run opposite left after run left w/ (lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))))) ; log prior = -6.582413 ; log likelihood = 0.000000
HIT 1716: jump thrice and run thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))) ; log prior = -7.064138 ; log likelihood = 0.000000
HIT 1718: walk twice and walk opposite left w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))))) ; log prior = -6.224753 ; log likelihood = 0.000000
HIT 1722: look opposite right after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))))) ; log prior = -6.085211 ; log likelihood = 0.000000
HIT 1733: jump thrice and turn opposite right w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))))) ; log prior = -6.329027 ; log likelihood = 0.000000
HIT 1735: jump twice after jump opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -6.131590 ; log likelihood = 0.000000
HIT 1743: turn opposite left after jump thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))))) ; log prior = -6.086889 ; log likelihood = 0.000000
HIT 1744: look after look left twice w/ (lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.274542 ; log likelihood = 0.000000
HIT 1750: turn left twice after jump thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))))) ; log prior = -6.301028 ; log likelihood = 0.000000
HIT 1752: jump and jump right twice w/ (lambda (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))) ; log prior = -6.496689 ; log likelihood = 0.000000
HIT 1754: jump right twice and jump w/ (lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -6.496689 ; log likelihood = 0.000000
HIT 1757: walk thrice after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -6.946795 ; log likelihood = 0.000000
HIT 1759: jump opposite left and jump twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -6.652185 ; log likelihood = 0.000000
HIT 1760: look thrice after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.132588 ; log likelihood = 0.000000
HIT 1761: look twice and look opposite right w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))))) ; log prior = -6.081750 ; log likelihood = 0.000000
HIT 1763: jump twice and jump opposite right w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))))) ; log prior = -6.128431 ; log likelihood = 0.000000
HIT 1764: walk thrice and turn opposite left w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))))) ; log prior = -6.481464 ; log likelihood = 0.000000
HIT 1769: look twice after look opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.156840 ; log likelihood = 0.000000
HIT 1771: look opposite left after look twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))))) ; log prior = -6.156840 ; log likelihood = 0.000000
HIT 1779: walk twice after walk opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -6.235106 ; log likelihood = 0.000000
HIT 1780: walk thrice after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -6.176175 ; log likelihood = 0.000000
HIT 1783: look thrice after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.082630 ; log likelihood = 0.000000
HIT 1784: jump twice and jump opposite left w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))))) ; log prior = -6.652185 ; log likelihood = 0.000000
HIT 1786: walk thrice after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -6.112113 ; log likelihood = 0.000000
HIT 1790: turn left twice after look thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))))) ; log prior = -6.132588 ; log likelihood = 0.000000
HIT 1793: turn opposite right and jump thrice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -6.329027 ; log likelihood = 0.000000
HIT 1796: jump thrice after turn right twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -6.266776 ; log likelihood = 0.000000
HIT 1803: look thrice after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.615852 ; log likelihood = 0.000000
HIT 1806: turn opposite left and walk thrice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -6.481464 ; log likelihood = 0.000000
HIT 1807: look thrice and turn right twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))))) ; log prior = -6.081809 ; log likelihood = 0.000000
HIT 1812: turn right twice and look thrice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.081809 ; log likelihood = 0.000000
HIT 1818: turn opposite right after walk thrice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))))) ; log prior = -6.946795 ; log likelihood = 0.000000
HIT 1820: jump opposite right and jump twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -6.128431 ; log likelihood = 0.000000
HIT 1829: jump thrice after run thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))) ; log prior = -7.048257 ; log likelihood = 0.000000
HIT 1834: turn opposite left and look thrice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.621262 ; log likelihood = 0.000000
HIT 1835: jump opposite right after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))))) ; log prior = -6.131590 ; log likelihood = 0.000000
HIT 1838: walk thrice and turn right twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))))) ; log prior = -6.106602 ; log likelihood = 0.000000
HIT 1846: turn right twice after look thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))))) ; log prior = -6.082630 ; log likelihood = 0.000000
HIT 1850: look twice and look opposite left w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))))) ; log prior = -6.176018 ; log likelihood = 0.000000
HIT 1852: turn opposite left and jump thrice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -6.083781 ; log likelihood = 0.000000
HIT 1854: jump thrice after turn left twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -6.301028 ; log likelihood = 0.000000
HIT 1863: run thrice after jump thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))) ; log prior = -7.048257 ; log likelihood = 0.000000
HIT 1864: look left twice after look w/ (lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))) ; log prior = -6.274542 ; log likelihood = 0.000000
HIT 1868: look opposite left and look twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.176018 ; log likelihood = 0.000000
HIT 1871: turn right twice and jump thrice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -6.248421 ; log likelihood = 0.000000
HIT 1876: walk right twice and walk w/ (lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -6.178155 ; log likelihood = 0.000000
HIT 1884: jump opposite left after jump twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))))) ; log prior = -6.656158 ; log likelihood = 0.000000
HIT 1885: look thrice and turn left twice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))))) ; log prior = -6.151778 ; log likelihood = 0.000000
HIT 1887: walk opposite right and walk twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -6.184322 ; log likelihood = 0.000000
HIT 1891: look twice after look opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.085211 ; log likelihood = 0.000000
HIT 1892: look thrice and turn opposite right w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))))) ; log prior = -6.630761 ; log likelihood = 0.000000
HIT 1893: jump thrice and turn right twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))))) ; log prior = -6.248421 ; log likelihood = 0.000000
HIT 1894: walk twice and walk opposite right w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))))) ; log prior = -6.184322 ; log likelihood = 0.000000
HIT 1898: walk thrice after turn opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -6.541750 ; log likelihood = 0.000000
HIT 1900: turn right twice and walk thrice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -6.106602 ; log likelihood = 0.000000
HIT 1908: walk and walk right twice w/ (lambda (SCAN_WALK (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))) ; log prior = -6.178155 ; log likelihood = 0.000000
HIT 1914: walk opposite left and walk twice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -6.224753 ; log likelihood = 0.000000
HIT 1919: jump thrice after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -6.314393 ; log likelihood = 0.000000
HIT 1920: turn opposite right and walk thrice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -6.929325 ; log likelihood = 0.000000
HIT 1922: look thrice after turn opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.551699 ; log likelihood = 0.000000
HIT 1924: turn right twice after walk thrice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))))) ; log prior = -6.112113 ; log likelihood = 0.000000
HIT 1931: walk opposite left after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))))) ; log prior = -6.235106 ; log likelihood = 0.000000
HIT 1939: turn opposite right after jump thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))))) ; log prior = -6.314393 ; log likelihood = 0.000000
HIT 1940: turn opposite right after look thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))))) ; log prior = -6.551699 ; log likelihood = 0.000000
HIT 1944: turn left twice and jump thrice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -6.316380 ; log likelihood = 0.000000
HIT 1946: walk twice after walk opposite right w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -6.180864 ; log likelihood = 0.000000
HIT 1951: look opposite right and look twice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.081750 ; log likelihood = 0.000000
HIT 1953: look thrice and turn opposite left w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))))) ; log prior = -6.621262 ; log likelihood = 0.000000
HIT 1955: walk opposite right after walk twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))))) ; log prior = -6.180864 ; log likelihood = 0.000000
HIT 1957: walk and walk left twice w/ (lambda (SCAN_WALK (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))) ; log prior = -6.296280 ; log likelihood = 0.000000
HIT 1960: jump twice after jump opposite left w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))) ; log prior = -6.656158 ; log likelihood = 0.000000
HIT 1962: run thrice and jump thrice w/ (lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))) ; log prior = -7.064138 ; log likelihood = 0.000000
HIT 1963: walk thrice and turn left twice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))))) ; log prior = -6.138570 ; log likelihood = 0.000000
HIT 1964: jump thrice and turn left twice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))))) ; log prior = -6.316380 ; log likelihood = 0.000000
HIT 1970: turn opposite left after look thrice w/ (lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))))) ; log prior = -6.615852 ; log likelihood = 0.000000
HIT 1976: turn right twice after jump thrice w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))))) ; log prior = -6.266776 ; log likelihood = 0.000000
HIT 1978: turn opposite left after walk thrice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))))) ; log prior = -6.541750 ; log likelihood = 0.000000
HIT 1983: turn opposite right and look thrice w/ (lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.630761 ; log likelihood = 0.000000
HIT 1989: jump thrice and turn opposite left w/ (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))))) ; log prior = -6.083781 ; log likelihood = 0.000000
HIT 1993: turn left twice after walk thrice w/ (lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))))) ; log prior = -6.176175 ; log likelihood = 0.000000
HIT 1994: turn left twice and look thrice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))) ; log prior = -6.151778 ; log likelihood = 0.000000
HIT 1998: turn left twice and walk thrice w/ (lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))) ; log prior = -6.138570 ; log likelihood = 0.000000
Hits 1409/2000 tasks
Average description length of a program solving a task: 5.172369 nats
Recognition model average:  3 sec.	median: 3 	max: 5 	standard deviation 1
Cumulative results for the full ensemble of 1 recognizers: 
Frontiers discovered bottom up: 1409
Total frontiers: 1409
Average search time:  3 sec.	median: 3 	max: 5 	standard deviation 1
1409 / 2000 total hit tasks
              bottom miss  bottom hit  
top miss          591          917     
top hit            0           492     
Currently using this much memory: 251068416
Showing the top 5 programs in each frontier being sent to the compressor:
0: run
0.00	(lambda (SCAN_RUN $0))

1: look
0.00	(lambda (SCAN_LOOK $0))

2: jump
0.00	(lambda (SCAN_JUMP $0))

3: walk
0.00	(lambda (SCAN_WALK $0))

4: turn right
0.00	(lambda (SCAN_RTURN $0))

5: turn left
0.00	(lambda (SCAN_LTURN $0))

6: run after run
0.00	(lambda (SCAN_RUN (SCAN_RUN $0)))

7: run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN $0)))

8: run and run
0.00	(lambda (SCAN_RUN (SCAN_RUN $0)))

9: walk and run
0.00	(lambda (SCAN_WALK (SCAN_RUN $0)))

10: run and walk
0.00	(lambda (SCAN_RUN (SCAN_WALK $0)))

11: run and jump
0.00	(lambda (SCAN_RUN (SCAN_JUMP $0)))

12: jump and run
0.00	(lambda (SCAN_JUMP (SCAN_RUN $0)))

13: run after jump
0.00	(lambda (SCAN_JUMP (SCAN_RUN $0)))

14: look and run
0.00	(lambda (SCAN_LOOK (SCAN_RUN $0)))

15: run after look
0.00	(lambda (SCAN_LOOK (SCAN_RUN $0)))

16: run after walk
0.00	(lambda (SCAN_WALK (SCAN_RUN $0)))

17: walk after run
0.00	(lambda (SCAN_RUN (SCAN_WALK $0)))

18: run and look
0.00	(lambda (SCAN_RUN (SCAN_LOOK $0)))

19: jump after run
0.00	(lambda (SCAN_RUN (SCAN_JUMP $0)))

20: look after run
0.00	(lambda (SCAN_RUN (SCAN_LOOK $0)))

21: turn right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN $0)))

22: look after jump
0.00	(lambda (SCAN_JUMP (SCAN_LOOK $0)))

23: run after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN $0)))

24: walk after look
0.00	(lambda (SCAN_LOOK (SCAN_WALK $0)))

25: jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP $0)))

26: walk after jump
0.00	(lambda (SCAN_JUMP (SCAN_WALK $0)))

27: walk and jump
0.00	(lambda (SCAN_WALK (SCAN_JUMP $0)))

28: look after look
0.00	(lambda (SCAN_LOOK (SCAN_LOOK $0)))

29: run and turn left
0.00	(lambda (SCAN_RUN (SCAN_LTURN $0)))

30: jump after walk
0.00	(lambda (SCAN_WALK (SCAN_JUMP $0)))

31: jump after look
0.00	(lambda (SCAN_LOOK (SCAN_JUMP $0)))

32: turn right and run
0.00	(lambda (SCAN_RTURN (SCAN_RUN $0)))

33: jump after jump
0.00	(lambda (SCAN_JUMP (SCAN_JUMP $0)))

34: walk after walk
0.00	(lambda (SCAN_WALK (SCAN_WALK $0)))

35: run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN $0)))

36: look after walk
0.00	(lambda (SCAN_WALK (SCAN_LOOK $0)))

37: jump and jump
0.00	(lambda (SCAN_JUMP (SCAN_JUMP $0)))

38: turn left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN $0)))

39: look and jump
0.00	(lambda (SCAN_LOOK (SCAN_JUMP $0)))

40: walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK $0)))

41: run and turn right
0.00	(lambda (SCAN_RUN (SCAN_RTURN $0)))

42: turn left and run
0.00	(lambda (SCAN_LTURN (SCAN_RUN $0)))

43: look and walk
0.00	(lambda (SCAN_LOOK (SCAN_WALK $0)))

44: look and look
0.00	(lambda (SCAN_LOOK (SCAN_LOOK $0)))

45: run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN $0)))

46: jump and look
0.00	(lambda (SCAN_JUMP (SCAN_LOOK $0)))

47: jump and walk
0.00	(lambda (SCAN_JUMP (SCAN_WALK $0)))

48: run after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN $0)))

49: look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK $0)))

50: walk and walk
0.00	(lambda (SCAN_WALK (SCAN_WALK $0)))

51: walk and look
0.00	(lambda (SCAN_WALK (SCAN_LOOK $0)))

52: jump and turn left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN $0)))

53: look and turn right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN $0)))

54: turn right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN $0)))

55: jump after turn left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP $0)))

56: jump and turn right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN $0)))

57: look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK $0)))

58: walk after turn left
0.00	(lambda (SCAN_LTURN (SCAN_WALK $0)))

59: look and turn left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN $0)))

60: look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK $0)))

61: turn left and walk
0.00	(lambda (SCAN_LTURN (SCAN_WALK $0)))

62: turn left and jump
0.00	(lambda (SCAN_LTURN (SCAN_JUMP $0)))

63: jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP $0)))

64: turn right and look
0.00	(lambda (SCAN_RTURN (SCAN_LOOK $0)))

65: look after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK $0)))

66: turn right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN $0)))

67: walk and turn right
0.00	(lambda (SCAN_WALK (SCAN_RTURN $0)))

68: jump after turn right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP $0)))

69: walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK $0)))

70: walk after turn right
0.00	(lambda (SCAN_RTURN (SCAN_WALK $0)))

71: walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK $0)))

72: turn right and jump
0.00	(lambda (SCAN_RTURN (SCAN_JUMP $0)))

73: turn left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN $0)))

74: turn right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN $0)))

75: turn left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN $0)))

76: turn left and look
0.00	(lambda (SCAN_LTURN (SCAN_LOOK $0)))

77: jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP $0)))

78: look after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK $0)))

79: turn left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN $0)))

80: turn right and walk
0.00	(lambda (SCAN_RTURN (SCAN_WALK $0)))

81: walk and turn left
0.00	(lambda (SCAN_WALK (SCAN_LTURN $0)))

82: turn right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN $0)))

83: run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))

84: run twice after run
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))

85: turn left after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN $0)))

86: turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN $0)))

87: run after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))

88: turn left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN $0)))

89: turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN $0)))

90: run twice and run
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))

91: turn right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN $0)))

92: turn right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN $0)))

93: turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN $0)))

94: turn left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN $0)))

95: turn left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN $0)))

96: turn right after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN $0)))

97: run and run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))

98: turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN $0)))

99: run twice after jump
0.00	(lambda (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0))))

100: look and run twice
0.00	(lambda (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0))))

101: jump after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP $0))))

102: walk after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK $0))))

103: run twice and look
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK $0))))

104: run twice and walk
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK $0))))

105: run twice after walk
0.00	(lambda (SCAN_WALK (SCAN_RUN (SCAN_RUN $0))))

106: run twice after look
0.00	(lambda (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0))))

107: look after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK $0))))

108: walk and run twice
0.00	(lambda (SCAN_WALK (SCAN_RUN (SCAN_RUN $0))))

109: jump and run twice
0.00	(lambda (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0))))

110: run twice and jump
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP $0))))

111: run and jump twice
0.00	(lambda (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0))))

112: turn right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))

113: run right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))

114: run twice and turn right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN $0))))

115: run and run right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))

116: run after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN $0))))

117: run twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))

118: turn left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN $0))))

119: run after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN $0))))

120: walk twice and run
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN $0))))

121: run and run left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0))))

122: run twice and turn left
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN $0))))

123: look twice and run
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN $0))))

124: run and look twice
0.00	(lambda (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0))))

125: look twice after run
0.00	(lambda (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0))))

126: jump twice after run
0.00	(lambda (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0))))

127: walk twice after run
0.00	(lambda (SCAN_RUN (SCAN_WALK (SCAN_WALK $0))))

128: turn right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN $0))))

129: run right and run
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))

130: run and walk twice
0.00	(lambda (SCAN_RUN (SCAN_WALK (SCAN_WALK $0))))

131: run after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))

132: turn left and run twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))

133: run left and run
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))

134: run twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))

135: run after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))

136: run left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0))))

137: run after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN $0))))

138: jump twice and run
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN $0))))

139: run and look right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0))))

140: walk after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))

141: walk twice and jump
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP $0))))

142: look twice and look
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))

143: walk right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0))))

144: jump right and run
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN $0))))

145: run after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN $0))))

146: jump left and run
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN $0))))

147: look twice and jump
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP $0))))

148: look after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK $0))))

149: run after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RUN $0))))

150: walk twice after jump
0.00	(lambda (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0))))

151: run left and look
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LOOK $0))))

152: jump and jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))

153: run left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_RUN $0))))

154: walk twice after walk
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))

155: walk right and run
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN $0))))

156: jump twice after jump
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))

157: jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))

158: jump twice and walk
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK $0))))

159: run right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0))))

160: look right and run
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RUN $0))))

161: run and walk right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0))))

162: run and walk left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_WALK $0))))

163: jump after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP $0))))

164: jump and run left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0))))

165: walk after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK $0))))

166: run left and jump
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP $0))))

167: jump and walk twice
0.00	(lambda (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0))))

168: jump after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP $0))))

169: look after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LOOK $0))))

170: look twice after look
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))

171: run right and jump
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP $0))))

172: run right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0))))

173: jump after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))

174: walk after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK $0))))

175: run left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_RUN $0))))

176: walk and run left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_RUN $0))))

177: jump twice after walk
0.00	(lambda (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0))))

178: look twice after jump
0.00	(lambda (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0))))

179: look and look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))

180: walk after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK $0))))

181: run after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RUN $0))))

182: walk left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_WALK $0))))

183: look and run left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_RUN $0))))

184: walk left and run
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RUN $0))))

185: look twice after walk
0.00	(lambda (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0))))

186: jump and run right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0))))

187: look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))

188: look left and run
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RUN $0))))

189: jump left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0))))

190: look and walk twice
0.00	(lambda (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0))))

191: jump after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP $0))))

192: jump twice after look
0.00	(lambda (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0))))

193: look twice and walk
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK $0))))

194: look after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LOOK $0))))

195: walk and look twice
0.00	(lambda (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0))))

196: walk and walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))

197: look and jump twice
0.00	(lambda (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0))))

198: jump and look twice
0.00	(lambda (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0))))

199: walk twice and look
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK $0))))

200: run and look left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LOOK $0))))

201: jump after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP $0))))

202: jump twice and jump
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))

203: run after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN $0))))

204: walk twice after look
0.00	(lambda (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0))))

205: walk after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_WALK $0))))

206: look right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0))))

207: run left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0))))

208: run and jump right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0))))

209: walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))

210: run left and walk
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_WALK $0))))

211: jump twice and look
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK $0))))

212: look left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LOOK $0))))

213: look and run right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0))))

214: jump right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0))))

215: run after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RUN $0))))

216: run right and walk
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK $0))))

217: walk and jump twice
0.00	(lambda (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0))))

218: run right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0))))

219: walk twice and walk
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))

220: look after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))

221: run and jump left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0))))

222: run right and look
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LOOK $0))))

223: look after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK $0))))

224: walk and run right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0))))

225: run after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN $0))))

226: jump left and walk
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK $0))))

227: look right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0))))

228: run and turn opposite left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0))))

229: walk and jump left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0))))

230: run left after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))

231: run right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RUN $0))))

232: jump left and jump
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))

233: turn opposite right and run
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))

234: look after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))

235: turn right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN $0))))

236: look after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LOOK $0))))

237: look left and jump
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP $0))))

238: look and look left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))

239: run right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LTURN $0))))

240: jump right and jump
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))

241: look after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK $0))))

242: walk after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK $0))))

243: jump twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))

244: jump and jump right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))

245: look after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK $0))))

246: look right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0))))

247: turn right and jump twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))

248: look left and look
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))

249: jump after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))

250: turn opposite left and run
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))

251: turn left twice after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0))))

252: turn right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN $0))))

253: run left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RTURN $0))))

254: walk and walk left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))

255: jump after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP $0))))

256: jump and look left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0))))

257: run twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))

258: look right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0))))

259: turn left after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LTURN $0))))

260: run right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))

261: look and walk left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0))))

262: turn right twice and run
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))

263: walk right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))

264: look left and walk
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK $0))))

265: turn right and walk twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))

266: walk left and walk
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))

267: turn left and run right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RUN $0))))

268: run thrice and run
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))

269: run twice and run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))

270: turn left twice and run
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))

271: walk left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0))))

272: turn right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))

273: turn left after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))

274: turn right twice after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0))))

275: run opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))

276: jump after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP $0))))

277: jump twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))

278: jump after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP $0))))

279: run after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))

280: walk after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))

281: walk twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))

282: look and look right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0))))

283: run after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))

284: look and walk right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0))))

285: look right and walk
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_WALK $0))))

286: jump left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0))))

287: jump left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0))))

288: turn left and walk twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))

289: look twice and turn left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN $0))))

290: jump after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))

291: walk and walk right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))

292: run and turn right twice
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0))))

293: run opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))

294: jump left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0))))

295: walk left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))

296: look left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))

297: run and turn opposite right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0))))

298: turn opposite right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0))))

299: look twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))

300: turn right after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RTURN $0))))

301: run right after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))

302: look after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))

303: walk and look left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0))))

304: look and jump left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0))))

305: look right and jump
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP $0))))

306: run after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))

307: look right and look
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))

308: look left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0))))

309: turn left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))

310: turn right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN $0))))

311: run and run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))

312: turn left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN $0))))

313: turn left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN $0))))

314: turn right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))

315: walk right and look
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LOOK $0))))

316: walk left and jump
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP $0))))

317: walk twice and turn right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN $0))))

318: jump right and walk
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_WALK $0))))

319: jump and jump left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0))))

320: jump right and look
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK $0))))

321: jump and walk right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0))))

322: walk left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0))))

323: walk twice and turn left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN $0))))

324: jump right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0))))

325: run and turn left twice
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0))))

326: turn opposite left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0))))

327: jump and look right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0))))

328: walk left and look
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK $0))))

329: jump and walk left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0))))

330: walk twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))

331: walk after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))

332: jump right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0))))

333: walk right and jump
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_JUMP $0))))

334: walk right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0))))

335: walk right and walk
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))

336: run left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_RUN $0))))

337: run left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))

338: jump twice and turn left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN $0))))

339: walk after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_WALK $0))))

340: jump left and look
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK $0))))

341: turn left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN $0))))

342: look twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))

343: look and jump right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0))))

344: look left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0))))

345: walk right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0))))

346: turn right and run right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))

347: run thrice after run
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))

348: run after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))

349: walk and look right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0))))

350: look twice and turn right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN $0))))

351: walk after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_WALK $0))))

352: jump right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))

353: turn left and run left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))

354: look after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK $0))))

355: walk after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK $0))))

356: jump after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_JUMP $0))))

357: turn left and look twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))

358: run after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))

359: turn right and run left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_RUN $0))))

360: walk and jump right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0))))

361: jump twice and turn right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN $0))))

362: turn left and jump left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))

363: turn right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))

364: jump opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))

365: turn left and walk right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0))))

366: run thrice after walk
0.00	(lambda (SCAN_WALK (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))

367: turn opposite left and walk
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))

368: look left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN $0))))

369: jump and turn opposite left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0))))

370: jump after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))

371: jump right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN $0))))

372: turn opposite left and look
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))

373: run thrice and look
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LOOK $0)))))

374: walk and turn opposite left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0))))

375: jump left after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))

376: walk right after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))

377: look left after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))

378: turn right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN $0))))

379: turn right twice and walk
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))

380: walk and turn right twice
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0))))

381: turn opposite right and jump
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))

382: turn left twice after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0))))

383: look and run thrice
0.00	(lambda (SCAN_LOOK (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))

384: jump after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))

385: walk after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))

386: look right after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))

387: jump right after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))

388: walk and turn opposite right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0))))

389: walk left after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))

390: turn opposite left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0))))

391: walk after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))

392: look right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN $0))))

393: turn left and jump right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_JUMP $0))))

394: turn right and walk left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0))))

395: turn left after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN $0))))

396: turn right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN $0))))

397: turn opposite right and walk
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))

398: turn right after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN $0))))

399: jump opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))

400: turn left after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN $0))))

401: turn left and walk left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))

402: turn left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN $0))))

403: jump after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))

404: turn opposite left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0))))

405: turn left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN $0))))

406: jump and turn left twice
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0))))

407: jump left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN $0))))

408: walk right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN $0))))

409: turn opposite left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0))))

410: look after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))

411: walk left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0))))

412: turn opposite left and jump
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))

413: jump left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0))))

414: turn right twice and jump
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))

415: look and turn opposite right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0))))

416: look right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0))))

417: turn right twice and look
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))

418: look opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))

419: walk after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))

420: jump after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))

421: look and turn left twice
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0))))

422: look after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))

423: turn right after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN $0))))

424: turn right twice after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0))))

425: turn right twice after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0))))

426: run thrice and walk
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_WALK $0)))))

427: jump and turn opposite right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0))))

428: look left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN $0))))

429: turn right and look right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))

430: turn left twice after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0))))

431: jump and run thrice
0.00	(lambda (SCAN_JUMP (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))

432: jump right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN $0))))

433: run thrice after jump
0.00	(lambda (SCAN_JUMP (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))

434: jump after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_JUMP $0)))))

435: jump and turn right twice
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0))))

436: turn right after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN $0))))

437: turn left after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN $0))))

438: turn right twice after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0))))

439: run thrice and jump
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_JUMP $0)))))

440: walk after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_WALK $0)))))

441: look right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN $0))))

442: jump left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN $0))))

443: look opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))

444: turn left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN $0))))

445: walk left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN $0))))

446: walk opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))

447: look after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LOOK $0)))))

448: look and turn right twice
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0))))

449: turn right and look left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0))))

450: turn opposite right and look
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))

451: look after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))

452: turn opposite right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0))))

453: turn left twice and jump
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))

454: look left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0))))

455: turn opposite right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0))))

456: walk after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))

457: look after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))

458: walk left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN $0))))

459: turn left and look left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))

460: look and turn opposite left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0))))

461: turn opposite right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0))))

462: turn right after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN $0))))

463: turn right and jump left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0))))

464: turn left twice and walk
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))

465: turn right and walk right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))

466: turn left twice and look
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))

467: walk and turn left twice
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0))))

468: jump right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_JUMP $0))))

469: walk opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))

470: walk and run thrice
0.00	(lambda (SCAN_WALK (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))

471: turn left and look right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0))))

472: walk right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN $0))))

473: run thrice after look
0.00	(lambda (SCAN_LOOK (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))

474: walk right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0))))

475: turn left twice after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0))))

476: jump twice and run twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

477: turn left thrice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))

478: look twice and run twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))))

479: turn left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))

480: turn left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0))))

481: run right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))

482: turn right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))

483: run thrice and turn left
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LTURN $0)))))

484: turn right after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))

485: turn right twice and turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))

486: run twice and walk twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

487: turn left after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN $0))))

488: run thrice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))

489: turn left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))

490: run twice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))

491: turn left twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))

492: turn right and turn left twice
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0))))

493: turn left after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))

494: turn left after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LTURN $0)))))

495: run twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

496: turn right after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RTURN $0)))))

497: walk twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

498: turn opposite right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN $0))))

499: turn right and run thrice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))

500: turn right after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN $0))))

501: turn right twice and turn left
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN $0))))

502: run left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

503: walk twice and run twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

504: run twice and run right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

505: turn left twice and turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))

506: turn left and run thrice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))

507: run thrice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))

508: turn opposite right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0))))

509: turn opposite left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN $0))))

510: turn right after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))

511: run twice and jump twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

512: turn left after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN $0))))

513: turn opposite left after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))

514: run twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

515: look twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))))

516: run left and run twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))

517: jump twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

518: run twice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))

519: turn right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))

520: turn left after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))

521: turn right twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0))))

522: turn opposite right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))

523: turn right twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))

524: turn left twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0))))

525: turn opposite left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))

526: turn left twice and turn right
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN $0))))

527: run right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

528: run twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))))

529: run thrice and turn right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RTURN $0)))))

530: turn opposite left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0))))

531: run twice and look twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))))

532: run twice and run left
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

533: turn left and turn right twice
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0))))

534: turn right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0))))

535: turn right thrice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))

536: turn opposite right after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))

537: turn right after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN $0))))

538: run twice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

539: run twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

540: run twice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

541: jump right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0)))))

542: jump thrice and run
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RUN $0)))))

543: run twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

544: run and look thrice
0.00	(lambda (SCAN_RUN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))

545: run twice and walk right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0)))))

546: jump left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0)))))

547: run and jump thrice
0.00	(lambda (SCAN_RUN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))

548: run after jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RUN $0)))))

549: run twice and jump left
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0)))))

550: look thrice and run
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RUN $0)))))

551: walk thrice after run
0.00	(lambda (SCAN_RUN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))

552: look right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))))

553: run twice and look right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0)))))

554: jump left and run twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

555: walk right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

556: jump right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

557: run after look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RUN $0)))))

559: walk thrice and run
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_RUN $0)))))

561: run twice and jump right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0)))))

564: look thrice after run
0.00	(lambda (SCAN_RUN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))

565: walk right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0)))))

567: run and walk thrice
0.00	(lambda (SCAN_RUN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))

568: jump thrice after run
0.00	(lambda (SCAN_RUN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))

569: walk left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_WALK $0)))))

573: run after walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_RUN $0)))))

574: look twice and run right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0)))))

575: jump after jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))

576: walk thrice after jump
0.00	(lambda (SCAN_JUMP (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))

577: walk after walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))

578: run twice after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

579: jump thrice and jump
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))

581: run left after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

582: run right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

583: run twice and turn right twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))))

584: jump twice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

585: walk twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))

586: jump and walk thrice
0.00	(lambda (SCAN_JUMP (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))

587: look twice and look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))

588: run twice after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0)))))

589: look and look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))

590: run twice and turn opposite left
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))))

592: run thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

593: walk twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

594: walk thrice and walk
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))

595: run and run opposite left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))))

596: run thrice and run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

598: look twice and jump twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

599: jump twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))

600: run twice after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0)))))

601: jump after walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_JUMP $0)))))

602: walk twice and look twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

604: run right twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

605: walk thrice after look
0.00	(lambda (SCAN_LOOK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))

608: walk after look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_WALK $0)))))

609: jump thrice and look
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK $0)))))

610: jump thrice after jump
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))

611: look after look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))

612: look after walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LOOK $0)))))

613: look thrice and walk
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_WALK $0)))))

614: walk twice and walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))

615: walk thrice and jump
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_JUMP $0)))))

616: look and jump thrice
0.00	(lambda (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))

617: run and run opposite right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))))

618: walk twice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

619: walk thrice and look
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LOOK $0)))))

620: turn opposite right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0)))))

622: walk twice and run right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0)))))

623: run twice and turn opposite right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))))

625: look thrice and look
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))

626: look and walk thrice
0.00	(lambda (SCAN_LOOK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))

627: jump thrice after walk
0.00	(lambda (SCAN_WALK (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))

628: jump thrice and walk
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_WALK $0)))))

629: jump twice and run right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0)))))

630: jump and jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))

631: jump twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

632: run left and run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

633: run twice and run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

634: jump and look thrice
0.00	(lambda (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))

635: turn opposite left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))))

636: run opposite right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))))

637: run twice and turn left twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))))

638: run right and walk twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

639: look twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))

640: jump twice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

641: run right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0)))))

642: run left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0)))))

643: look thrice and jump
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP $0)))))

644: jump after look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP $0)))))

645: run opposite left and run
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0)))))

646: walk twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))))

647: run left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_RUN $0)))))

648: run after run opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0)))))

649: walk thrice after walk
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))

651: turn right twice and run twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0)))))

652: walk twice and jump twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))))

653: look twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

654: look thrice after look
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))

655: jump twice and walk twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))))

656: look twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

657: turn opposite right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))))

659: walk and look thrice
0.00	(lambda (SCAN_WALK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))

660: jump twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))))

661: look twice and walk twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

662: jump twice and run left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0)))))

663: turn left twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))))

664: walk and walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))

665: look after jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK $0)))))

666: run right and run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

667: run after run opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0)))))

668: look thrice after walk
0.00	(lambda (SCAN_WALK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))

670: walk twice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

671: jump thrice after look
0.00	(lambda (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))

672: jump twice and jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))

673: run left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

674: run right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0)))))

675: look thrice after jump
0.00	(lambda (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))

677: run opposite left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))))

678: jump twice and look twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

679: run twice after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0)))))

680: run opposite right and run
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0)))))

681: run twice after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0)))))

682: turn left twice and run twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0)))))

683: run right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))))

684: walk and jump thrice
0.00	(lambda (SCAN_WALK (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))

685: turn opposite left and run twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0)))))

686: turn right twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))))

687: run left twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

688: run right and jump twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

689: walk after jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_WALK $0)))))

690: look opposite left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))))

691: walk right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

693: walk thrice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))

694: look opposite right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))))

695: walk twice and jump left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0)))))

697: jump opposite right and run
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_RUN $0)))))

698: look left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

700: look twice and jump left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0)))))

701: walk opposite right and run
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_RUN $0)))))

702: look and run opposite right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))))

703: look right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0)))))

704: look twice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

705: run opposite left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))))

706: run right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0)))))

708: run opposite left and jump
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_JUMP $0)))))

710: walk twice and look left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))))

711: walk twice and walk right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

712: walk left and walk twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))

713: turn left and walk thrice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))

714: look right and jump twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

715: jump twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))))

716: look and run opposite left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))))

717: jump right and jump twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))

718: look twice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))

719: look thrice and turn right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN $0)))))

720: run opposite right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))))

721: jump left and walk twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))))

722: look left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))))

723: run and jump opposite left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))))

725: run left and jump left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0)))))

727: turn left and look thrice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))

728: walk twice and look right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0)))))

729: run opposite right and look
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_LOOK $0)))))

731: turn right after jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN $0)))))

732: look opposite right and run
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_RUN $0)))))

733: jump left and look twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

734: jump left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

735: run after look opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_RUN $0)))))

737: jump twice and jump left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

739: walk left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0)))))

740: jump thrice and turn left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN $0)))))

743: jump thrice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))

744: look twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

749: jump twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))

751: run and look opposite right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))))

752: walk twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))))

754: walk thrice and turn right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_RTURN $0)))))

755: run and look opposite left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))))

756: jump left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))

758: jump right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0)))))

761: look left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

762: look right and run right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0)))))

764: walk left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))))

765: turn right and jump thrice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))

767: run right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0)))))

768: jump twice and jump right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

769: jump twice and look right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0)))))

770: look right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

771: look thrice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))

774: turn right and walk thrice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))

776: look twice and look left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

777: look after run opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_LOOK $0)))))

778: turn left and jump thrice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))

779: run after look opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_RUN $0)))))

781: walk twice and walk left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

783: walk twice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

784: jump thrice and turn right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN $0)))))

785: jump thrice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))

787: look opposite left and run
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_RUN $0)))))

788: jump left and run left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0)))))

790: run opposite left and look
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_LOOK $0)))))

793: look left and look twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))

795: walk right and walk twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))

801: look twice and walk left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))))

802: jump twice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

803: run right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0)))))

806: walk and run opposite right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))))

808: look twice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))

811: walk thrice and turn left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LTURN $0)))))

812: look twice and jump right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0)))))

813: turn right after walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_RTURN $0)))))

814: walk right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0)))))

817: turn left after jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN $0)))))

818: look twice and look right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

819: walk twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))

821: jump right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

822: turn right and look thrice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))

823: look right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0)))))

824: jump twice and walk left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0)))))

825: run and walk opposite right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))))

829: turn left after look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN $0)))))

831: jump right and run right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0)))))

833: look left and walk twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

835: walk right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

836: run opposite right and jump
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_JUMP $0)))))

838: jump left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0)))))

839: run opposite right and walk
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_WALK $0)))))

840: run and jump opposite right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))))

843: look right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))

845: look thrice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))))

848: look right and walk twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

850: look twice and walk right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0)))))

852: walk twice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))

854: look thrice and turn left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN $0)))))

858: jump and run opposite right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))))

859: look after run opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_LOOK $0)))))

861: turn left after walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LTURN $0)))))

865: jump right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

866: jump opposite left and run
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_RUN $0)))))

868: run right and look right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0)))))

870: jump and run opposite left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))))

871: walk left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))))

872: turn right after look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN $0)))))

873: walk left and look twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

874: jump twice and look left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0)))))

877: jump twice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))

880: walk thrice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))))

881: walk left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

882: turn right twice and run right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))))

883: turn opposite left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0)))))

884: run opposite right after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))))

885: look after look opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0)))))

886: look and look opposite left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))))

887: walk right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

888: jump opposite right and look
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK $0)))))

889: turn right and run opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))))

890: run left after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))))

892: jump and jump opposite left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))))

893: run and turn right thrice
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

894: jump after look opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP $0)))))

895: jump opposite right and jump
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0)))))

896: jump and walk opposite right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))))

897: walk twice after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0)))))

898: walk after jump opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_WALK $0)))))

900: turn opposite right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0)))))

902: jump opposite right and walk
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_WALK $0)))))

903: walk twice after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0)))))

905: walk right and walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

906: turn left twice and look twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0)))))

907: walk left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

908: walk left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0)))))

909: walk opposite right and jump
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_JUMP $0)))))

911: run after turn right thrice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))))

913: jump twice and turn opposite right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))))

915: jump right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

917: look right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0)))))

920: walk opposite left and walk
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0)))))

921: walk left and look left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))))

922: jump right after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

924: look twice after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0)))))

925: look opposite left and walk
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_WALK $0)))))

926: walk after look opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_WALK $0)))))

927: jump opposite left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))))

928: walk opposite right and walk
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0)))))

930: look and look opposite right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))))

932: walk right twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

933: jump twice and turn right twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))))

934: run thrice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

935: turn right thrice after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

936: walk opposite left and look
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_LOOK $0)))))

937: turn right twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))))

938: jump right and walk right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0)))))

939: jump right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0)))))

940: walk and jump opposite right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))))

941: run thrice and run left
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0))))))

942: run left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))))

943: jump left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

944: turn opposite left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))))

946: turn left twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))))

947: look opposite right and jump
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP $0)))))

948: jump opposite right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))))

949: walk opposite left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))))

951: run thrice and jump twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0))))))

952: look and jump opposite left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))))

953: run opposite left after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))))

954: look right twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

955: look left and walk left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))))

956: walk right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0)))))

958: turn left twice and walk twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0)))))

959: walk right and walk left
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

960: turn opposite left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))))

961: look twice and turn left twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))))

962: walk left and walk right
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

964: look left twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

965: walk after jump opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_WALK $0)))))

966: turn opposite right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))))

967: turn left twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))))

968: jump after jump opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0)))))

969: turn opposite right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))))

970: jump opposite right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))))

972: look after walk opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_LOOK $0)))))

973: walk and look opposite left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))))

977: turn opposite left after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))))

979: look right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0)))))

980: run right after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))))

981: look twice after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0)))))

982: walk twice and turn opposite right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))))

983: turn opposite right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))))

984: turn opposite right after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))))

986: run thrice and run right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))))

987: turn opposite left and walk twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0)))))

988: turn opposite right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))))

989: look left and look right
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

990: look twice and turn opposite right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))))

991: jump twice and run thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

992: run thrice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

993: jump left and jump right
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

994: walk twice after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0)))))

995: turn opposite left after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))))

996: jump right after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

998: jump twice after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0)))))

1000: look after look opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0)))))

1001: jump and look opposite right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))))

1002: turn left and run opposite right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))))

1003: jump twice and turn left twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))))

1004: look opposite right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))))

1005: jump right and jump left
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

1006: turn left twice and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0)))))

1008: look and walk opposite left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))))

1009: run thrice and look twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0))))))

1010: look twice and turn right twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))))

1011: jump after walk opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_JUMP $0)))))

1012: run right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))))

1013: jump right twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

1016: look and jump opposite right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))))

1019: look right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

1020: walk right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0)))))

1021: run left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))))

1022: look after jump opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK $0)))))

1024: look right after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

1025: jump twice and turn opposite left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))))

1026: run opposite left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0)))))

1027: run opposite left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))))

1028: walk twice after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0)))))

1029: run right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))))

1030: jump left after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

1031: jump left twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

1032: run left after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_RUN $0)))))

1033: walk and walk opposite left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))))

1034: look opposite right and look
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0)))))

1035: turn right after run opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RTURN $0)))))

1036: run opposite left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RTURN $0)))))

1037: turn right and run opposite left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))))

1038: run opposite right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0)))))

1039: jump opposite left and look
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK $0)))))

1040: turn left twice and run left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))))

1041: turn right twice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))))

1042: turn left after run opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0)))))

1043: look right and look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

1045: turn right thrice and run
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))))

1046: jump left and look left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0)))))

1049: look left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

1050: turn left twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))))

1051: turn right twice and look twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0)))))

1053: look left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))))

1054: walk left and walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

1057: look after jump opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK $0)))))

1058: walk twice and run thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

1059: jump twice after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0)))))

1060: turn right twice and walk twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0)))))

1061: run left after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))))

1062: walk twice and turn opposite left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))))

1065: walk right after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0)))))

1066: walk opposite left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))))

1067: look twice and run thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

1068: turn left thrice and run
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))))

1069: walk and walk opposite right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))))

1070: look opposite left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))))

1071: jump and look opposite left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))))

1072: look opposite right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))))

1073: run thrice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

1074: turn left thrice after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1075: run thrice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

1076: turn opposite right and run right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))))

1077: run right after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))))

1078: turn opposite left and look twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0)))))

1079: run right after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_RUN $0)))))

1080: run left and run thrice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

1081: look twice after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0))))))

1082: look opposite left and look
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0)))))

1083: run left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))))

1084: look right and look left
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

1085: run opposite right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_LTURN $0)))))

1086: look twice and turn opposite left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))))

1087: walk opposite right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))))

1088: walk left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))))

1089: turn left after run opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_LTURN $0)))))

1090: jump opposite left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))))

1091: run opposite right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))))

1092: jump after walk opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_JUMP $0)))))

1093: look left after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

1096: walk right and look right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0)))))

1097: look twice after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0)))))

1098: turn left twice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0)))))

1099: walk after walk opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0)))))

1100: jump twice after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0)))))

1101: run right and run thrice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

1102: run right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0)))))

1104: walk after walk opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0)))))

1105: look opposite left and jump
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP $0)))))

1108: look left and look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

1109: jump right and look right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0)))))

1110: walk twice and turn left twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))))

1111: jump opposite right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))))

1113: look left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0)))))

1114: walk left twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

1115: walk twice and turn right twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))))

1117: turn right after run opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0)))))

1118: jump left and jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

1119: jump after look opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP $0)))))

1120: turn opposite left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))))

1122: run left after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0))))))

1123: turn left and run opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))))

1124: look opposite left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))))

1126: jump and jump opposite right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))))

1127: turn right twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))))

1128: turn opposite right and jump twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0)))))

1129: jump twice after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0)))))

1131: run after turn left thrice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))))

1132: jump after jump opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0)))))

1134: jump left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0)))))

1135: turn opposite left and run left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0)))))

1136: jump left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0)))))

1137: turn opposite right and walk twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0)))))

1138: turn opposite right and run left
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_RUN $0)))))

1139: walk opposite left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))))

1141: turn opposite left and run right
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_RUN $0)))))

1142: walk opposite right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))))

1143: turn right twice and jump twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0)))))

1144: jump opposite left and jump
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0)))))

1145: jump twice after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0))))))

1146: run and turn left thrice
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1148: look left and jump left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0)))))

1149: look opposite left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))))

1150: turn right twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))))

1151: run thrice and walk twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0))))))

1152: look right and walk right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0)))))

1153: jump opposite left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))))

1154: look twice after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0)))))

1155: run right after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0)))))

1156: look left after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0)))))

1158: turn opposite left and look right
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0)))))

1159: turn right thrice after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1161: turn left twice and look right
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0)))))

1162: walk opposite right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_RTURN $0)))))

1163: run twice and walk thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1164: walk left after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0)))))

1165: turn left twice and jump left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))))

1166: look right after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))))

1167: jump thrice and run twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0))))))

1168: turn left and jump opposite right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))))

1169: turn left after walk opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_LTURN $0)))))

1170: turn opposite right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))))

1171: walk left and turn right twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))))

1172: turn right twice and jump left
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0)))))

1173: run twice and look thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1174: look left after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))))

1175: jump left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))))

1176: turn right twice and look left
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0)))))

1177: turn left twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))))

1178: jump left after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))))

1179: turn opposite left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))))

1180: walk left after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))))

1182: look opposite left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN $0)))))

1183: look and turn right thrice
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1184: look opposite left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))))

1185: jump right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))))

1186: jump left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))))

1188: look right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))))

1189: turn right twice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))))

1190: walk right after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))))

1191: look after turn left thrice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))))

1192: walk left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))))

1193: jump opposite right after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))))

1194: look thrice and run twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0))))))

1195: jump opposite right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN $0)))))

1196: walk right and turn left twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))))

1197: turn left after look opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN $0)))))

1198: turn opposite left after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))))

1199: look opposite right after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))))

1200: look opposite right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN $0)))))

1202: look left after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0)))))

1204: walk left after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))))

1206: turn left twice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))))

1207: turn right twice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))))

1208: turn opposite right and walk right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))))

1210: turn right and walk opposite left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))))

1211: turn opposite right after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))))

1212: walk opposite right after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))))

1213: run twice after jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0))))))

1214: turn left after jump opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN $0)))))

1215: look right after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0)))))

1216: turn opposite left after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))))

1217: run twice after look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0))))))

1218: turn opposite right and jump left
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0)))))

1219: turn left twice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))))

1220: turn opposite left and look left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))))

1222: walk opposite right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_LTURN $0)))))

1224: turn left after jump opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN $0)))))

1225: look left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))))

1226: turn left thrice after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1227: turn left and look opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))))

1228: turn left and walk opposite right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))))

1229: jump thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1230: look left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))))

1231: turn opposite left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))))

1232: look right after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0)))))

1233: turn right thrice and walk
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))))

1234: turn right twice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))))

1235: turn right and jump opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))))

1237: look opposite right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))))

1238: look left and turn right twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))))

1239: turn right and walk opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))))

1242: jump left after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))))

1243: turn opposite left and jump right
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_JUMP $0)))))

1244: turn right twice and look right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))))

1245: jump opposite right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))))

1246: turn left thrice after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1247: turn opposite right after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))))

1248: run twice and jump thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1249: turn opposite left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))))

1251: turn left twice and walk left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))))

1252: turn opposite right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))))

1253: walk right after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0)))))

1254: turn left twice and walk right
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0)))))

1255: turn left twice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))))

1256: walk opposite left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_RTURN $0)))))

1257: turn opposite right after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))))

1258: turn opposite left and walk right
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0)))))

1259: turn right thrice and look
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))))

1260: turn right twice and walk left
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0)))))

1261: jump opposite left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN $0)))))

1262: walk after turn right thrice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))))

1263: turn left and jump opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))))

1265: turn right thrice after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1267: look after turn right thrice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))))

1268: turn right and look opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))))

1269: turn opposite right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))))

1270: jump opposite left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN $0)))))

1271: walk after turn left thrice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))))

1272: turn right thrice and jump
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))))

1273: look right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))))

1275: walk and turn right thrice
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1276: look opposite right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN $0)))))

1277: walk opposite left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))))

1280: look left after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))))

1281: turn left and walk opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))))

1282: look opposite left after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))))

1283: jump right after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))))

1285: walk opposite left after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))))

1286: look opposite left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN $0)))))

1287: turn right thrice after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1288: look right after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))))

1289: walk and turn left thrice
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1290: look right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))))

1291: turn opposite right and look left
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0)))))

1293: turn right after jump opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN $0)))))

1294: look right and turn left twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))))

1295: jump left and turn right twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))))

1296: walk left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))))

1299: jump after turn left thrice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))))

1300: jump right after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))))

1301: walk left after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0)))))

1303: jump right after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_JUMP $0)))))

1304: jump and turn right thrice
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1305: turn left after walk opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_LTURN $0)))))

1306: turn right after look opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN $0)))))

1307: jump opposite left after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))))

1308: turn left thrice and look
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))))

1309: jump right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))))

1310: turn right after walk opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_RTURN $0)))))

1311: turn opposite left after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0)))))

1312: turn opposite left and jump left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))))

1313: turn right twice and walk right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))))

1314: turn right and jump opposite left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))))

1315: walk right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))))

1316: jump opposite left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))))

1317: turn left twice and look left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))))

1318: walk left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))))

1319: walk opposite left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_LTURN $0)))))

1320: walk right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0)))))

1321: turn right twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))))

1322: turn left after look opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN $0)))))

1323: walk right after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))))

1324: look left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))))

1325: turn opposite right and walk left
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0)))))

1326: walk thrice and run twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_RUN (SCAN_RUN $0))))))

1327: look and turn left thrice
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1328: turn left thrice and walk
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))))

1329: turn left and look opposite right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))))

1330: jump left after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0)))))

1331: turn right after look opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN $0)))))

1333: walk opposite right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0)))))

1334: jump left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))))

1336: jump right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))))

1337: turn left thrice and jump
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0)))))

1338: turn left thrice after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1340: jump and turn left thrice
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1341: turn right after walk opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_RTURN $0)))))

1342: turn right twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))))

1343: look thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1344: turn right after jump opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN $0)))))

1345: turn right and look opposite left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0)))))

1346: turn opposite right after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0)))))

1347: jump after turn right thrice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))))

1348: walk right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0)))))

1349: jump opposite right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN $0)))))

1350: turn right twice and jump right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0)))))

1351: walk right after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0)))))

1353: jump left after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0)))))

1354: turn opposite left and walk left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0)))))

1355: turn right twice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0)))))

1356: turn left twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0)))))

1359: turn opposite right and look right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0)))))

1360: turn right twice and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1361: turn opposite left after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1362: turn right after turn left thrice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN $0)))))

1363: run thrice and turn right twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0))))))

1364: turn opposite left after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1365: run opposite left and run twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

1366: turn right twice after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1367: turn right twice and run thrice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

1368: run twice and run opposite right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))))

1369: turn left after turn right thrice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN $0)))))

1370: turn left twice after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1371: turn left thrice and turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1372: turn opposite right after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0))))))

1373: turn left twice and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1374: turn opposite right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1375: turn opposite right and turn left twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1376: run thrice after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

1377: turn opposite left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1378: turn opposite right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1380: run opposite left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))))

1381: turn right and turn left thrice
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1382: turn opposite right after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1384: turn opposite left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1385: turn left twice and turn right twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1386: turn left twice after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0))))))

1387: turn opposite left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1388: turn right twice after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1389: turn opposite right after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1390: turn right twice after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0))))))

1391: turn right thrice and turn left
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN $0)))))

1392: turn opposite left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1393: turn opposite left and run thrice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

1395: run twice after run opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

1396: turn opposite left after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1397: turn right twice after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1398: turn opposite right after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1399: turn opposite right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1400: run opposite right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))))

1401: run thrice and turn opposite left
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0))))))

1402: run twice and run opposite left
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))))

1403: turn opposite right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1404: run opposite right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

1405: turn left thrice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1407: turn right thrice and turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1408: turn opposite left and turn right twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1411: run thrice and run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))))

1412: turn left twice and run thrice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

1413: turn left thrice and turn right
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN $0)))))

1415: turn opposite right and run thrice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

1416: turn right twice and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1417: turn right twice after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1418: turn opposite right after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1419: run thrice after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

1420: turn right and turn right thrice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1421: turn opposite left after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1422: turn around right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1423: turn left twice after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1424: turn left twice after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1426: run thrice and turn left twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0))))))

1427: run twice after run opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

1428: turn right after turn right thrice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1429: turn around left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1430: turn left twice and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1431: turn right twice and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1432: turn right thrice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1433: run thrice and turn opposite right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN $0))))))

1434: turn left twice and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1435: turn left and turn left thrice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1436: turn left thrice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1437: run thrice after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

1438: run thrice after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))))

1439: turn left twice after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1440: turn right twice and turn left twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1441: turn right thrice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1442: turn left and turn right thrice
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0)))))

1443: run thrice after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))))

1444: turn left after turn left thrice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0)))))

1445: turn opposite left after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN $0))))))

1451: look thrice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1455: jump thrice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1458: look twice and look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1463: look thrice and look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1469: walk thrice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1471: walk thrice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1475: jump twice after jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1478: jump twice and jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1479: look thrice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1482: walk twice and walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1488: look thrice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1494: walk thrice and walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1510: walk twice after walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1512: look twice after jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0))))))

1522: jump twice after look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0))))))

1530: look twice after look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1531: walk twice after look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0))))))

1534: look twice after walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0))))))

1549: jump thrice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1553: jump thrice and jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1555: run opposite right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))))

1558: turn left thrice and run twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))))

1561: walk thrice and walk right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))))

1562: run right twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))))

1564: turn right thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))))

1569: jump thrice and jump left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0))))))

1573: run twice and turn left thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))))

1574: jump left and jump thrice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1575: run twice after turn left thrice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))))

1576: walk right after walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))))

1586: run right twice and turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))))

1590: walk thrice and walk left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))))

1591: turn left thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_LTURN $0))))))

1594: look right after look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0))))))

1596: run twice after turn right thrice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))))

1597: jump thrice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1603: walk thrice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1606: run right and run opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN $0))))))

1607: walk right and walk thrice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1612: turn right after run right twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))))

1614: look left and look thrice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1618: run left twice and turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))))

1626: walk left after walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))))

1631: look thrice and look left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))))

1636: turn left after run left twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))))

1642: run twice and turn right thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN $0))))))

1645: turn right and run right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))))

1648: jump right after jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))))

1650: jump left after jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0))))))

1658: run left after run opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0))))))

1661: walk thrice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1666: walk left and walk thrice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1676: run left twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0))))))

1677: look thrice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1680: turn right thrice and run twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))))

1682: run right after run opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))))

1684: look right and look thrice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1687: look thrice and look right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0))))))

1689: jump thrice and jump right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))))

1691: jump right and jump thrice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1692: turn left and run left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0))))))

1694: jump thrice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1698: look left after look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))))

1700: look thrice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1707: run opposite right and run right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))))

1709: run opposite left after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_LTURN (SCAN_RUN $0))))))

1716: jump thrice and run thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))))

1718: walk twice and walk opposite left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))))

1722: look opposite right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))))

1733: jump thrice and turn opposite right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0))))))

1735: jump twice after jump opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1743: turn opposite left after jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0))))))

1744: look after look left twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))))

1750: turn left twice after jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0))))))

1752: jump and jump right twice
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))))

1754: jump right twice and jump
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))))

1757: walk thrice after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1759: jump opposite left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1760: look thrice after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1761: look twice and look opposite right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK $0))))))

1763: jump twice and jump opposite right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))))

1764: walk thrice and turn opposite left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0))))))

1769: look twice after look opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1771: look opposite left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))))

1779: walk twice after walk opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1780: walk thrice after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1783: look thrice after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1784: jump twice and jump opposite left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))))

1786: walk thrice after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1790: turn left twice after look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0))))))

1793: turn opposite right and jump thrice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1796: jump thrice after turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1803: look thrice after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1806: turn opposite left and walk thrice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1807: look thrice and turn right twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0))))))

1812: turn right twice and look thrice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1818: turn opposite right after walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0))))))

1820: jump opposite right and jump twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1829: jump thrice after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))))

1834: turn opposite left and look thrice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1835: jump opposite right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP $0))))))

1838: walk thrice and turn right twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0))))))

1846: turn right twice after look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0))))))

1850: look twice and look opposite left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK $0))))))

1852: turn opposite left and jump thrice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1854: jump thrice after turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1863: run thrice after jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))))))

1864: look left twice after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))))

1868: look opposite left and look twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1871: turn right twice and jump thrice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1876: walk right twice and walk
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))))

1884: jump opposite left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP $0))))))

1885: look thrice and turn left twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0))))))

1887: walk opposite right and walk twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1891: look twice after look opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1892: look thrice and turn opposite right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0))))))

1893: jump thrice and turn right twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0))))))

1894: walk twice and walk opposite right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))))

1898: walk thrice after turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1900: turn right twice and walk thrice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1908: walk and walk right twice
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))))

1914: walk opposite left and walk twice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1919: jump thrice after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1920: turn opposite right and walk thrice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1922: look thrice after turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1924: turn right twice after walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RTURN $0))))))

1931: walk opposite left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LTURN (SCAN_WALK $0))))))

1939: turn opposite right after jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0))))))

1940: turn opposite right after look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RTURN $0))))))

1944: turn left twice and jump thrice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1946: walk twice after walk opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

1951: look opposite right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1953: look thrice and turn opposite left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0))))))

1955: walk opposite right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RTURN (SCAN_WALK $0))))))

1957: walk and walk left twice
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))))

1960: jump twice after jump opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))))

1962: run thrice and jump thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))))

1963: walk thrice and turn left twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0))))))

1964: jump thrice and turn left twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0))))))

1970: turn opposite left after look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LTURN $0))))))

1976: turn right twice after jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RTURN $0))))))

1978: turn opposite left after walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0))))))

1983: turn opposite right and look thrice
0.00	(lambda (SCAN_RTURN (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1989: jump thrice and turn opposite left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LTURN $0))))))

1993: turn left twice after walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LTURN $0))))))

1994: turn left twice and look thrice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))))

1998: turn left twice and walk thrice
0.00	(lambda (SCAN_LTURN (SCAN_LTURN (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))))

Compression message saved to: compressionMessages/2020-11-27T20:12:21.833073
Compression backend will run for most 20 iterations
Total number of candidates: 160159
Constructed version spaces and coalesced candidates in 41.2522s.
Trimmed down the beam, have only 300 best candidates (M)
Rewrote topK in 1.03373m.
Initial score: -12724.961548
 (M)New frontiers length 300 Scored candidates (M) in 9.40895s.
Improved score to -12590.831699 (dScore=134.129849) w/ new primitive (M)
	#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) : tstr -> tstr
rewrote all of the frontiers (M) in 19.137s.
Completed one step of memory consolidation in 2.6276m.
New primitive is used 83 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))
  (lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LOOK $0)))
  (lambda (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_WALK $0)))
  (lambda (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP $0)))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP $0)))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_WALK $0)))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LOOK $0)))
  (lambda (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN $0)))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN $0)))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (SCAN_RUN $0))))
  (lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LOOK (SCAN_LOOK $0))))
  (lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (SCAN_RUN $0))))
  (lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LOOK (SCAN_LOOK $0))))
  (lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_WALK (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (SCAN_LTURN $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (SCAN_LTURN $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (SCAN_LTURN $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (SCAN_LTURN $0))))
  (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))
  (lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))))
Total number of candidates: 119249
Constructed version spaces and coalesced candidates in 31.6573s.
Trimmed down the beam, have only 300 best candidates (M)
Rewrote topK in 55.3942s.
Initial score: -12590.831699
 (M)New frontiers length 300 Scored candidates (M) in 10.2029s.
Improved score to -12474.159539 (dScore=116.672159) w/ new primitive (M)
	#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) : tstr -> tstr
rewrote all of the frontiers (M) in 16.3391s.
Completed one step of memory consolidation in 2.19277m.
New primitive is used 76 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RUN $0)))
  (lambda (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RUN $0)))
  (lambda (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LOOK $0)))
  (lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_WALK $0)))
  (lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LOOK $0)))
  (lambda (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_WALK $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN $0)))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RUN (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RUN (SCAN_RUN $0))))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LOOK (SCAN_LOOK $0))))
  (lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN (SCAN_JUMP $0))))
  (lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN (SCAN_JUMP $0))))
  (lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN (SCAN_LTURN $0))))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN (SCAN_LTURN $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN (SCAN_LTURN $0))))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN (SCAN_LTURN $0))))
Total number of candidates: 105513
Constructed version spaces and coalesced candidates in 28.8033s.
Trimmed down the beam, have only 300 best candidates (M)
Rewrote topK in 50.4214s.
Initial score: -12474.159539
 (M)New frontiers length 300 Scored candidates (M) in 10.8855s.
Improved score to -12363.722375 (dScore=110.437164) w/ new primitive (M)
	#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) : tstr -> tstr
rewrote all of the frontiers (M) in 15.2063s.
Completed one step of memory consolidation in 2.02177m.
New primitive is used 75 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))
  (lambda (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RUN $0)))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RUN $0)))
  (lambda (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_WALK $0)))
  (lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_WALK $0)))
  (lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_JUMP $0)))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_JUMP $0)))
  (lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN $0)))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN $0)))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RUN (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RUN (SCAN_RUN $0))))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_JUMP (SCAN_JUMP $0))))
  (lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_WALK (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN (SCAN_LOOK $0))))
  (lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN (SCAN_LTURN $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN (SCAN_LTURN $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN (SCAN_LTURN $0))))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN (SCAN_LTURN $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))
Total number of candidates: 92512
Constructed version spaces and coalesced candidates in 27.409s.
Trimmed down the beam, have only 300 best candidates (M)
Rewrote topK in 48.8829s.
Initial score: -12363.722375
 (M)New frontiers length 300 Scored candidates (M) in 11.0959s.
Improved score to -12259.302389 (dScore=104.419986) w/ new primitive (M)
	#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) : tstr -> tstr
rewrote all of the frontiers (M) in 14.63s.
Completed one step of memory consolidation in 1.94063m.
New primitive is used 70 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))
  (lambda (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RUN $0)))
  (lambda (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RUN $0)))
  (lambda (SCAN_JUMP (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (SCAN_JUMP (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_JUMP $0)))
  (lambda (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LOOK $0)))
  (lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_JUMP $0)))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LOOK $0)))
  (lambda (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN $0)))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RUN (SCAN_RUN $0))))
  (lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LOOK (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN (SCAN_WALK $0))))
  (lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN (SCAN_WALK $0))))
  (lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN (SCAN_LTURN $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN (SCAN_LTURN $0))))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN (SCAN_LTURN $0))))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN (SCAN_LTURN $0))))
  (lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))
Total number of candidates: 80926
Constructed version spaces and coalesced candidates in 23.3979s.
Trimmed down the beam, have only 300 best candidates (M)
Rewrote topK in 47.2298s.
Initial score: -12259.302389
 (M)New frontiers length 300 Scored candidates (M) in 11.753s.
Improved score to -12171.053302 (dScore=88.249087) w/ new primitive (M)
	#(lambda (SCAN_LTURN (SCAN_LTURN $0))) : tstr -> tstr
rewrote all of the frontiers (M) in 12.702s.
Completed one step of memory consolidation in 1.79934m.
New primitive is used 338 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))
  (lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))
  (lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))
  (lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))
  (lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))
  (lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))
  (lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))
  (lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))
  (lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))
  (lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))
  (lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))
  (lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))
  (lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))
  (lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))
  (lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_JUMP $0))))
  (lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))
  (lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))
  (lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_RUN $0))))
  (lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))
  (lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))
  (lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_WALK $0))))
  (lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))
  (lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))
  (lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_LOOK $0))))
  (lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))
  (lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))
  (lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))
  (lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_LOOK $0))))
  (lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))
  (lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RTURN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RTURN $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN $0))))
  (lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))
  (lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))
  (lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_RUN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_JUMP $0))))
  (lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))
  (lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))
  (lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))
  (lambda (SCAN_RUN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_LTURN $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))
  (lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_RTURN $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LTURN $0))))
  (lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))
  (lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_LTURN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_LOOK $0))))
  (lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LOOK (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_JUMP $0))))
  (lambda (SCAN_JUMP (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_WALK $0))))
  (lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_RTURN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_RTURN $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_LTURN $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LTURN $0))))
  (lambda (SCAN_WALK (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_JUMP $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_RTURN $0))))
  (lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_LTURN $0))))
  (lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LOOK (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_RTURN $0))))
  (lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))
  (lambda (SCAN_WALK (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_JUMP (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_RTURN $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_WALK $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))
  (lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))))
  (lambda (SCAN_RTURN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))))
  (lambda (SCAN_RTURN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_RTURN $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (SCAN_RTURN (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0)))))
  (lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0)))))
  (lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))
  (lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))))
  (lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
Total number of candidates: 71199
Constructed version spaces and coalesced candidates in 17.0885s.
Trimmed down the beam, have only 300 best candidates (M)
Rewrote topK in 37.8272s.
Initial score: -12171.053302
 (M)New frontiers length 300 Scored candidates (M) in 12.1877s.
Improved score to -12113.381379 (dScore=57.671923) w/ new primitive (M)
	#(lambda (SCAN_RTURN (SCAN_RTURN $0))) : tstr -> tstr
rewrote all of the frontiers (M) in 9.97618s.
Completed one step of memory consolidation in 1.44784m.
New primitive is used 344 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))
  (lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))
  (lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))
  (lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))
  (lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))
  (lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))
  (lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))
  (lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))
  (lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))
  (lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))
  (lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))
  (lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))
  (lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_RUN $0))))
  (lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))
  (lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_RUN $0))))
  (lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))
  (lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_WALK $0))))
  (lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))
  (lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_LOOK $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_LOOK $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))
  (lambda (SCAN_RUN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))
  (lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_JUMP $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))
  (lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))
  (lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RUN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_JUMP $0))))
  (lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_WALK $0))))
  (lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))
  (lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))
  (lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))
  (lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))
  (lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))
  (lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN $0))))
  (lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))
  (lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))
  (lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_LTURN $0))))
  (lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_LTURN $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))
  (lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))
  (lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_JUMP $0))))
  (lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))
  (lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_RUN $0))))
  (lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))
  (lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_LOOK $0))))
  (lambda (SCAN_LOOK (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_RTURN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_WALK $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))
  (lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_LOOK $0))))
  (lambda (SCAN_LOOK (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))
  (lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_LTURN $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LTURN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_LOOK $0))))
  (lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))
  (lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_LTURN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_LTURN $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))
  (lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))
  (lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_WALK $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))
  (lambda (SCAN_WALK (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))
  (lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_WALK (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_RTURN $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))
  (lambda (SCAN_JUMP (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_RTURN $0))))
  (lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_WALK $0))))
  (lambda (SCAN_JUMP (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_LTURN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_RTURN $0))))
  (lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))
  (lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LTURN $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))
  (lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_WALK $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_JUMP $0))))
  (lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))
  (lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_RTURN $0))))
  (lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))
  (lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_RTURN $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_JUMP $0))))
  (lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_LTURN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_LTURN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))
  (lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))
  (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0)))))
  (lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))))
  (lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))
  (lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0)))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))
  (lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))))
  (lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
  (lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))))
  (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
  (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))
Total number of candidates: 55586
Constructed version spaces and coalesced candidates in 13.1979s.
Trimmed down the beam, have only 300 best candidates (M)
Rewrote topK in 31.2199s.
Initial score: -12113.381379
 (M)New frontiers length 300 Scored candidates (M) in 12.7232s.
No improvement possible. (M) 
Completed one step of memory consolidation in 1.07234m.
completed ocaml compression in 13.1054m.
Finished consolidation.
Induced a grammar in 787.3 seconds
Grammar after iteration 1:
-1.317252	t0	$_
-2.280857	tstr -> tstr	SCAN_RUN
-2.302957	tstr -> tstr	SCAN_LOOK
-2.306689	tstr -> tstr	SCAN_JUMP
-2.342849	tstr -> tstr	SCAN_WALK
-2.402747	tstr -> tstr	SCAN_RTURN
-2.427748	tstr -> tstr	SCAN_LTURN
-2.627950	tstr -> tstr	#(lambda (SCAN_RTURN (SCAN_RTURN $0)))
-2.643535	tstr -> tstr	#(lambda (SCAN_LTURN (SCAN_LTURN $0)))
-3.844023	tstr -> tstr	#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))
-3.925516	tstr -> tstr	#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))
-3.934995	tstr -> tstr	#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))
-3.983785	tstr -> tstr	#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))
Currently using this much memory: 262295552
ecIterator count 0
Currently using this much memory: 262295552
Currently using this much memory: 262295552
Using a waking task batch of size: 2000
Disabling parallelism on the Python side because we only have one job.
If you are using ocaml, there could still be parallelism.
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 0. |finished| = 1.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.573751.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 0. |finished| = 0.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 3.000000 <= MDL < 4.500000. Timeout 4.083616.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 0. |finished| = 8.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 4.500000 <= MDL < 6.000000. Timeout 3.637124.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 0. |finished| = 4.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 6.000000 <= MDL < 7.500000. Timeout 3.070314.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 205. |finished| = 11.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 7.500000 <= MDL < 9.000000. Timeout 2.224946.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 210. |finished| = 0.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 9.000000 <= MDL < 10.500000. Timeout 1.260158.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 210. |finished| = 0.)
We enumerated this many programs, for each task:
	
Generative model enumeration results:
HIT 2001: walk thrice and turn opposite right w/ (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.123580 ; log likelihood = 0.000000
HIT 2008: jump thrice after turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))) ; log prior = -8.080896 ; log likelihood = 0.000000
HIT 2019: turn left twice and run opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.144636 ; log likelihood = 0.000000
HIT 2020: run opposite left after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.129051 ; log likelihood = 0.000000
HIT 2026: run opposite left after turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.144636 ; log likelihood = 0.000000
HIT 2031: run opposite left and turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.144636 ; log likelihood = 0.000000
HIT 2033: run opposite right and turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.113466 ; log likelihood = 0.000000
HIT 2036: turn opposite left twice and run w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.144636 ; log likelihood = 0.000000
HIT 2038: run thrice after run opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RUN $0)))) ; log prior = -10.345124 ; log likelihood = 0.000000
HIT 2042: run opposite left and turn opposite right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.129051 ; log likelihood = 0.000000
HIT 2048: run opposite right and turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.113466 ; log likelihood = 0.000000
HIT 2050: run and turn opposite left twice w/ (lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.144636 ; log likelihood = 0.000000
HIT 2051: turn right twice and run opposite left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.129051 ; log likelihood = 0.000000
HIT 2053: run after turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.113466 ; log likelihood = 0.000000
HIT 2057: turn opposite right and run opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.113466 ; log likelihood = 0.000000
HIT 2063: turn opposite right after run opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.113466 ; log likelihood = 0.000000
HIT 2066: run opposite right after turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.113466 ; log likelihood = 0.000000
HIT 2072: run opposite right and turn opposite left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.129051 ; log likelihood = 0.000000
HIT 2078: turn opposite right twice after run w/ (lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.113466 ; log likelihood = 0.000000
HIT 2079: run opposite left and run thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RUN $0)))) ; log prior = -10.345124 ; log likelihood = 0.000000
HIT 2080: run opposite right and turn left twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.129051 ; log likelihood = 0.000000
HIT 2085: turn right twice and run opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.113466 ; log likelihood = 0.000000
HIT 2086: run thrice and run opposite left w/ (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -10.345124 ; log likelihood = 0.000000
HIT 2091: run opposite left after turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.129051 ; log likelihood = 0.000000
HIT 2097: run opposite right after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.129051 ; log likelihood = 0.000000
HIT 2099: turn around right after run w/ (lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.113466 ; log likelihood = 0.000000
HIT 2101: turn opposite left after run opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.129051 ; log likelihood = 0.000000
HIT 2106: run after turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.144636 ; log likelihood = 0.000000
HIT 2125: run thrice and run opposite right w/ (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -10.329540 ; log likelihood = 0.000000
HIT 2146: run opposite left after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.144636 ; log likelihood = 0.000000
HIT 2165: turn right twice after run opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.129051 ; log likelihood = 0.000000
HIT 2173: run and turn opposite right twice w/ (lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.113466 ; log likelihood = 0.000000
HIT 2176: turn opposite right and run opposite left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.129051 ; log likelihood = 0.000000
HIT 2181: turn left twice after run opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.129051 ; log likelihood = 0.000000
HIT 2182: run after turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.113466 ; log likelihood = 0.000000
HIT 2185: run opposite left and turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.144636 ; log likelihood = 0.000000
HIT 2189: turn right twice after run opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.113466 ; log likelihood = 0.000000
HIT 2192: run opposite left and turn right twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.129051 ; log likelihood = 0.000000
HIT 2193: turn opposite left twice after run w/ (lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.144636 ; log likelihood = 0.000000
HIT 2197: run opposite right after run thrice w/ (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -10.329540 ; log likelihood = 0.000000
HIT 2198: run opposite left after run thrice w/ (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -10.345124 ; log likelihood = 0.000000
HIT 2204: turn around right and run w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.113466 ; log likelihood = 0.000000
HIT 2211: run and turn around right w/ (lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.113466 ; log likelihood = 0.000000
HIT 2214: run and turn around left w/ (lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.144636 ; log likelihood = 0.000000
HIT 2228: run thrice after run opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RUN $0)))) ; log prior = -10.329540 ; log likelihood = 0.000000
HIT 2230: run right after turn right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.113466 ; log likelihood = 0.000000
HIT 2240: turn opposite left and run opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.144636 ; log likelihood = 0.000000
HIT 2242: turn left twice and run opposite right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.129051 ; log likelihood = 0.000000
HIT 2244: turn around left and run w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.144636 ; log likelihood = 0.000000
HIT 2257: turn opposite left and run opposite right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.129051 ; log likelihood = 0.000000
HIT 2258: turn opposite right after run opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.129051 ; log likelihood = 0.000000
HIT 2262: run left after turn left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.144636 ; log likelihood = 0.000000
HIT 2265: run opposite right after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.113466 ; log likelihood = 0.000000
HIT 2272: run after turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.144636 ; log likelihood = 0.000000
HIT 2277: turn right thrice and run right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.113466 ; log likelihood = 0.000000
HIT 2281: turn around left after run w/ (lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.144636 ; log likelihood = 0.000000
HIT 2283: turn opposite right twice and run w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.113466 ; log likelihood = 0.000000
HIT 2293: turn left thrice and run left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.144636 ; log likelihood = 0.000000
HIT 2296: run opposite right and run thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RUN $0)))) ; log prior = -10.329540 ; log likelihood = 0.000000
HIT 2298: run opposite right after turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -9.129051 ; log likelihood = 0.000000
HIT 2299: turn left twice after run opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.144636 ; log likelihood = 0.000000
HIT 2305: turn opposite left after run opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.144636 ; log likelihood = 0.000000
HIT 2312: run thrice after walk opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))) ; log prior = -10.407116 ; log likelihood = 0.000000
HIT 2313: look opposite right after run thrice w/ (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -10.351640 ; log likelihood = 0.000000
HIT 2314: turn around right and walk w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.175458 ; log likelihood = 0.000000
HIT 2315: jump opposite right after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.139298 ; log likelihood = 0.000000
HIT 2317: look and turn opposite left twice w/ (lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.166736 ; log likelihood = 0.000000
HIT 2318: walk right after turn right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.175458 ; log likelihood = 0.000000
HIT 2319: walk opposite right and turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.175458 ; log likelihood = 0.000000
HIT 2320: turn opposite right twice after look w/ (lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.135567 ; log likelihood = 0.000000
HIT 2321: turn opposite right twice and look w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.135567 ; log likelihood = 0.000000
HIT 2322: turn left twice and look opposite right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.151151 ; log likelihood = 0.000000
HIT 2323: walk opposite left after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.191043 ; log likelihood = 0.000000
HIT 2324: walk opposite left after turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.191043 ; log likelihood = 0.000000
HIT 2325: jump right after turn right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.139298 ; log likelihood = 0.000000
HIT 2326: turn around left after walk w/ (lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.206627 ; log likelihood = 0.000000
HIT 2327: turn left twice and jump opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.170467 ; log likelihood = 0.000000
HIT 2328: turn opposite left and jump opposite right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.154883 ; log likelihood = 0.000000
HIT 2329: turn around left after look w/ (lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.166736 ; log likelihood = 0.000000
HIT 2330: turn opposite left after look opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.166736 ; log likelihood = 0.000000
HIT 2331: turn opposite left after walk opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.191043 ; log likelihood = 0.000000
HIT 2333: walk opposite right and turn opposite left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.191043 ; log likelihood = 0.000000
HIT 2334: walk left after turn left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.206627 ; log likelihood = 0.000000
HIT 2335: jump opposite right and turn left twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.154883 ; log likelihood = 0.000000
HIT 2336: turn right thrice and look right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.135567 ; log likelihood = 0.000000
HIT 2337: turn opposite left after walk opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.206627 ; log likelihood = 0.000000
HIT 2338: run thrice and walk opposite left w/ (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -10.407116 ; log likelihood = 0.000000
HIT 2340: turn right twice and walk opposite left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.191043 ; log likelihood = 0.000000
HIT 2341: turn left twice after walk opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.191043 ; log likelihood = 0.000000
HIT 2342: walk opposite left after run thrice w/ (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -10.407116 ; log likelihood = 0.000000
HIT 2343: look opposite left after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.151151 ; log likelihood = 0.000000
HIT 2344: look and turn around right w/ (lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.135567 ; log likelihood = 0.000000
HIT 2345: turn left twice after jump opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.170467 ; log likelihood = 0.000000
HIT 2346: turn opposite right and look opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.135567 ; log likelihood = 0.000000
HIT 2347: jump after turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.170467 ; log likelihood = 0.000000
HIT 2348: jump opposite right after run thrice w/ (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -10.355371 ; log likelihood = 0.000000
HIT 2349: turn opposite right and walk opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.175458 ; log likelihood = 0.000000
HIT 2350: jump opposite right and run thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))) ; log prior = -10.355371 ; log likelihood = 0.000000
HIT 2351: walk opposite right after turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.191043 ; log likelihood = 0.000000
HIT 2352: jump opposite right and turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.139298 ; log likelihood = 0.000000
HIT 2354: turn around right after jump w/ (lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.139298 ; log likelihood = 0.000000
HIT 2355: jump opposite right after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.154883 ; log likelihood = 0.000000
HIT 2356: turn opposite right after jump opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.139298 ; log likelihood = 0.000000
HIT 2358: jump opposite right after turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.154883 ; log likelihood = 0.000000
HIT 2359: turn left twice and walk opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.206627 ; log likelihood = 0.000000
HIT 2361: walk opposite right after run thrice w/ (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -10.391531 ; log likelihood = 0.000000
HIT 2362: jump opposite left and turn opposite right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.154883 ; log likelihood = 0.000000
HIT 2363: walk opposite left and turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.206627 ; log likelihood = 0.000000
HIT 2364: look opposite left and turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.166736 ; log likelihood = 0.000000
HIT 2366: walk opposite left and run thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))) ; log prior = -10.407116 ; log likelihood = 0.000000
HIT 2368: look opposite right after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.135567 ; log likelihood = 0.000000
HIT 2369: turn around left and look w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.166736 ; log likelihood = 0.000000
HIT 2370: walk opposite left and turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.206627 ; log likelihood = 0.000000
HIT 2371: walk opposite left and turn right twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.191043 ; log likelihood = 0.000000
HIT 2372: jump opposite left and turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.170467 ; log likelihood = 0.000000
HIT 2373: run thrice and jump opposite right w/ (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -10.355371 ; log likelihood = 0.000000
HIT 2374: turn around left and walk w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.206627 ; log likelihood = 0.000000
HIT 2375: turn left twice and walk opposite right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.191043 ; log likelihood = 0.000000
HIT 2376: turn right twice after walk opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.175458 ; log likelihood = 0.000000
HIT 2377: turn left twice after walk opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.206627 ; log likelihood = 0.000000
HIT 2378: jump opposite left and run thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))) ; log prior = -10.370956 ; log likelihood = 0.000000
HIT 2379: jump opposite right after turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.139298 ; log likelihood = 0.000000
HIT 2380: jump opposite left after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.170467 ; log likelihood = 0.000000
HIT 2381: turn right twice after look opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.151151 ; log likelihood = 0.000000
HIT 2382: turn opposite left and look opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.166736 ; log likelihood = 0.000000
HIT 2383: turn right twice after jump opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.154883 ; log likelihood = 0.000000
HIT 2384: look and turn opposite right twice w/ (lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.135567 ; log likelihood = 0.000000
HIT 2386: turn opposite right and jump opposite left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.154883 ; log likelihood = 0.000000
HIT 2388: look opposite left after run thrice w/ (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -10.367225 ; log likelihood = 0.000000
HIT 2389: turn opposite left twice after jump w/ (lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.170467 ; log likelihood = 0.000000
HIT 2390: turn around right after walk w/ (lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.175458 ; log likelihood = 0.000000
HIT 2391: look opposite left and turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.166736 ; log likelihood = 0.000000
HIT 2392: turn opposite left after jump opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.154883 ; log likelihood = 0.000000
HIT 2393: walk opposite right and turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.175458 ; log likelihood = 0.000000
HIT 2394: walk and turn opposite left twice w/ (lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.206627 ; log likelihood = 0.000000
HIT 2395: look opposite right after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.151151 ; log likelihood = 0.000000
HIT 2396: look opposite left after turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.151151 ; log likelihood = 0.000000
HIT 2397: walk opposite left and turn opposite right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.191043 ; log likelihood = 0.000000
HIT 2398: turn opposite left twice and jump w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.170467 ; log likelihood = 0.000000
HIT 2399: turn opposite left after jump opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.170467 ; log likelihood = 0.000000
HIT 2400: walk opposite left after turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.206627 ; log likelihood = 0.000000
HIT 2401: turn opposite left twice after walk w/ (lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.206627 ; log likelihood = 0.000000
HIT 2402: look opposite left and turn opposite right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.151151 ; log likelihood = 0.000000
HIT 2405: turn right twice after look opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.135567 ; log likelihood = 0.000000
HIT 2407: walk opposite right after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.191043 ; log likelihood = 0.000000
HIT 2408: turn right twice and walk opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.175458 ; log likelihood = 0.000000
HIT 2409: jump and turn around left w/ (lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.170467 ; log likelihood = 0.000000
HIT 2410: look opposite right after turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.135567 ; log likelihood = 0.000000
HIT 2411: jump opposite left and turn right twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.154883 ; log likelihood = 0.000000
HIT 2412: turn opposite right after look opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.151151 ; log likelihood = 0.000000
HIT 2413: look after turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.135567 ; log likelihood = 0.000000
HIT 2414: turn opposite right twice after jump w/ (lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.139298 ; log likelihood = 0.000000
HIT 2415: run thrice after look opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))) ; log prior = -10.351640 ; log likelihood = 0.000000
HIT 2416: walk after turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.175458 ; log likelihood = 0.000000
HIT 2417: jump after turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.170467 ; log likelihood = 0.000000
HIT 2418: jump and turn around right w/ (lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.139298 ; log likelihood = 0.000000
HIT 2419: turn right twice and jump opposite left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.154883 ; log likelihood = 0.000000
HIT 2420: walk and turn opposite right twice w/ (lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.175458 ; log likelihood = 0.000000
HIT 2421: look opposite left and run thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))) ; log prior = -10.367225 ; log likelihood = 0.000000
HIT 2422: turn left twice after jump opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.154883 ; log likelihood = 0.000000
HIT 2423: jump after turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.139298 ; log likelihood = 0.000000
HIT 2424: turn opposite right after walk opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.191043 ; log likelihood = 0.000000
HIT 2425: turn opposite left twice after look w/ (lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.166736 ; log likelihood = 0.000000
HIT 2428: look opposite right and turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.135567 ; log likelihood = 0.000000
HIT 2430: turn opposite left and walk opposite right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.191043 ; log likelihood = 0.000000
HIT 2431: turn opposite right and walk opposite left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.191043 ; log likelihood = 0.000000
HIT 2432: turn opposite right and look opposite left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.151151 ; log likelihood = 0.000000
HIT 2433: turn right thrice and walk right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.175458 ; log likelihood = 0.000000
HIT 2434: turn opposite right after walk opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.175458 ; log likelihood = 0.000000
HIT 2435: turn around right and jump w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.139298 ; log likelihood = 0.000000
HIT 2436: walk opposite right and turn left twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.191043 ; log likelihood = 0.000000
HIT 2437: turn left twice after look opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.151151 ; log likelihood = 0.000000
HIT 2438: turn opposite left and jump opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.170467 ; log likelihood = 0.000000
HIT 2439: turn opposite right after jump opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.154883 ; log likelihood = 0.000000
HIT 2440: jump opposite left after run thrice w/ (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -10.370956 ; log likelihood = 0.000000
HIT 2441: turn left twice and jump opposite right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.154883 ; log likelihood = 0.000000
HIT 2442: look opposite right and turn opposite left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.151151 ; log likelihood = 0.000000
HIT 2443: jump after turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.139298 ; log likelihood = 0.000000
HIT 2444: look after turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.166736 ; log likelihood = 0.000000
HIT 2446: look after turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.135567 ; log likelihood = 0.000000
HIT 2447: turn left thrice and walk left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.206627 ; log likelihood = 0.000000
HIT 2448: walk and turn around right w/ (lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.175458 ; log likelihood = 0.000000
HIT 2449: look opposite right and run thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))) ; log prior = -10.351640 ; log likelihood = 0.000000
HIT 2450: run thrice and jump opposite left w/ (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -10.370956 ; log likelihood = 0.000000
HIT 2452: turn around right after look w/ (lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.135567 ; log likelihood = 0.000000
HIT 2453: look opposite left after turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.166736 ; log likelihood = 0.000000
HIT 2454: walk opposite right after turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.175458 ; log likelihood = 0.000000
HIT 2455: run thrice after jump opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))) ; log prior = -10.355371 ; log likelihood = 0.000000
HIT 2457: turn left thrice and jump left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.170467 ; log likelihood = 0.000000
HIT 2458: turn around right and look w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.135567 ; log likelihood = 0.000000
HIT 2459: jump and turn opposite left twice w/ (lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.170467 ; log likelihood = 0.000000
HIT 2460: run thrice and look opposite left w/ (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -10.367225 ; log likelihood = 0.000000
HIT 2461: jump opposite left after turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.170467 ; log likelihood = 0.000000
HIT 2462: turn opposite left after look opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.151151 ; log likelihood = 0.000000
HIT 2463: jump and turn opposite right twice w/ (lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.139298 ; log likelihood = 0.000000
HIT 2464: turn opposite right and jump opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.139298 ; log likelihood = 0.000000
HIT 2465: turn opposite right twice and jump w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.139298 ; log likelihood = 0.000000
HIT 2466: turn left twice and look opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.166736 ; log likelihood = 0.000000
HIT 2467: turn right thrice and jump right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.139298 ; log likelihood = 0.000000
HIT 2469: turn opposite left twice and look w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.166736 ; log likelihood = 0.000000
HIT 2470: turn opposite right after look opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.135567 ; log likelihood = 0.000000
HIT 2471: look opposite right and turn left twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.151151 ; log likelihood = 0.000000
HIT 2472: walk after turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.206627 ; log likelihood = 0.000000
HIT 2473: run thrice and look opposite right w/ (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -10.351640 ; log likelihood = 0.000000
HIT 2474: run thrice after look opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))) ; log prior = -10.367225 ; log likelihood = 0.000000
HIT 2475: turn opposite left and walk opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.206627 ; log likelihood = 0.000000
HIT 2476: look opposite right after turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.151151 ; log likelihood = 0.000000
HIT 2478: look opposite left after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.166736 ; log likelihood = 0.000000
HIT 2479: turn right twice and look opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.135567 ; log likelihood = 0.000000
HIT 2481: walk opposite right and run thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))) ; log prior = -10.391531 ; log likelihood = 0.000000
HIT 2482: walk after turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.206627 ; log likelihood = 0.000000
HIT 2485: walk opposite left after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.206627 ; log likelihood = 0.000000
HIT 2486: turn right twice after walk opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.191043 ; log likelihood = 0.000000
HIT 2487: walk after turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.175458 ; log likelihood = 0.000000
HIT 2488: turn around left after jump w/ (lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.170467 ; log likelihood = 0.000000
HIT 2489: look opposite left and turn right twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.151151 ; log likelihood = 0.000000
HIT 2491: walk and turn around left w/ (lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.206627 ; log likelihood = 0.000000
HIT 2492: look left after turn left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.166736 ; log likelihood = 0.000000
HIT 2493: look right after turn right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.135567 ; log likelihood = 0.000000
HIT 2494: run thrice after walk opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))) ; log prior = -10.391531 ; log likelihood = 0.000000
HIT 2495: jump opposite left and turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.170467 ; log likelihood = 0.000000
HIT 2496: jump left after turn left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.170467 ; log likelihood = 0.000000
HIT 2497: turn right twice and jump opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.139298 ; log likelihood = 0.000000
HIT 2498: turn opposite left twice and walk w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.206627 ; log likelihood = 0.000000
HIT 2499: turn left thrice and look left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.166736 ; log likelihood = 0.000000
HIT 2500: look and turn around left w/ (lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.166736 ; log likelihood = 0.000000
HIT 2501: jump opposite left after turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.154883 ; log likelihood = 0.000000
HIT 2502: turn right twice and look opposite left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.151151 ; log likelihood = 0.000000
HIT 2503: turn opposite right twice and walk w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.175458 ; log likelihood = 0.000000
HIT 2504: turn left twice after look opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.166736 ; log likelihood = 0.000000
HIT 2506: look opposite right and turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.135567 ; log likelihood = 0.000000
HIT 2507: turn right twice after jump opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.139298 ; log likelihood = 0.000000
HIT 2508: turn opposite right twice after walk w/ (lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.175458 ; log likelihood = 0.000000
HIT 2509: jump opposite right and turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.139298 ; log likelihood = 0.000000
HIT 2510: jump opposite left after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.154883 ; log likelihood = 0.000000
HIT 2512: turn opposite left and look opposite right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.151151 ; log likelihood = 0.000000
HIT 2513: run thrice and walk opposite right w/ (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -10.391531 ; log likelihood = 0.000000
HIT 2514: run thrice after jump opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))) ; log prior = -10.370956 ; log likelihood = 0.000000
HIT 2517: jump opposite right and turn opposite left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.154883 ; log likelihood = 0.000000
HIT 2518: turn around left and jump w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -9.170467 ; log likelihood = 0.000000
HIT 2521: look after turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -9.166736 ; log likelihood = 0.000000
HIT 2522: walk opposite right after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -9.175458 ; log likelihood = 0.000000
HIT 2526: turn right thrice after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.235356 ; log likelihood = 0.000000
HIT 2527: turn left thrice after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.291527 ; log likelihood = 0.000000
HIT 2528: walk thrice after look thrice w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))) ; log prior = -9.430625 ; log likelihood = 0.000000
HIT 2529: turn around left and turn right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.266526 ; log likelihood = 0.000000
HIT 2531: turn opposite right twice and turn left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.260357 ; log likelihood = 0.000000
HIT 2533: run thrice after turn right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))) ; log prior = -10.451429 ; log likelihood = 0.000000
HIT 2535: turn around left after turn right w/ (lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.266526 ; log likelihood = 0.000000
HIT 2536: turn right thrice after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.250941 ; log likelihood = 0.000000
HIT 2539: run thrice after turn left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))) ; log prior = -10.492015 ; log likelihood = 0.000000
HIT 2540: turn around right after turn left w/ (lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.260357 ; log likelihood = 0.000000
HIT 2541: turn opposite right twice and turn right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.235356 ; log likelihood = 0.000000
HIT 2542: turn left thrice after turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.291527 ; log likelihood = 0.000000
HIT 2543: turn left after turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.260357 ; log likelihood = 0.000000
HIT 2544: turn left after turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.291527 ; log likelihood = 0.000000
HIT 2545: jump thrice and jump thrice w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))) ; log prior = -9.362877 ; log likelihood = 0.000000
HIT 2546: look thrice and jump thrice w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))) ; log prior = -9.372356 ; log likelihood = 0.000000
HIT 2549: look thrice after look thrice w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))) ; log prior = -9.381835 ; log likelihood = 0.000000
HIT 2550: look thrice and look thrice w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))) ; log prior = -9.381835 ; log likelihood = 0.000000
HIT 2551: turn opposite left after turn right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.250941 ; log likelihood = 0.000000
HIT 2552: turn right and turn around left w/ (lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.266526 ; log likelihood = 0.000000
HIT 2557: turn right and turn opposite left twice w/ (lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.266526 ; log likelihood = 0.000000
HIT 2559: turn around left and turn left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.291527 ; log likelihood = 0.000000
HIT 2561: turn around right after turn right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.235356 ; log likelihood = 0.000000
HIT 2564: turn left and turn around right w/ (lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.260357 ; log likelihood = 0.000000
HIT 2566: turn left and turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.291527 ; log likelihood = 0.000000
HIT 2568: turn opposite right after turn right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.235356 ; log likelihood = 0.000000
HIT 2570: walk thrice and jump thrice w/ (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))) ; log prior = -9.421146 ; log likelihood = 0.000000
HIT 2571: turn left thrice and run thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))) ; log prior = -10.492015 ; log likelihood = 0.000000
HIT 2573: turn right twice and turn left thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.275942 ; log likelihood = 0.000000
HIT 2574: turn right after turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.235356 ; log likelihood = 0.000000
HIT 2576: turn left and turn opposite right twice w/ (lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.260357 ; log likelihood = 0.000000
HIT 2577: turn left after turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.260357 ; log likelihood = 0.000000
HIT 2578: turn left thrice and turn opposite right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.275942 ; log likelihood = 0.000000
HIT 2579: jump thrice and walk thrice w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))) ; log prior = -9.421146 ; log likelihood = 0.000000
HIT 2585: jump thrice after walk thrice w/ (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))) ; log prior = -9.421146 ; log likelihood = 0.000000
HIT 2586: turn left thrice after run thrice w/ (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -10.492015 ; log likelihood = 0.000000
HIT 2587: turn opposite right twice after turn right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.235356 ; log likelihood = 0.000000
HIT 2590: turn opposite right twice after turn left w/ (lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.260357 ; log likelihood = 0.000000
HIT 2593: turn right and turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.235356 ; log likelihood = 0.000000
HIT 2594: turn right thrice after turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.235356 ; log likelihood = 0.000000
HIT 2595: turn right after turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.266526 ; log likelihood = 0.000000
HIT 2597: turn left twice and turn left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.291527 ; log likelihood = 0.000000
HIT 2598: turn opposite right after turn left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.275942 ; log likelihood = 0.000000
HIT 2600: turn opposite left twice after turn left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.291527 ; log likelihood = 0.000000
HIT 2601: turn right after turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.266526 ; log likelihood = 0.000000
HIT 2605: jump thrice and look thrice w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))) ; log prior = -9.372356 ; log likelihood = 0.000000
HIT 2607: run thrice and turn right thrice w/ (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -10.451429 ; log likelihood = 0.000000
HIT 2608: turn opposite left twice and turn left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.291527 ; log likelihood = 0.000000
HIT 2609: turn opposite left after turn left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.291527 ; log likelihood = 0.000000
HIT 2610: turn opposite left and turn right thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.250941 ; log likelihood = 0.000000
HIT 2611: turn opposite right and turn right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.235356 ; log likelihood = 0.000000
HIT 2612: walk thrice and look thrice w/ (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))) ; log prior = -9.430625 ; log likelihood = 0.000000
HIT 2615: turn opposite left twice and turn right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.266526 ; log likelihood = 0.000000
HIT 2617: turn left thrice after turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.275942 ; log likelihood = 0.000000
HIT 2618: turn right thrice and run thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))) ; log prior = -10.451429 ; log likelihood = 0.000000
HIT 2620: walk thrice after walk thrice w/ (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))) ; log prior = -9.479415 ; log likelihood = 0.000000
HIT 2621: turn around right and turn right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.235356 ; log likelihood = 0.000000
HIT 2623: turn right thrice after run thrice w/ (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -10.451429 ; log likelihood = 0.000000
HIT 2624: turn right thrice and turn opposite left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.250941 ; log likelihood = 0.000000
HIT 2625: turn right thrice and turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.235356 ; log likelihood = 0.000000
HIT 2627: turn right and turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.235356 ; log likelihood = 0.000000
HIT 2629: turn left thrice after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.275942 ; log likelihood = 0.000000
HIT 2631: turn left thrice and turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.291527 ; log likelihood = 0.000000
HIT 2632: turn opposite left twice after turn right w/ (lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.266526 ; log likelihood = 0.000000
HIT 2634: turn left twice after turn right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.250941 ; log likelihood = 0.000000
HIT 2635: jump thrice after jump thrice w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))) ; log prior = -9.362877 ; log likelihood = 0.000000
HIT 2636: turn right thrice and turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.235356 ; log likelihood = 0.000000
HIT 2640: turn left twice after turn left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.291527 ; log likelihood = 0.000000
HIT 2641: turn right twice after turn left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.275942 ; log likelihood = 0.000000
HIT 2642: walk thrice after jump thrice w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))) ; log prior = -9.421146 ; log likelihood = 0.000000
HIT 2643: turn opposite right and turn left thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.275942 ; log likelihood = 0.000000
HIT 2644: walk thrice and walk thrice w/ (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))) ; log prior = -9.479415 ; log likelihood = 0.000000
HIT 2647: turn right thrice after turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.250941 ; log likelihood = 0.000000
HIT 2648: turn right twice and turn right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.235356 ; log likelihood = 0.000000
HIT 2649: turn right thrice and turn left twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.250941 ; log likelihood = 0.000000
HIT 2651: turn left thrice and turn right twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.275942 ; log likelihood = 0.000000
HIT 2652: turn left and turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.291527 ; log likelihood = 0.000000
HIT 2657: turn right after turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.235356 ; log likelihood = 0.000000
HIT 2660: turn around left after turn left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.291527 ; log likelihood = 0.000000
HIT 2662: look thrice after walk thrice w/ (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))) ; log prior = -9.430625 ; log likelihood = 0.000000
HIT 2664: turn left twice and turn right thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.250941 ; log likelihood = 0.000000
HIT 2666: turn left thrice and turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.291527 ; log likelihood = 0.000000
HIT 2667: look thrice after jump thrice w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))) ; log prior = -9.372356 ; log likelihood = 0.000000
HIT 2670: turn right twice after turn right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0)))) ; log prior = -9.235356 ; log likelihood = 0.000000
HIT 2673: turn around right and turn left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.260357 ; log likelihood = 0.000000
HIT 2674: look thrice and walk thrice w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))) ; log prior = -9.430625 ; log likelihood = 0.000000
HIT 2677: run thrice and turn left thrice w/ (lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -10.492015 ; log likelihood = 0.000000
HIT 2678: jump thrice after look thrice w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))) ; log prior = -9.372356 ; log likelihood = 0.000000
HIT 2680: turn opposite left and turn left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.291527 ; log likelihood = 0.000000
HIT 2681: turn left after turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0)))) ; log prior = -9.291527 ; log likelihood = 0.000000
HIT 2684: look thrice and run opposite right w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -10.420511 ; log likelihood = 0.000000
HIT 2690: run opposite right after jump thrice w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -10.411033 ; log likelihood = 0.000000
HIT 2692: run opposite left and look thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))) ; log prior = -10.436096 ; log likelihood = 0.000000
HIT 2693: run opposite left and jump thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))) ; log prior = -10.426617 ; log likelihood = 0.000000
HIT 2694: run opposite right and walk thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))) ; log prior = -10.469301 ; log likelihood = 0.000000
HIT 2695: walk thrice after run opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))) ; log prior = -10.469301 ; log likelihood = 0.000000
HIT 2698: jump thrice and run opposite right w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -10.411033 ; log likelihood = 0.000000
HIT 2699: run opposite left and walk thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))) ; log prior = -10.484886 ; log likelihood = 0.000000
HIT 2701: jump thrice after run opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))) ; log prior = -10.411033 ; log likelihood = 0.000000
HIT 2702: run opposite right after look thrice w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -10.420511 ; log likelihood = 0.000000
HIT 2705: jump thrice after run opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))) ; log prior = -10.426617 ; log likelihood = 0.000000
HIT 2710: look thrice after run opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))) ; log prior = -10.436096 ; log likelihood = 0.000000
HIT 2711: run opposite left after jump thrice w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -10.426617 ; log likelihood = 0.000000
HIT 2713: run opposite right and look thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))) ; log prior = -10.420511 ; log likelihood = 0.000000
HIT 2714: walk thrice and run opposite right w/ (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -10.469301 ; log likelihood = 0.000000
HIT 2716: walk thrice and run opposite left w/ (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -10.484886 ; log likelihood = 0.000000
HIT 2718: run opposite left after look thrice w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -10.436096 ; log likelihood = 0.000000
HIT 2722: look thrice after run opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))) ; log prior = -10.420511 ; log likelihood = 0.000000
HIT 2730: jump thrice and run opposite left w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -10.426617 ; log likelihood = 0.000000
HIT 2734: run opposite left after walk thrice w/ (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -10.484886 ; log likelihood = 0.000000
HIT 2739: walk thrice after run opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))) ; log prior = -10.484886 ; log likelihood = 0.000000
HIT 2741: look thrice and run opposite left w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -10.436096 ; log likelihood = 0.000000
HIT 2745: run opposite right and jump thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))) ; log prior = -10.411033 ; log likelihood = 0.000000
HIT 2748: run opposite right after walk thrice w/ (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -10.469301 ; log likelihood = 0.000000
HIT 2755: look opposite right and walk thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))) ; log prior = -10.491402 ; log likelihood = 0.000000
HIT 2760: look opposite left and look thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LOOK $0)))) ; log prior = -10.458196 ; log likelihood = 0.000000
HIT 2770: jump opposite right and look thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))) ; log prior = -10.446343 ; log likelihood = 0.000000
HIT 2776: jump opposite left after jump thrice w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -10.452449 ; log likelihood = 0.000000
HIT 2780: jump thrice after jump opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_JUMP $0)))) ; log prior = -10.436864 ; log likelihood = 0.000000
HIT 2783: walk thrice after jump opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))) ; log prior = -10.495133 ; log likelihood = 0.000000
HIT 2784: jump thrice and jump opposite right w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -10.436864 ; log likelihood = 0.000000
HIT 2789: walk opposite left and jump thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))) ; log prior = -10.488609 ; log likelihood = 0.000000
HIT 2798: jump thrice after jump opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_JUMP $0)))) ; log prior = -10.452449 ; log likelihood = 0.000000
HIT 2807: jump opposite left after look thrice w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -10.461928 ; log likelihood = 0.000000
HIT 2813: look opposite right after walk thrice w/ (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -10.491402 ; log likelihood = 0.000000
HIT 2814: walk opposite right after look thrice w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -10.482503 ; log likelihood = 0.000000
HIT 2820: look opposite right and jump thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))) ; log prior = -10.433133 ; log likelihood = 0.000000
HIT 2826: look thrice after jump opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))) ; log prior = -10.461928 ; log likelihood = 0.000000
HIT 2827: look opposite left after jump thrice w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -10.448718 ; log likelihood = 0.000000
HIT 2834: look thrice after walk opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))) ; log prior = -10.482503 ; log likelihood = 0.000000
HIT 2838: walk opposite left and look thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))) ; log prior = -10.498088 ; log likelihood = 0.000000
HIT 2842: look opposite left and jump thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))) ; log prior = -10.448718 ; log likelihood = 0.000000
HIT 2843: walk thrice after look opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))) ; log prior = -10.491402 ; log likelihood = 0.000000
HIT 2848: look thrice after look opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LOOK $0)))) ; log prior = -10.442612 ; log likelihood = 0.000000
HIT 2850: look thrice after walk opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))) ; log prior = -10.498088 ; log likelihood = 0.000000
HIT 2864: walk opposite right and jump thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))) ; log prior = -10.473024 ; log likelihood = 0.000000
HIT 2865: look thrice after jump opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))) ; log prior = -10.446343 ; log likelihood = 0.000000
HIT 2873: jump thrice after look opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))) ; log prior = -10.433133 ; log likelihood = 0.000000
HIT 2881: look thrice and walk opposite left w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -10.498088 ; log likelihood = 0.000000
HIT 2885: jump thrice and look opposite left w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -10.448718 ; log likelihood = 0.000000
HIT 2886: look thrice and jump opposite left w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -10.461928 ; log likelihood = 0.000000
HIT 2887: jump thrice and jump opposite left w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -10.452449 ; log likelihood = 0.000000
HIT 2893: look opposite right after look thrice w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -10.442612 ; log likelihood = 0.000000
HIT 2894: look thrice and look opposite left w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -10.458196 ; log likelihood = 0.000000
HIT 2898: jump opposite right and walk thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))) ; log prior = -10.495133 ; log likelihood = 0.000000
HIT 2900: look opposite left after look thrice w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -10.458196 ; log likelihood = 0.000000
HIT 2902: jump thrice after walk opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))) ; log prior = -10.473024 ; log likelihood = 0.000000
HIT 2909: walk thrice and look opposite right w/ (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -10.491402 ; log likelihood = 0.000000
HIT 2914: jump thrice and walk opposite left w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -10.488609 ; log likelihood = 0.000000
HIT 2917: look thrice after look opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LOOK $0)))) ; log prior = -10.458196 ; log likelihood = 0.000000
HIT 2925: jump thrice after look opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))) ; log prior = -10.448718 ; log likelihood = 0.000000
HIT 2937: jump opposite right after look thrice w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -10.446343 ; log likelihood = 0.000000
HIT 2943: look thrice and jump opposite right w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -10.446343 ; log likelihood = 0.000000
HIT 2944: look opposite right after jump thrice w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -10.433133 ; log likelihood = 0.000000
HIT 2945: jump thrice and look opposite right w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -10.433133 ; log likelihood = 0.000000
HIT 2946: walk opposite right and look thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))) ; log prior = -10.482503 ; log likelihood = 0.000000
HIT 2949: look opposite right and look thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LOOK $0)))) ; log prior = -10.442612 ; log likelihood = 0.000000
HIT 2958: look thrice and look opposite right w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -10.442612 ; log likelihood = 0.000000
HIT 2965: jump thrice after walk opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))) ; log prior = -10.488609 ; log likelihood = 0.000000
HIT 2970: jump opposite left and look thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))) ; log prior = -10.461928 ; log likelihood = 0.000000
HIT 2975: walk opposite right after jump thrice w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -10.473024 ; log likelihood = 0.000000
HIT 2985: look thrice and walk opposite right w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -10.482503 ; log likelihood = 0.000000
HIT 2986: jump opposite left and jump thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_JUMP $0)))) ; log prior = -10.452449 ; log likelihood = 0.000000
HIT 2988: walk thrice and jump opposite right w/ (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -10.495133 ; log likelihood = 0.000000
HIT 2993: jump thrice and walk opposite right w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -10.473024 ; log likelihood = 0.000000
HIT 2996: walk opposite left after look thrice w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -10.498088 ; log likelihood = 0.000000
HIT 2999: walk opposite left after jump thrice w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -10.488609 ; log likelihood = 0.000000
HIT 3004: jump opposite right and jump thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_JUMP $0)))) ; log prior = -10.436864 ; log likelihood = 0.000000
HIT 3005: jump opposite right after walk thrice w/ (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -10.495133 ; log likelihood = 0.000000
HIT 3010: jump opposite right after jump thrice w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -10.436864 ; log likelihood = 0.000000
HIT 3729: turn opposite left after turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.507314 ; log likelihood = 0.000000
HIT 3732: turn left twice after turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.476144 ; log likelihood = 0.000000
HIT 3733: turn around left and turn right twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.491729 ; log likelihood = 0.000000
HIT 3734: turn around right and turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.460559 ; log likelihood = 0.000000
HIT 3735: turn right thrice and turn right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.460559 ; log likelihood = 0.000000
HIT 3736: turn opposite left and turn opposite right twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.476144 ; log likelihood = 0.000000
HIT 3737: turn opposite left twice and turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.507314 ; log likelihood = 0.000000
HIT 3738: turn around left and turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.507314 ; log likelihood = 0.000000
HIT 3739: turn around right and turn left twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.476144 ; log likelihood = 0.000000
HIT 3740: turn opposite left twice after turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.507314 ; log likelihood = 0.000000
HIT 3742: turn around right after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.476144 ; log likelihood = 0.000000
HIT 3743: turn around left after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.507314 ; log likelihood = 0.000000
HIT 3744: turn left thrice after turn left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.507314 ; log likelihood = 0.000000
HIT 3745: turn opposite left after turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.476144 ; log likelihood = 0.000000
HIT 3746: turn opposite right after turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.491729 ; log likelihood = 0.000000
HIT 3747: turn around left after turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.491729 ; log likelihood = 0.000000
HIT 3749: turn right twice after turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.460559 ; log likelihood = 0.000000
HIT 3750: turn right twice after turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.491729 ; log likelihood = 0.000000
HIT 3752: turn opposite left after turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.507314 ; log likelihood = 0.000000
HIT 3753: turn right twice and turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.460559 ; log likelihood = 0.000000
HIT 3755: turn opposite left twice and turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.507314 ; log likelihood = 0.000000
HIT 3758: turn left twice and turn around right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.476144 ; log likelihood = 0.000000
HIT 3767: turn left twice after turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.476144 ; log likelihood = 0.000000
HIT 3768: turn opposite right twice and turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.460559 ; log likelihood = 0.000000
HIT 3769: turn right twice and turn around left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.491729 ; log likelihood = 0.000000
HIT 3770: turn around right after turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.476144 ; log likelihood = 0.000000
HIT 3771: turn opposite right twice and turn left twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.476144 ; log likelihood = 0.000000
HIT 3774: turn around left and turn opposite right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.491729 ; log likelihood = 0.000000
HIT 3775: turn right twice and turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.460559 ; log likelihood = 0.000000
HIT 3777: turn around right after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.460559 ; log likelihood = 0.000000
HIT 3780: turn opposite right twice and turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.460559 ; log likelihood = 0.000000
HIT 3782: turn opposite left twice after turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.491729 ; log likelihood = 0.000000
HIT 3784: turn opposite right twice after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.476144 ; log likelihood = 0.000000
HIT 3787: turn around left after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.491729 ; log likelihood = 0.000000
HIT 3788: turn around left after turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.507314 ; log likelihood = 0.000000
HIT 3789: turn opposite right after turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.491729 ; log likelihood = 0.000000
HIT 3793: turn opposite right twice after turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.460559 ; log likelihood = 0.000000
HIT 3795: turn left twice after turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.507314 ; log likelihood = 0.000000
HIT 3796: turn right twice after turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.491729 ; log likelihood = 0.000000
HIT 3798: turn opposite right after turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.460559 ; log likelihood = 0.000000
HIT 3800: turn left twice and turn opposite right twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.476144 ; log likelihood = 0.000000
HIT 3802: turn left thrice and turn left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.507314 ; log likelihood = 0.000000
HIT 3804: turn left twice and turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.507314 ; log likelihood = 0.000000
HIT 3805: turn opposite right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.460559 ; log likelihood = 0.000000
HIT 3807: turn opposite right twice and turn opposite left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.476144 ; log likelihood = 0.000000
HIT 3809: turn opposite left twice and turn right twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.491729 ; log likelihood = 0.000000
HIT 3811: turn opposite right and turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.460559 ; log likelihood = 0.000000
HIT 3813: turn opposite left twice after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.491729 ; log likelihood = 0.000000
HIT 3816: turn opposite right and turn around left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.491729 ; log likelihood = 0.000000
HIT 3817: turn opposite left after turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.476144 ; log likelihood = 0.000000
HIT 3820: turn around left and turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.507314 ; log likelihood = 0.000000
HIT 3821: turn opposite right twice after turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.476144 ; log likelihood = 0.000000
HIT 3823: turn left twice after turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.507314 ; log likelihood = 0.000000
HIT 3824: turn right thrice after turn right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.460559 ; log likelihood = 0.000000
HIT 3825: turn opposite left and turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.507314 ; log likelihood = 0.000000
HIT 3826: turn opposite right and turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.460559 ; log likelihood = 0.000000
HIT 3828: turn right twice and turn opposite left twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.491729 ; log likelihood = 0.000000
HIT 3831: turn opposite right after turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.460559 ; log likelihood = 0.000000
HIT 3832: turn around right and turn opposite left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.476144 ; log likelihood = 0.000000
HIT 3834: turn opposite left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.507314 ; log likelihood = 0.000000
HIT 3838: turn opposite right and turn opposite left twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.491729 ; log likelihood = 0.000000
HIT 3839: turn opposite left and turn around right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.476144 ; log likelihood = 0.000000
HIT 3840: turn around right after turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.460559 ; log likelihood = 0.000000
HIT 3841: turn opposite left and turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.507314 ; log likelihood = 0.000000
HIT 3847: turn opposite left twice after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.507314 ; log likelihood = 0.000000
HIT 3848: turn opposite left twice and turn opposite right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.491729 ; log likelihood = 0.000000
HIT 3849: turn right twice after turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.460559 ; log likelihood = 0.000000
HIT 3850: turn around right and turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.460559 ; log likelihood = 0.000000
HIT 3853: turn opposite right twice after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -9.460559 ; log likelihood = 0.000000
HIT 3855: turn left twice and turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -9.507314 ; log likelihood = 0.000000
Hits 482/2000 tasks
Average description length of a program solving a task: 9.541330 nats
Generative model average:  4 sec.	median: 4 	max: 4 	standard deviation 0
Currently using this much memory: 272805888
Frontiers discovered top down: 482
Total frontiers: 1891
Using an ensemble size of 1. Note that we will only store and test on the best recognition model.
Currently using this much memory: 272805888
(ID=0): Training a recognition model from 1891 frontiers, 0% Helmholtz, feature extractor ScanFeatures.
(ID=0): Got 0 Helmholtz frontiers - random Helmholtz training? : True
(ID=0): Contextual? False
(ID=0): Bias optimal? False
(ID=0): Aux loss? False (n.b. we train a 'auxiliary' classifier anyway - this controls if gradients propagate back to the future extractor)
(ID=0):  Epoch 1 Loss 6.5156281314660225
(ID=0):  	vs MDL (w/o neural net) 8.831451435937117
(ID=0):  	1891 cumulative gradient steps. 497.893553 steps/sec
(ID=0):  	12-way auxiliary classification loss 0.43546931800988536
(ID=0):   Trained recognition model in 61.89004969596863 seconds
Currently using this much memory: 273207296
Trained an ensemble of 1 recognition models, now enumerating.
Enumerating from recognizer 0 of 1
Evaluated recognition model in 0.6 seconds
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.861153.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.766765.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.678290.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.589362.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.501856.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.418011.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.332347.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.249014.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.162396.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.077875.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.993377.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.909748.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.733723.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.832137.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.653782.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.568780.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.484124.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.305605.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.404534.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222114.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.227247.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223219.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220719.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218224.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217376.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217338.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217199.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216992.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217262.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217545.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217681.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217739.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217566.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217926.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218048.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218146.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218159.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217201.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219897.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.228326.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.233366.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.235481.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.237863.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.236289.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.236578.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.234625.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231873.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.228973.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226070.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223081.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223054.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223748.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223142.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222821.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222302.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222390.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225951.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.224699.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225112.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223116.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.224281.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.224771.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225199.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225022.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226263.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231130.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.233876.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.236865.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.238240.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.238913.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.238195.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.234631.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231401.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.228771.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.224767.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219421.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214449.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.212562.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215722.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211814.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.209418.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.203582.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.202346.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.201043.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.198848.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.197268.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.195622.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.193740.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.192318.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.186820.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.188475.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.188852.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.189901.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.193137.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.198436.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.203048.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.203874.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.204345.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.204241.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.202445.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.206367.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.202634.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.203147.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.204140.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.205920.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.207000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208764.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.209692.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215137.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217423.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220845.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222760.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223067.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223077.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222841.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222412.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222829.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226802.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229678.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.233180.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.233485.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231608.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231964.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.230902.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.227912.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.224088.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221562.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218590.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218162.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218094.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217974.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217628.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217677.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217621.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217159.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217524.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216652.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216187.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216191.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221219.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220284.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220793.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221467.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226266.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229657.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.232691.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.235670.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.235242.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.235415.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.234880.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.232404.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229531.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226488.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223471.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221119.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220929.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221427.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221304.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221492.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221565.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221815.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221373.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221206.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221064.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219443.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218713.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218536.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219011.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219282.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223402.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225466.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.228770.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.232521.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.235570.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.233459.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.233230.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.230340.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.227447.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.224151.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221206.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219617.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219529.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219583.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222007.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220758.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220925.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219995.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217452.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216867.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217668.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217307.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217482.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217185.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216769.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221622.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.224187.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.227708.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231090.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.233740.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231594.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231511.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231401.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.228235.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223947.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221004.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222783.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221499.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221620.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221745.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221454.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221726.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221957.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222827.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223098.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222789.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221690.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221772.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221698.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221700.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222184.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222358.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226383.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.230567.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.233515.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.235839.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.235346.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.233247.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.232378.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231215.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.228651.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225766.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222585.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220325.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220574.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221201.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221170.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219730.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219941.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220471.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220726.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219369.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219282.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218927.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218850.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218736.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222520.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221169.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.224633.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226560.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229362.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229183.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231710.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229668.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.228808.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225600.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223711.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219160.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215612.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213041.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215232.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213441.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213959.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213083.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213046.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.212694.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.212434.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.167474.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.113658.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.060039.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.009968.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.957454.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.936789.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.938208.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.940663.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.943585.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.949618.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.951448.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.953293.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.951924.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.950890.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.948060.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.946524.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.945386.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.944214.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.944448.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.981266.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.035673.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.089336.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.142370.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.195360.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223083.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222764.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222866.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222684.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223170.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225384.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223555.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223798.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.227132.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229523.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231792.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231417.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.232416.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.233058.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231982.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231112.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.228772.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226685.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.224468.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223891.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223868.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223952.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223965.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.224249.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225536.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.224514.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.161891.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.108472.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.056551.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.003618.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.959866.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.959043.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.958494.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.960955.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.962366.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.964183.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.966123.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.963417.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.958326.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.955539.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.951157.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.949174.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.948628.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.948980.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.949069.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.004164.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.057449.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.109542.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.162328.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213157.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214074.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214651.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214819.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214745.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215178.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214684.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219237.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218804.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223465.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.227376.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229978.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.228747.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229004.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.227457.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.224673.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222241.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220817.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218542.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217869.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217371.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217653.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217432.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217414.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213674.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211419.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211007.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214350.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215319.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215695.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215564.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214891.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214786.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215467.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220335.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223598.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225628.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226650.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.227211.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.227486.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226188.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222004.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218635.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217140.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216918.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213107.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213370.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214021.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213448.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213595.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214455.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214680.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214744.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214780.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214575.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214797.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214953.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215168.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213917.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214524.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220353.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.224035.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.228601.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231205.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.233761.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.234185.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.233861.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231198.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.227220.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223492.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218432.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216131.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215858.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215640.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214305.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211542.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.210763.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211957.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.212044.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.212227.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.212373.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.212460.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213024.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214252.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214223.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214385.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218876.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222421.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226483.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229517.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.233123.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.233252.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.232956.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229769.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231339.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.227700.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222776.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218627.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217909.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215434.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215423.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215056.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215013.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214936.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215188.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214903.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214162.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213800.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.212125.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211742.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.210732.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211671.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214555.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218883.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222873.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.227558.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.230285.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.230439.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.234142.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.230198.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.227163.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.224295.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221195.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218396.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217304.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217360.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217434.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218918.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218904.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219542.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218842.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218860.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218999.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219198.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219200.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219106.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219172.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220092.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223358.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226250.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.228817.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231342.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.233201.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.232392.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.233812.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.233164.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229949.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.227311.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.224015.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218509.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215803.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215121.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.210254.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.199698.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.050575.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.945807.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.846275.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.747422.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.649037.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.554865.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.453751.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.326797.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.186342.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.089656.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.995433.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.907790.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.724625.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.816204.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.633130.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.541609.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.444930.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.255621.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.351759.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.167120.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.171649.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.168916.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.168896.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.167891.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.164837.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.128933.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.113581.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.117162.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.090553.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.098483.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.104801.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.109839.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.117429.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.125909.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.132215.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.142039.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.154993.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.162540.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.172871.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.120589.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.071280.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.019977.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.985279.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.980652.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.016611.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.056530.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.092404.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.125973.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.113583.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.103395.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.095899.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.086617.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.076158.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.075789.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.074821.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.076219.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.081164.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.080121.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.144412.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.205885.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.267897.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.317368.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.326962.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.335206.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.343380.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.358065.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.372231.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.386569.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.398582.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.410685.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423379.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.431085.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.430251.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428635.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.425342.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.421140.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.418400.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.416574.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.419855.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.416419.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.419455.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.416042.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.417141.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.420900.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.421495.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.420118.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.418217.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.412079.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.407754.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.399915.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.399720.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.395918.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.398958.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.400761.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.405298.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.403686.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.405625.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.405902.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.405672.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.403871.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.408526.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.404350.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.405520.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.406237.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.407863.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.409059.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.416754.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.421816.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.427854.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.434094.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.431777.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.434126.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.434527.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.430603.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432465.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428656.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423670.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.425452.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428475.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.431713.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432493.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429620.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429798.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429200.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423859.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.420037.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.356602.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.279906.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.226470.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.183096.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.148372.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.148205.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.147851.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.152133.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.155601.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.162222.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.163298.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.157103.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.152003.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.153680.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.145687.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.144978.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.141320.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.150585.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.152297.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.211154.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.286644.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.339079.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.392792.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.431946.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.430515.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432884.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428812.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.426598.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.424894.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.425447.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428963.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.433656.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.439868.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.447489.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.448990.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.452351.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.451568.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.448363.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.442959.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.439780.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.436187.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.434012.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.433993.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.438007.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.439571.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.442943.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.447051.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.449230.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.446150.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.446059.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.443498.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.440282.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.436975.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.433994.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432411.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432284.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.435616.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.442774.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.442266.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.447577.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.447864.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.379707.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.325901.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.254278.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.199394.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.146436.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.093417.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.085556.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.085280.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.087268.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.089504.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.093287.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.096743.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.099725.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.097216.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.097154.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.097563.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.093451.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.089029.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.085950.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.145967.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.198240.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.269641.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.325519.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.379620.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.430258.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.444829.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.438730.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.438587.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.435707.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432168.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432369.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.430425.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.430825.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432080.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.431621.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.436077.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.440668.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.443524.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.446036.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.445170.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.442791.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.441158.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.440117.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.438528.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.438131.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.440548.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.442709.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.447587.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.451476.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.448628.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.444905.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.442681.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.440923.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.434019.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428333.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.427014.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.426062.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.425606.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.425275.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429335.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.427759.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.430980.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432287.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.435241.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.435244.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.436831.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432215.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.430306.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.427059.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428097.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.427504.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.426443.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429881.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.438289.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.435660.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.436709.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.436215.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.434260.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429592.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422594.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.371735.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.315652.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.261115.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.210386.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.157844.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.142196.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.143584.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.147274.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.151039.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.156511.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.154403.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.106123.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.051051.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.986961.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.930618.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.873987.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.821219.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.823028.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.823297.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.855642.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.906392.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.953565.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.999686.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.047860.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.074845.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.074078.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.073510.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.072403.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.073395.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.073811.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.114150.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.167039.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.228608.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.284166.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.342281.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.395019.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.402723.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.369257.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.341846.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.346703.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.351714.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.358619.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.359664.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.355877.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.354696.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.352247.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.349637.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.341990.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.344334.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.342962.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.240546.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.139281.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.034311.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.952755.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.908505.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.908045.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.938902.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.984033.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.989142.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.991890.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.991347.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.991329.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.985950.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.984610.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.984724.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.985320.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.990255.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.994760.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.992870.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.076735.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.181851.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.285071.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.369588.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.421291.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422644.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423174.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423573.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422740.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.421713.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.419288.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.425975.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.427440.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432065.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.435852.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.438914.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.437693.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.439341.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.439557.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.441005.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.442549.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.443986.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.443891.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.443156.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.442387.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.441895.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.433590.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.431045.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.426614.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.424120.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.419324.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.420544.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.421287.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.421654.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.420629.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.420172.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.419762.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.420293.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.424687.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428696.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.430568.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432176.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432486.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429938.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428619.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.430985.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.382251.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.329281.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.289775.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.288764.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.289141.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.284748.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.277456.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.273981.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.268813.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.267072.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.266904.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.266592.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.264472.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.264666.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.264323.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.264433.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.267855.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.267592.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.273884.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.318835.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.378343.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429165.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.433369.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.437599.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.440769.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.443800.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.442129.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.443918.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.440682.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.434308.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.425875.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.427640.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.416917.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.410294.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.407090.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.407688.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.406689.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.406608.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.407277.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.403784.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.403102.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.405124.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.402782.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.403402.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.407402.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.415077.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.417574.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.424709.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428367.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.439540.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.441959.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.442919.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.450056.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.451653.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.445506.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.442942.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.438017.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432709.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.431936.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428842.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423374.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422729.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.424254.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.424828.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.425294.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.424752.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423210.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422057.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.419832.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.420278.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.424080.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.427263.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.430825.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.435599.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.437545.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.442165.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.447986.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.447934.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.445612.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.449301.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.445020.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.442243.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.437570.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.434004.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.431764.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.426618.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423665.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.424383.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.424325.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.421684.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422027.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422933.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423001.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423070.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422162.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.421725.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.425085.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.431798.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.434691.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.437017.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.439238.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.438262.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.443252.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.444319.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.447144.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.449341.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.444928.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.439349.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.436450.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429985.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.419033.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.402934.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.250491.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.145705.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.047423.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.948074.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.849883.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.755844.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.654757.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.527681.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.513248.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.530868.
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.530102.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.532159.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.534825.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.536760.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.535125.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.510278.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
We enumerated this many programs, for each task:
	 [33, 30, 38, 35, 40, 31, 31, 36, 9, 8, 11, 9, 10, 8, 11, 10, 12, 9, 11, 11, 10, 10, 10, 10, 10, 10, 9, 9, 11, 12, 10, 9, 9, 15, 10, 12, 11, 9, 10, 10, 13, 9, 9, 13, 11, 10, 9, 10, 8, 10, 11, 10, 13, 11, 10, 11, 13, 8, 11, 11, 13, 10, 13, 8, 12, 13, 8, 10, 10, 12, 8, 9, 9, 9, 9, 9, 9, 13, 11, 9, 10, 9, 10, 8, 12, 15, 9, 12, 11, 11, 11, 9, 9, 12, 13, 12, 9, 10, 9, 9, 8, 9, 11, 9, 8, 11, 12, 9, 8, 10, 9, 9, 11, 10, 9, 10, 11, 8, 11, 10, 12, 10, 10, 8, 10, 10, 10, 11, 12, 10, 13, 12, 8, 9, 10, 11, 12, 9, 12, 10, 9, 10, 13, 11, 9, 10, 12, 12, 10, 8, 10, 8, 13, 10, 9, 10, 12, 12, 10, 10, 13, 9, 9, 9, 8, 10, 8, 8, 8, 13, 10, 10, 9, 15, 13, 12, 9, 11, 13, 13, 9, 10, 9, 11, 11, 11, 8, 8, 9, 11, 9, 10, 10, 12, 9, 9, 8, 10, 10, 13, 9, 11, 10, 10, 8, 10, 9, 8, 9, 11, 13, 8, 10, 12, 12, 12, 12, 10, 10, 9, 10, 10, 10, 8, 10, 8, 13, 10, 10, 12, 8, 8, 11, 9, 10, 10, 13, 9, 9, 10, 9, 11, 10, 12, 12, 10, 12, 11, 11, 9, 10, 10, 10, 11, 10, 10, 13, 9, 9, 9, 12, 10, 8, 12, 8, 11, 11, 10, 11, 11, 13, 13, 12, 13, 8, 12, 10, 8, 10, 12, 9, 12, 10, 15, 11, 12, 8, 13, 10, 11, 10, 11, 11, 8, 8, 13, 10, 13, 9, 12, 10, 13, 11, 8, 10, 9, 9, 9, 13, 12, 10, 6, 7, 6, 11, 15, 10, 11, 9, 15, 11, 11, 10, 10, 10, 9, 12, 11, 9, 11, 9, 10, 10, 9, 9, 12, 6, 9, 7, 10, 12, 10, 7, 10, 12, 12, 8, 12, 7, 9, 7, 10, 8, 10, 11, 12, 8, 9, 9, 11, 9, 6, 9, 11, 11, 10, 7, 9, 11, 12, 9, 12, 11, 7, 12, 12, 11, 11, 7, 8, 12, 10, 9, 12, 11, 10, 9, 10, 7, 12, 11, 9, 9, 9, 11, 10, 10, 9, 11, 9, 9, 11, 10, 10, 10, 11, 10, 10, 15, 12, 9, 12, 10, 11, 15, 6, 11, 12, 11, 12, 15, 7, 12, 15, 10, 12, 10, 8, 11, 9, 9, 9, 10, 9, 8, 11, 12, 10, 9, 9, 7, 12, 10, 11, 11, 9, 11, 8, 11, 6, 7, 10, 11, 9, 8, 7, 10, 9, 12, 11, 7, 9, 10, 15, 8, 15, 11, 9, 9, 11, 9, 10, 12, 6, 7, 9, 10, 9, 12, 11, 9, 6, 11, 10, 10, 11, 10, 11, 12, 10, 10, 12, 8, 9, 6, 9, 9, 15, 11, 9, 12, 9, 10, 15, 12, 10, 8, 15, 11, 15, 12, 10, 10, 6, 7, 10, 10, 9, 12, 10, 10, 12, 11, 8, 10, 9, 9, 10, 8, 9, 9, 11, 10, 8, 12, 9, 9, 10, 10, 8, 9, 9, 11, 11, 12, 11, 10, 11, 12, 12, 12, 10, 9, 10, 12, 8, 12, 11, 8, 11, 9, 10, 11, 8, 9, 12, 11, 8, 9, 8, 8, 8, 8, 9, 9, 8, 11, 9, 10, 8, 10, 12, 12, 9, 12, 10, 8, 9, 8, 10, 11, 11, 11, 9, 9, 11, 11, 10, 10, 10, 10, 9, 10, 12, 9, 10, 13, 8, 9, 11, 10, 9, 8, 12, 10, 11, 10, 10, 8, 9, 11, 9, 9, 8, 10, 9, 8, 9, 9, 9, 8, 10, 11, 10, 9, 11, 9, 12, 10, 9, 10, 9, 10, 10, 11, 10, 8, 10, 9, 9, 12, 9, 9, 10, 10, 12, 10, 10, 9, 8, 12, 11, 8, 10, 9, 10, 10, 10, 8, 10, 9, 8, 9, 9, 8, 10, 10, 8, 10, 12, 10, 10, 9, 12, 6, 9, 10, 9, 8, 10, 7, 9, 7, 7, 6, 6, 9, 9, 7, 7, 9, 7, 6, 9, 10, 7, 10, 8, 8, 9, 7, 7, 12, 6, 6, 9, 7, 9, 7, 12, 9, 8, 6, 9, 8, 8, 9, 12, 10, 8, 7, 9, 9, 9, 7, 9, 9, 10, 10, 7, 9, 7, 12, 8, 8, 7, 8, 10, 6, 9, 12, 9, 9, 9, 11, 10, 9, 8, 10, 8, 10, 11, 9, 12, 10, 9, 8, 9, 10, 10, 7, 8, 8, 10, 11, 9, 10, 12, 10, 11, 12, 8, 8, 7, 12, 8, 8, 11, 10, 7, 10, 10, 10, 10, 10, 10, 10, 10, 10, 12, 9, 11, 10, 12, 10, 10, 9, 7, 9, 9, 8, 10, 10, 10, 10, 9, 9, 12, 12, 10, 7, 10, 9, 10, 11, 8, 7, 7, 9, 10, 15, 12, 11, 12, 10, 10, 10, 12, 10, 10, 9, 9, 7, 10, 12, 11, 12, 9, 10, 12, 10, 8, 10, 11, 31, 12, 35, 11, 10, 12, 9, 11, 8, 10, 7, 7, 12, 8, 10, 9, 10, 12, 12, 7, 38, 10, 12, 11, 10, 9, 9, 10, 12, 9, 11, 7, 7, 10, 12, 15, 31, 31, 10, 10, 10, 11, 12, 9, 7, 10, 8, 11, 7, 12, 10, 15, 12, 10, 12, 10, 12, 12, 9, 11, 7, 9, 10, 8, 8, 10, 10, 9, 9, 9, 12, 7, 12, 10, 10, 9, 11, 7, 10, 7, 9, 10, 10, 7, 9, 8, 11, 10, 11, 7, 7, 7, 10, 31, 12, 10, 12, 10, 8, 9, 12, 9, 10, 10, 10, 8, 10, 10, 9, 10, 35, 9, 10, 9, 38, 9, 7, 8, 9, 11, 10, 7, 8, 8, 10, 12, 9, 9, 15, 8, 10, 10, 10, 8, 7, 10, 10, 10, 11, 7, 8, 8, 10, 9, 10, 9, 10, 9, 10, 10, 12, 7, 8, 10, 12, 10, 12, 11, 12, 11, 8, 9, 10, 9, 9, 9, 11, 9, 8, 9, 10, 10, 8, 8, 9, 8, 9, 31, 8, 11, 10, 11, 12, 8, 8, 8, 8, 10, 8, 10, 11, 10, 9, 10, 10, 9, 12, 31, 9, 10, 9, 12, 9, 9, 9, 9, 8, 10, 11, 11, 11, 13, 12, 10, 12, 10, 11, 10, 10, 9, 13, 10, 11, 11, 31, 10, 9, 9, 35, 11, 11, 10, 12, 9, 9, 10, 9, 10, 11, 9, 12, 12, 10, 9, 9, 9, 12, 8, 11, 10, 10, 8, 9, 9, 31, 10, 38, 11, 33, 10, 11, 10, 11, 12, 8, 12, 9, 6, 9, 8, 13, 9, 9, 8, 11, 10, 9, 9, 9, 10, 10, 10, 10, 10, 10, 8, 12, 10, 8, 12, 10, 10, 12, 9, 12, 12, 11, 11, 11, 13, 12, 8, 9, 8, 10, 31, 10, 10, 9, 12, 9, 11, 12, 13, 31, 8, 10, 10, 11, 10, 13, 12, 10, 10, 10, 8, 8, 9, 10, 8, 9, 8, 12, 8, 8, 9, 9, 10, 12, 10, 9, 8, 10, 9, 8, 9, 6, 10, 31, 11, 9, 10, 12, 10, 10, 35, 8, 33, 31, 8, 12, 8, 8, 8, 9, 10, 11, 10, 11, 10, 11, 9, 10, 8, 10, 10, 11, 9, 11, 38, 15, 12, 9, 12, 10, 10, 12, 9, 13, 8, 9, 10, 12, 12, 10, 11, 11, 11, 9, 8, 12, 13, 12, 7, 12, 10, 13, 11, 10, 9, 12, 7, 12, 10, 11, 8, 15, 12, 10, 9, 12, 12, 10, 13, 10, 10, 10, 8, 12, 10, 10, 11, 11, 11, 10, 10, 11, 11, 11, 13, 12, 13, 11, 10, 8, 9, 10, 8, 11, 10, 9, 9, 9, 9, 8, 12, 10, 11, 13, 10, 8, 10, 10, 11, 8, 12, 8, 12, 8, 13, 7, 12, 9, 13, 11, 12, 11, 11, 11, 10, 15, 12, 12, 8, 10, 9, 9, 10, 13, 12, 10, 10, 8, 10, 11, 10, 9, 13, 15, 12, 15, 12, 11, 10, 9, 8, 9, 10, 12, 10, 10, 11, 10, 11, 7, 9, 8, 9, 12, 12, 11, 15, 10, 15, 10, 10, 9, 12, 9, 11, 12, 10, 9, 11, 10, 11, 10, 10, 11, 13, 9, 7, 11, 10, 12, 11, 11, 8, 9, 12, 13, 10, 9, 11, 10, 11, 10, 15, 12, 10, 12, 13, 11, 12, 10, 12, 11, 10, 11, 10, 13, 12, 8, 10, 10, 10, 13, 9, 8, 11, 10, 15, 15, 12, 11, 10, 10, 8, 12, 12, 11, 11, 11, 11, 10, 11, 9, 7, 10, 12, 10, 9, 9, 15, 15, 9, 8, 11, 12, 11, 12, 11, 15, 10, 10, 11, 11, 9, 9, 13, 11, 11, 7, 8, 9, 12, 7, 11, 12, 8, 10, 10, 12, 12, 10, 11, 10, 8, 10, 9, 12, 11, 12, 13, 9, 12, 13, 10, 8, 15, 12, 10, 10, 10, 12, 11, 10, 11, 12, 8, 8, 12, 9, 11, 10, 12, 12, 13, 10, 11, 12, 7, 8, 10, 8, 9, 11, 12, 12, 10, 10, 12, 9, 6, 10, 12, 11, 9, 8, 9, 10, 10, 7, 11, 12, 11, 12, 11, 12, 7, 7, 15, 11, 9, 8, 9, 11, 10, 12, 9, 12, 11, 12, 11, 6, 9, 12, 7, 11, 10, 8, 9, 10, 9, 8, 11, 12, 9, 11, 11, 9, 6, 7, 12, 8, 11, 8, 10, 12, 11, 12, 7, 6, 9, 12, 9, 11, 10, 7, 8, 11, 11, 11, 11, 11, 8, 9, 10, 9, 8, 8, 11, 8, 9, 8, 7, 12, 9, 11, 11, 10, 10, 11, 11, 30, 6, 12, 6, 7, 12, 9, 10, 8, 9, 6, 12, 10, 7, 9, 10, 9, 9, 8, 11, 10, 30, 7, 10, 9, 8, 7, 12, 8, 11, 8, 7, 11, 10, 11, 10, 11, 7, 11, 9, 9, 12, 7, 9, 10, 9, 9, 9, 9, 8, 15, 9, 11, 7, 6, 9, 12, 12, 7, 15, 15, 8, 11, 12, 15, 8, 11, 10, 9, 11, 11, 10, 15, 8, 7, 12, 12, 12, 9, 8, 12, 11, 8, 10, 12, 10, 9, 9, 10, 11, 12, 9, 7, 7, 9, 9, 9, 8, 11, 11, 9, 13, 9, 8, 11, 11, 10, 11, 11, 9, 12, 11, 10, 8, 11, 14, 11, 11, 12, 12, 9, 10, 11, 10, 10, 9, 11, 9, 8, 10, 11, 8, 9, 9, 10, 8, 8, 8, 8, 11, 9, 11, 12, 11, 8, 8, 12, 10, 9, 10, 11, 9, 9, 8, 11, 8, 11, 8, 8, 11, 13, 11, 10, 8, 9, 9, 9, 14, 11, 9, 9, 10, 11, 8, 11, 8, 9, 8, 9, 11, 8, 11, 8, 9, 10, 11, 8, 8, 12, 12, 11, 9, 14, 11, 8, 10, 11, 12, 8, 9, 11, 8, 10, 8, 12, 8, 10, 9, 8, 8, 11, 12, 8, 9, 9, 9, 11, 10, 8, 10, 11, 9, 8, 8, 10, 9, 10, 14, 8, 8, 10, 6, 6, 8, 6, 10, 6, 13, 9, 10, 6, 8, 9, 11, 10, 8, 8, 9, 10, 10, 9, 6, 7, 35, 6, 11, 28, 30, 7, 7, 26, 32, 8, 7, 13, 28, 6, 30, 9, 35, 6, 26, 23, 7, 35, 9, 10, 8, 7, 7, 8, 7, 6, 23, 35, 9, 8, 7, 10, 8, 23, 10, 9, 10, 8, 8, 9, 9, 8, 35, 9, 6, 10, 8, 10, 8, 9, 7, 11, 8, 6, 8, 9, 7, 32, 23, 10, 7, 8, 9, 6, 6, 10, 9, 8, 8, 9, 8, 32, 9, 10, 7, 9, 11, 7, 11, 8, 9, 10, 10, 8, 7, 9, 10, 8, 7, 8, 10, 32, 8, 10, 7, 13, 8, 10, 6, 10, 9, 30, 8, 8, 7, 6, 10, 9, 10, 9, 9, 28, 7, 10, 13]
Recognizer 0 solved 160/20910 tasks; total tasks solved is now 160.
Best recognizer: 0.
Currently using this much memory: 312582144
Recognition model enumeration results for the best recognizer.
HIT 2001: walk thrice and turn opposite right w/ (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -3.740135 ; log likelihood = 0.000000
HIT 2008: jump thrice after turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))) ; log prior = -3.824282 ; log likelihood = 0.000000
HIT 2019: turn left twice and run opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -4.305187 ; log likelihood = 0.000000
HIT 2033: run opposite right and turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.434648 ; log likelihood = 0.000000
HIT 2036: turn opposite left twice and run w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -4.305187 ; log likelihood = 0.000000
HIT 2050: run and turn opposite left twice w/ (lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.305187 ; log likelihood = 0.000000
HIT 2053: run after turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -4.377145 ; log likelihood = 0.000000
HIT 2078: turn opposite right twice after run w/ (lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.377145 ; log likelihood = 0.000000
HIT 2085: turn right twice and run opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -4.434648 ; log likelihood = 0.000000
HIT 2106: run after turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -4.410623 ; log likelihood = 0.000000
HIT 2146: run opposite left after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -4.294369 ; log likelihood = 0.000000
HIT 2173: run and turn opposite right twice w/ (lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.434648 ; log likelihood = 0.000000
HIT 2185: run opposite left and turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.305187 ; log likelihood = 0.000000
HIT 2189: turn right twice after run opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.377145 ; log likelihood = 0.000000
HIT 2193: turn opposite left twice after run w/ (lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.294369 ; log likelihood = 0.000000
HIT 2214: run and turn around left w/ (lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.398917 ; log likelihood = 0.000000
HIT 2244: turn around left and run w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -4.398917 ; log likelihood = 0.000000
HIT 2265: run opposite right after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -4.377145 ; log likelihood = 0.000000
HIT 2272: run after turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))) ; log prior = -4.294369 ; log likelihood = 0.000000
HIT 2281: turn around left after run w/ (lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.410623 ; log likelihood = 0.000000
HIT 2283: turn opposite right twice and run w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))) ; log prior = -4.434648 ; log likelihood = 0.000000
HIT 2299: turn left twice after run opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.294369 ; log likelihood = 0.000000
HIT 2314: turn around right and walk w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -4.373921 ; log likelihood = 0.000000
HIT 2315: jump opposite right after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -4.381534 ; log likelihood = 0.000000
HIT 2317: look and turn opposite left twice w/ (lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.312345 ; log likelihood = 0.000000
HIT 2319: walk opposite right and turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.381062 ; log likelihood = 0.000000
HIT 2320: turn opposite right twice after look w/ (lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.343586 ; log likelihood = 0.000000
HIT 2321: turn opposite right twice and look w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -4.384003 ; log likelihood = 0.000000
HIT 2326: turn around left after walk w/ (lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.328009 ; log likelihood = 0.000000
HIT 2327: turn left twice and jump opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -4.327629 ; log likelihood = 0.000000
HIT 2329: turn around left after look w/ (lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.333827 ; log likelihood = 0.000000
HIT 2344: look and turn around right w/ (lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.380447 ; log likelihood = 0.000000
HIT 2345: turn left twice after jump opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.334138 ; log likelihood = 0.000000
HIT 2347: jump after turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -4.331118 ; log likelihood = 0.000000
HIT 2354: turn around right after jump w/ (lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.341279 ; log likelihood = 0.000000
HIT 2359: turn left twice and walk opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -4.323853 ; log likelihood = 0.000000
HIT 2363: walk opposite left and turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.323853 ; log likelihood = 0.000000
HIT 2364: look opposite left and turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.312345 ; log likelihood = 0.000000
HIT 2368: look opposite right after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -4.343586 ; log likelihood = 0.000000
HIT 2369: turn around left and look w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -4.332565 ; log likelihood = 0.000000
HIT 2372: jump opposite left and turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.327629 ; log likelihood = 0.000000
HIT 2374: turn around left and walk w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -4.285363 ; log likelihood = 0.000000
HIT 2376: turn right twice after walk opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.301829 ; log likelihood = 0.000000
HIT 2377: turn left twice after walk opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.268815 ; log likelihood = 0.000000
HIT 2380: jump opposite left after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -4.334138 ; log likelihood = 0.000000
HIT 2384: look and turn opposite right twice w/ (lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.384003 ; log likelihood = 0.000000
HIT 2389: turn opposite left twice after jump w/ (lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.334138 ; log likelihood = 0.000000
HIT 2390: turn around right after walk w/ (lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.312889 ; log likelihood = 0.000000
HIT 2394: walk and turn opposite left twice w/ (lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.323853 ; log likelihood = 0.000000
HIT 2398: turn opposite left twice and jump w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -4.327629 ; log likelihood = 0.000000
HIT 2401: turn opposite left twice after walk w/ (lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.268815 ; log likelihood = 0.000000
HIT 2405: turn right twice after look opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.343586 ; log likelihood = 0.000000
HIT 2408: turn right twice and walk opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -4.381062 ; log likelihood = 0.000000
HIT 2409: jump and turn around left w/ (lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.337569 ; log likelihood = 0.000000
HIT 2413: look after turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -4.343586 ; log likelihood = 0.000000
HIT 2414: turn opposite right twice after jump w/ (lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.381534 ; log likelihood = 0.000000
HIT 2416: walk after turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -4.312889 ; log likelihood = 0.000000
HIT 2417: jump after turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -4.334138 ; log likelihood = 0.000000
HIT 2418: jump and turn around right w/ (lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.371099 ; log likelihood = 0.000000
HIT 2420: walk and turn opposite right twice w/ (lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.381062 ; log likelihood = 0.000000
HIT 2423: jump after turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -4.381534 ; log likelihood = 0.000000
HIT 2425: turn opposite left twice after look w/ (lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.306864 ; log likelihood = 0.000000
HIT 2428: look opposite right and turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.384003 ; log likelihood = 0.000000
HIT 2435: turn around right and jump w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -4.371099 ; log likelihood = 0.000000
HIT 2443: jump after turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -4.341279 ; log likelihood = 0.000000
HIT 2444: look after turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -4.333827 ; log likelihood = 0.000000
HIT 2446: look after turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -4.356731 ; log likelihood = 0.000000
HIT 2448: walk and turn around right w/ (lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.373921 ; log likelihood = 0.000000
HIT 2452: turn around right after look w/ (lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.356731 ; log likelihood = 0.000000
HIT 2458: turn around right and look w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -4.380447 ; log likelihood = 0.000000
HIT 2459: jump and turn opposite left twice w/ (lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.327629 ; log likelihood = 0.000000
HIT 2463: jump and turn opposite right twice w/ (lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.407837 ; log likelihood = 0.000000
HIT 2465: turn opposite right twice and jump w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -4.407837 ; log likelihood = 0.000000
HIT 2466: turn left twice and look opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -4.312345 ; log likelihood = 0.000000
HIT 2469: turn opposite left twice and look w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -4.312345 ; log likelihood = 0.000000
HIT 2472: walk after turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -4.328009 ; log likelihood = 0.000000
HIT 2478: look opposite left after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -4.306864 ; log likelihood = 0.000000
HIT 2479: turn right twice and look opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))) ; log prior = -4.384003 ; log likelihood = 0.000000
HIT 2482: walk after turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -4.268815 ; log likelihood = 0.000000
HIT 2485: walk opposite left after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -4.268815 ; log likelihood = 0.000000
HIT 2487: walk after turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -4.301829 ; log likelihood = 0.000000
HIT 2488: turn around left after jump w/ (lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.331118 ; log likelihood = 0.000000
HIT 2491: walk and turn around left w/ (lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.285363 ; log likelihood = 0.000000
HIT 2497: turn right twice and jump opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))) ; log prior = -4.407837 ; log likelihood = 0.000000
HIT 2498: turn opposite left twice and walk w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))) ; log prior = -4.323853 ; log likelihood = 0.000000
HIT 2500: look and turn around left w/ (lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.332565 ; log likelihood = 0.000000
HIT 2503: turn opposite right twice and walk w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -4.381062 ; log likelihood = 0.000000
HIT 2504: turn left twice after look opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.306864 ; log likelihood = 0.000000
HIT 2507: turn right twice after jump opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.381534 ; log likelihood = 0.000000
HIT 2508: turn opposite right twice after walk w/ (lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.301829 ; log likelihood = 0.000000
HIT 2509: jump opposite right and turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.407837 ; log likelihood = 0.000000
HIT 2518: turn around left and jump w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))) ; log prior = -4.337569 ; log likelihood = 0.000000
HIT 2521: look after turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))) ; log prior = -4.306864 ; log likelihood = 0.000000
HIT 2522: walk opposite right after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))) ; log prior = -4.301829 ; log likelihood = 0.000000
HIT 2545: jump thrice and jump thrice w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))) ; log prior = -3.026643 ; log likelihood = 0.000000
HIT 2546: look thrice and jump thrice w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))) ; log prior = -4.436879 ; log likelihood = 0.000000
HIT 2549: look thrice after look thrice w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))) ; log prior = -2.662717 ; log likelihood = 0.000000
HIT 2550: look thrice and look thrice w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))) ; log prior = -2.633149 ; log likelihood = 0.000000
HIT 2585: jump thrice after walk thrice w/ (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))) ; log prior = -4.498911 ; log likelihood = 0.000000
HIT 2605: jump thrice and look thrice w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))) ; log prior = -4.436879 ; log likelihood = 0.000000
HIT 2620: walk thrice after walk thrice w/ (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))) ; log prior = -3.043788 ; log likelihood = 0.000000
HIT 2635: jump thrice after jump thrice w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))) ; log prior = -3.043885 ; log likelihood = 0.000000
HIT 2642: walk thrice after jump thrice w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))) ; log prior = -4.498911 ; log likelihood = 0.000000
HIT 2644: walk thrice and walk thrice w/ (lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))) ; log prior = -3.038714 ; log likelihood = 0.000000
HIT 2667: look thrice after jump thrice w/ (lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))) ; log prior = -4.442682 ; log likelihood = 0.000000
HIT 2678: jump thrice after look thrice w/ (lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))) ; log prior = -4.442682 ; log likelihood = 0.000000
HIT 3729: turn opposite left after turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -2.346543 ; log likelihood = 0.000000
HIT 3733: turn around left and turn right twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.263493 ; log likelihood = 0.000000
HIT 3734: turn around right and turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -2.321341 ; log likelihood = 0.000000
HIT 3735: turn right thrice and turn right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -3.750616 ; log likelihood = 0.000000
HIT 3737: turn opposite left twice and turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -2.416446 ; log likelihood = 0.000000
HIT 3738: turn around left and turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -2.330159 ; log likelihood = 0.000000
HIT 3740: turn opposite left twice after turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -2.402773 ; log likelihood = 0.000000
HIT 3743: turn around left after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -2.380325 ; log likelihood = 0.000000
HIT 3744: turn left thrice after turn left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -3.794811 ; log likelihood = 0.000000
HIT 3746: turn opposite right after turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.285374 ; log likelihood = 0.000000
HIT 3747: turn around left after turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.285374 ; log likelihood = 0.000000
HIT 3749: turn right twice after turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -2.311818 ; log likelihood = 0.000000
HIT 3750: turn right twice after turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.261398 ; log likelihood = 0.000000
HIT 3752: turn opposite left after turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -2.402773 ; log likelihood = 0.000000
HIT 3753: turn right twice and turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -2.510840 ; log likelihood = 0.000000
HIT 3755: turn opposite left twice and turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -2.416446 ; log likelihood = 0.000000
HIT 3768: turn opposite right twice and turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -2.510840 ; log likelihood = 0.000000
HIT 3769: turn right twice and turn around left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.263493 ; log likelihood = 0.000000
HIT 3774: turn around left and turn opposite right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.294332 ; log likelihood = 0.000000
HIT 3775: turn right twice and turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -2.321341 ; log likelihood = 0.000000
HIT 3777: turn around right after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -2.311818 ; log likelihood = 0.000000
HIT 3780: turn opposite right twice and turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -2.510840 ; log likelihood = 0.000000
HIT 3782: turn opposite left twice after turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.401278 ; log likelihood = 0.000000
HIT 3787: turn around left after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.261398 ; log likelihood = 0.000000
HIT 3788: turn around left after turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -2.346543 ; log likelihood = 0.000000
HIT 3789: turn opposite right after turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.401278 ; log likelihood = 0.000000
HIT 3793: turn opposite right twice after turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -2.486854 ; log likelihood = 0.000000
HIT 3795: turn left twice after turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -2.380325 ; log likelihood = 0.000000
HIT 3796: turn right twice after turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.401278 ; log likelihood = 0.000000
HIT 3798: turn opposite right after turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -2.486854 ; log likelihood = 0.000000
HIT 3802: turn left thrice and turn left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -3.853819 ; log likelihood = 0.000000
HIT 3804: turn left twice and turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -2.416446 ; log likelihood = 0.000000
HIT 3805: turn opposite right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -3.057821 ; log likelihood = 0.000000
HIT 3809: turn opposite left twice and turn right twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.424169 ; log likelihood = 0.000000
HIT 3811: turn opposite right and turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -2.510840 ; log likelihood = 0.000000
HIT 3813: turn opposite left twice after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.401278 ; log likelihood = 0.000000
HIT 3816: turn opposite right and turn around left w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.294332 ; log likelihood = 0.000000
HIT 3820: turn around left and turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -2.361998 ; log likelihood = 0.000000
HIT 3823: turn left twice after turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -2.402773 ; log likelihood = 0.000000
HIT 3824: turn right thrice after turn right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -3.689952 ; log likelihood = 0.000000
HIT 3825: turn opposite left and turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -2.330159 ; log likelihood = 0.000000
HIT 3826: turn opposite right and turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -2.431252 ; log likelihood = 0.000000
HIT 3828: turn right twice and turn opposite left twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.424169 ; log likelihood = 0.000000
HIT 3831: turn opposite right after turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -2.418539 ; log likelihood = 0.000000
HIT 3834: turn opposite left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -2.734857 ; log likelihood = 0.000000
HIT 3838: turn opposite right and turn opposite left twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -4.424169 ; log likelihood = 0.000000
HIT 3840: turn around right after turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -2.418539 ; log likelihood = 0.000000
HIT 3841: turn opposite left and turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -2.416446 ; log likelihood = 0.000000
HIT 3847: turn opposite left twice after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -2.402773 ; log likelihood = 0.000000
HIT 3848: turn opposite left twice and turn opposite right w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -4.424169 ; log likelihood = 0.000000
HIT 3849: turn right twice after turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -2.486854 ; log likelihood = 0.000000
HIT 3850: turn around right and turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -2.431252 ; log likelihood = 0.000000
HIT 3853: turn opposite right twice after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))) ; log prior = -2.486854 ; log likelihood = 0.000000
HIT 3855: turn left twice and turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))) ; log prior = -2.361998 ; log likelihood = 0.000000
Hits 160/2000 tasks
Average description length of a program solving a task: 3.868518 nats
Recognition model average:  3 sec.	median: 4 	max: 4 	standard deviation 1
Cumulative results for the full ensemble of 1 recognizers: 
Frontiers discovered bottom up: 160
Total frontiers: 1891
Average search time:  3 sec.	median: 4 	max: 4 	standard deviation 1
482 / 2000 total hit tasks
              bottom miss  bottom hit  
top miss         1518           0      
top hit           322          160     
Currently using this much memory: 313118720
Showing the top 5 programs in each frontier being sent to the compressor:
0: run
0.00	(lambda (SCAN_RUN $0))

1: look
0.00	(lambda (SCAN_LOOK $0))

2: jump
0.00	(lambda (SCAN_JUMP $0))

3: walk
0.00	(lambda (SCAN_WALK $0))

4: turn right
0.00	(lambda (SCAN_RTURN $0))

5: turn left
0.00	(lambda (SCAN_LTURN $0))

6: run after run
0.00	(lambda (SCAN_RUN (SCAN_RUN $0)))

7: run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN $0)))

8: run and run
0.00	(lambda (SCAN_RUN (SCAN_RUN $0)))

9: walk and run
0.00	(lambda (SCAN_WALK (SCAN_RUN $0)))

10: run and walk
0.00	(lambda (SCAN_RUN (SCAN_WALK $0)))

11: run and jump
0.00	(lambda (SCAN_RUN (SCAN_JUMP $0)))

12: jump and run
0.00	(lambda (SCAN_JUMP (SCAN_RUN $0)))

13: run after jump
0.00	(lambda (SCAN_JUMP (SCAN_RUN $0)))

14: look and run
0.00	(lambda (SCAN_LOOK (SCAN_RUN $0)))

15: run after look
0.00	(lambda (SCAN_LOOK (SCAN_RUN $0)))

16: run after walk
0.00	(lambda (SCAN_WALK (SCAN_RUN $0)))

17: walk after run
0.00	(lambda (SCAN_RUN (SCAN_WALK $0)))

18: run and look
0.00	(lambda (SCAN_RUN (SCAN_LOOK $0)))

19: jump after run
0.00	(lambda (SCAN_RUN (SCAN_JUMP $0)))

20: look after run
0.00	(lambda (SCAN_RUN (SCAN_LOOK $0)))

21: turn right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN $0)))

22: look after jump
0.00	(lambda (SCAN_JUMP (SCAN_LOOK $0)))

23: run after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN $0)))

24: walk after look
0.00	(lambda (SCAN_LOOK (SCAN_WALK $0)))

25: jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP $0)))

26: walk after jump
0.00	(lambda (SCAN_JUMP (SCAN_WALK $0)))

27: walk and jump
0.00	(lambda (SCAN_WALK (SCAN_JUMP $0)))

28: look after look
0.00	(lambda (SCAN_LOOK (SCAN_LOOK $0)))

29: run and turn left
0.00	(lambda (SCAN_RUN (SCAN_LTURN $0)))

30: jump after walk
0.00	(lambda (SCAN_WALK (SCAN_JUMP $0)))

31: jump after look
0.00	(lambda (SCAN_LOOK (SCAN_JUMP $0)))

32: turn right and run
0.00	(lambda (SCAN_RTURN (SCAN_RUN $0)))

33: jump after jump
0.00	(lambda (SCAN_JUMP (SCAN_JUMP $0)))

34: walk after walk
0.00	(lambda (SCAN_WALK (SCAN_WALK $0)))

35: run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN $0)))

36: look after walk
0.00	(lambda (SCAN_WALK (SCAN_LOOK $0)))

37: jump and jump
0.00	(lambda (SCAN_JUMP (SCAN_JUMP $0)))

38: turn left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN $0)))

39: look and jump
0.00	(lambda (SCAN_LOOK (SCAN_JUMP $0)))

40: walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK $0)))

41: run and turn right
0.00	(lambda (SCAN_RUN (SCAN_RTURN $0)))

42: turn left and run
0.00	(lambda (SCAN_LTURN (SCAN_RUN $0)))

43: look and walk
0.00	(lambda (SCAN_LOOK (SCAN_WALK $0)))

44: look and look
0.00	(lambda (SCAN_LOOK (SCAN_LOOK $0)))

45: run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN $0)))

46: jump and look
0.00	(lambda (SCAN_JUMP (SCAN_LOOK $0)))

47: jump and walk
0.00	(lambda (SCAN_JUMP (SCAN_WALK $0)))

48: run after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN $0)))

49: look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK $0)))

50: walk and walk
0.00	(lambda (SCAN_WALK (SCAN_WALK $0)))

51: walk and look
0.00	(lambda (SCAN_WALK (SCAN_LOOK $0)))

52: jump and turn left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN $0)))

53: look and turn right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN $0)))

54: turn right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN $0)))

55: jump after turn left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP $0)))

56: jump and turn right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN $0)))

57: look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK $0)))

58: walk after turn left
0.00	(lambda (SCAN_LTURN (SCAN_WALK $0)))

59: look and turn left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN $0)))

60: look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK $0)))

61: turn left and walk
0.00	(lambda (SCAN_LTURN (SCAN_WALK $0)))

62: turn left and jump
0.00	(lambda (SCAN_LTURN (SCAN_JUMP $0)))

63: jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP $0)))

64: turn right and look
0.00	(lambda (SCAN_RTURN (SCAN_LOOK $0)))

65: look after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK $0)))

66: turn right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN $0)))

67: walk and turn right
0.00	(lambda (SCAN_WALK (SCAN_RTURN $0)))

68: jump after turn right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP $0)))

69: walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK $0)))

70: walk after turn right
0.00	(lambda (SCAN_RTURN (SCAN_WALK $0)))

71: walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK $0)))

72: turn right and jump
0.00	(lambda (SCAN_RTURN (SCAN_JUMP $0)))

73: turn left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN $0)))

74: turn right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN $0)))

75: turn left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN $0)))

76: turn left and look
0.00	(lambda (SCAN_LTURN (SCAN_LOOK $0)))

77: jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP $0)))

78: look after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK $0)))

79: turn left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN $0)))

80: turn right and walk
0.00	(lambda (SCAN_RTURN (SCAN_WALK $0)))

81: walk and turn left
0.00	(lambda (SCAN_WALK (SCAN_LTURN $0)))

82: turn right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN $0)))

83: run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))

84: run twice after run
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))

85: turn left after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))

86: turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))

87: run after run twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))

88: turn left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN $0)))

89: turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))

90: run twice and run
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))

91: turn right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN $0)))

92: turn right and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))

93: turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))

94: turn left and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))

95: turn left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN $0)))

96: turn right after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))

97: run and run twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))

98: turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))

99: run twice after jump
0.00	(lambda (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0))))

100: look and run twice
0.00	(lambda (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0))))

101: jump after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP $0))))

102: walk after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK $0))))

103: run twice and look
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK $0))))

104: run twice and walk
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK $0))))

105: run twice after walk
0.00	(lambda (SCAN_WALK (SCAN_RUN (SCAN_RUN $0))))

106: run twice after look
0.00	(lambda (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0))))

107: look after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK $0))))

108: walk and run twice
0.00	(lambda (SCAN_WALK (SCAN_RUN (SCAN_RUN $0))))

109: jump and run twice
0.00	(lambda (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0))))

110: run twice and jump
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP $0))))

111: run and jump twice
0.00	(lambda (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0))))

112: turn right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))

113: run right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))

114: run twice and turn right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN $0))))

115: run and run right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))

116: run after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN $0))))

117: run twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))

118: turn left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN $0))))

119: run after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN $0))))

120: walk twice and run
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN $0))))

121: run and run left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0))))

122: run twice and turn left
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN $0))))

123: look twice and run
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN $0))))

124: run and look twice
0.00	(lambda (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0))))

125: look twice after run
0.00	(lambda (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0))))

126: jump twice after run
0.00	(lambda (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0))))

127: walk twice after run
0.00	(lambda (SCAN_RUN (SCAN_WALK (SCAN_WALK $0))))

128: turn right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN $0))))

129: run right and run
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))

130: run and walk twice
0.00	(lambda (SCAN_RUN (SCAN_WALK (SCAN_WALK $0))))

131: run after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))

132: turn left and run twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))

133: run left and run
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))

134: run twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))

135: run after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))

136: run left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0))))

137: run after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN $0))))

138: jump twice and run
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN $0))))

139: run and look right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0))))

140: walk after walk twice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))

141: walk twice and jump
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP $0))))

142: look twice and look
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))

143: walk right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0))))

144: jump right and run
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN $0))))

145: run after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN $0))))

146: jump left and run
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN $0))))

147: look twice and jump
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP $0))))

148: look after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK $0))))

149: run after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RUN $0))))

150: walk twice after jump
0.00	(lambda (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0))))

151: run left and look
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LOOK $0))))

152: jump and jump twice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))

153: run left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_RUN $0))))

154: walk twice after walk
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))

155: walk right and run
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN $0))))

156: jump twice after jump
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))

157: jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))

158: jump twice and walk
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK $0))))

159: run right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0))))

160: look right and run
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RUN $0))))

161: run and walk right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0))))

162: run and walk left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_WALK $0))))

163: jump after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP $0))))

164: jump and run left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0))))

165: walk after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK $0))))

166: run left and jump
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP $0))))

167: jump and walk twice
0.00	(lambda (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0))))

168: jump after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP $0))))

169: look after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LOOK $0))))

170: look twice after look
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))

171: run right and jump
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP $0))))

172: run right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0))))

173: jump after jump twice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))

174: walk after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK $0))))

175: run left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_RUN $0))))

176: walk and run left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_RUN $0))))

177: jump twice after walk
0.00	(lambda (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0))))

178: look twice after jump
0.00	(lambda (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0))))

179: look and look twice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))

180: walk after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK $0))))

181: run after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RUN $0))))

182: walk left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_WALK $0))))

183: look and run left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_RUN $0))))

184: walk left and run
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RUN $0))))

185: look twice after walk
0.00	(lambda (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0))))

186: jump and run right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0))))

187: look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))

188: look left and run
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RUN $0))))

189: jump left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0))))

190: look and walk twice
0.00	(lambda (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0))))

191: jump after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP $0))))

192: jump twice after look
0.00	(lambda (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0))))

193: look twice and walk
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK $0))))

194: look after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LOOK $0))))

195: walk and look twice
0.00	(lambda (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0))))

196: walk and walk twice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))

197: look and jump twice
0.00	(lambda (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0))))

198: jump and look twice
0.00	(lambda (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0))))

199: walk twice and look
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK $0))))

200: run and look left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LOOK $0))))

201: jump after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP $0))))

202: jump twice and jump
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))

203: run after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN $0))))

204: walk twice after look
0.00	(lambda (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0))))

205: walk after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_WALK $0))))

206: look right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0))))

207: run left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0))))

208: run and jump right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0))))

209: walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))

210: run left and walk
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_WALK $0))))

211: jump twice and look
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK $0))))

212: look left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LOOK $0))))

213: look and run right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0))))

214: jump right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0))))

215: run after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RUN $0))))

216: run right and walk
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK $0))))

217: walk and jump twice
0.00	(lambda (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0))))

218: run right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0))))

219: walk twice and walk
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))

220: look after look twice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))

221: run and jump left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0))))

222: run right and look
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LOOK $0))))

223: look after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK $0))))

224: walk and run right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0))))

225: run after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN $0))))

226: jump left and walk
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK $0))))

227: look right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0))))

228: run and turn opposite left
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

229: walk and jump left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0))))

230: run left after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

231: run right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RUN $0))))

232: jump left and jump
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))

233: turn opposite right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

234: look after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))

235: turn right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN $0))))

236: look after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LOOK $0))))

237: look left and jump
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP $0))))

238: look and look left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))

239: run right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LTURN $0))))

240: jump right and jump
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))

241: look after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK $0))))

242: walk after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK $0))))

243: jump twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))

244: jump and jump right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))

245: look after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK $0))))

246: look right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0))))

247: turn right and jump twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))

248: look left and look
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))

249: jump after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))

250: turn opposite left and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

251: turn left twice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

252: turn right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN $0))))

253: run left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RTURN $0))))

254: walk and walk left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))

255: jump after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP $0))))

256: jump and look left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0))))

257: run twice after run twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

258: look right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0))))

259: turn left after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LTURN $0))))

260: run right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))

261: look and walk left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0))))

262: turn right twice and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

263: walk right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))

264: look left and walk
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK $0))))

265: turn right and walk twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))

266: walk left and walk
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))

267: turn left and run right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RUN $0))))

268: run thrice and run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

269: run twice and run twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

270: turn left twice and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

271: walk left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0))))

272: turn right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))

273: turn left after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))

274: turn right twice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

275: run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

276: jump after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP $0))))

277: jump twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))

278: jump after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP $0))))

279: run after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

280: walk after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))

281: walk twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))

282: look and look right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0))))

283: run after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

284: look and walk right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0))))

285: look right and walk
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_WALK $0))))

286: jump left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0))))

287: jump left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0))))

288: turn left and walk twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))

289: look twice and turn left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN $0))))

290: jump after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))

291: walk and walk right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))

292: run and turn right twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

293: run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

294: jump left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0))))

295: walk left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))

296: look left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))

297: run and turn opposite right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

298: turn opposite right after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

299: look twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))

300: turn right after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RTURN $0))))

301: run right after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

302: look after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))

303: walk and look left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0))))

304: look and jump left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0))))

305: look right and jump
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP $0))))

306: run after run thrice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

307: look right and look
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))

308: look left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0))))

309: turn left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))

310: turn right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN $0))))

311: run and run thrice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

312: turn left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN $0))))

313: turn left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN $0))))

314: turn right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))

315: walk right and look
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LOOK $0))))

316: walk left and jump
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP $0))))

317: walk twice and turn right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN $0))))

318: jump right and walk
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_WALK $0))))

319: jump and jump left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0))))

320: jump right and look
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK $0))))

321: jump and walk right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0))))

322: walk left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0))))

323: walk twice and turn left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN $0))))

324: jump right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0))))

325: run and turn left twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

326: turn opposite left after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

327: jump and look right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0))))

328: walk left and look
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK $0))))

329: jump and walk left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0))))

330: walk twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))

331: walk after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))

332: jump right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0))))

333: walk right and jump
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_JUMP $0))))

334: walk right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0))))

335: walk right and walk
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))

336: run left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_RUN $0))))

337: run left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))

338: jump twice and turn left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN $0))))

339: walk after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_WALK $0))))

340: jump left and look
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK $0))))

341: turn left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN $0))))

342: look twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))

343: look and jump right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0))))

344: look left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0))))

345: walk right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0))))

346: turn right and run right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

347: run thrice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

348: run after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

349: walk and look right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0))))

350: look twice and turn right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN $0))))

351: walk after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_WALK $0))))

352: jump right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))

353: turn left and run left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

354: look after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK $0))))

355: walk after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK $0))))

356: jump after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_JUMP $0))))

357: turn left and look twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))

358: run after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

359: turn right and run left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_RUN $0))))

360: walk and jump right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0))))

361: jump twice and turn right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN $0))))

362: turn left and jump left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

363: turn right and jump right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

364: jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

365: turn left and walk right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0))))

366: run thrice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

367: turn opposite left and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

368: look left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN $0))))

369: jump and turn opposite left
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

370: jump after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

371: jump right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN $0))))

372: turn opposite left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

373: run thrice and look
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LOOK $0)))

374: walk and turn opposite left
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

375: jump left after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

376: walk right after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

377: look left after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

378: turn right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN $0))))

379: turn right twice and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

380: walk and turn right twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

381: turn opposite right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

382: turn left twice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

383: look and run thrice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

384: jump after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

385: walk after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

386: look right after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

387: jump right after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

388: walk and turn opposite right
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

389: walk left after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

390: turn opposite left after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

391: walk after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

392: look right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN $0))))

393: turn left and jump right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_JUMP $0))))

394: turn right and walk left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0))))

395: turn left after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN $0))))

396: turn right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN $0))))

397: turn opposite right and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

398: turn right after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN $0))))

399: jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

400: turn left after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN $0))))

401: turn left and walk left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

402: turn left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN $0))))

403: jump after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

404: turn opposite left after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

405: turn left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN $0))))

406: jump and turn left twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

407: jump left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN $0))))

408: walk right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN $0))))

409: turn opposite left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

410: look after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

411: walk left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0))))

412: turn opposite left and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

413: jump left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0))))

414: turn right twice and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

415: look and turn opposite right
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

416: look right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0))))

417: turn right twice and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

418: look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

419: walk after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

420: jump after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

421: look and turn left twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

422: look after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

423: turn right after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN $0))))

424: turn right twice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

425: turn right twice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

426: run thrice and walk
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_WALK $0)))

427: jump and turn opposite right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

428: look left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN $0))))

429: turn right and look right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

430: turn left twice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

431: jump and run thrice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

432: jump right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN $0))))

433: run thrice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

434: jump after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP $0)))

435: jump and turn right twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

436: turn right after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN $0))))

437: turn left after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN $0))))

438: turn right twice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

439: run thrice and jump
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP $0)))

440: walk after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_WALK $0)))

441: look right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN $0))))

442: jump left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN $0))))

443: look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

444: turn left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN $0))))

445: walk left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN $0))))

446: walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

447: look after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LOOK $0)))

448: look and turn right twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

449: turn right and look left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0))))

450: turn opposite right and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

451: look after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

452: turn opposite right after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

453: turn left twice and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

454: look left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0))))

455: turn opposite right after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

456: walk after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

457: look after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

458: walk left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN $0))))

459: turn left and look left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

460: look and turn opposite left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

461: turn opposite right after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

462: turn right after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN $0))))

463: turn right and jump left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0))))

464: turn left twice and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

465: turn right and walk right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

466: turn left twice and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

467: walk and turn left twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

468: jump right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_JUMP $0))))

469: walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

470: walk and run thrice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

471: turn left and look right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0))))

472: walk right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN $0))))

473: run thrice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

474: walk right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0))))

475: turn left twice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

476: jump twice and run twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

477: turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

478: look twice and run twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))))

479: turn left and turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

480: turn left and turn opposite right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

481: run right and run twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

482: turn right and turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

483: run thrice and turn left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN $0)))

484: turn right after turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

485: turn right twice and turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

486: run twice and walk twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

487: turn left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))

488: run thrice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

489: turn left and turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

490: run twice after run right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

491: turn left twice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

492: turn right and turn left twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

493: turn left after turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

494: turn left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN $0)))

495: run twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

496: turn right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN $0)))

497: walk twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

498: turn opposite right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))

499: turn right and run thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

500: turn right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))

501: turn right twice and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))

502: run left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

503: walk twice and run twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

504: run twice and run right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

505: turn left twice and turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

506: turn left and run thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

507: run thrice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

508: turn opposite right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

509: turn opposite left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))

510: turn right after turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

511: run twice and jump twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

512: turn left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))

513: turn opposite left after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

514: run twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

515: look twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))))

516: run left and run twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

517: jump twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

518: run twice after run left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

519: turn right and turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

520: turn left after turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

521: turn right twice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

522: turn opposite right and turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

523: turn right twice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

524: turn left twice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

525: turn opposite left and turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

526: turn left twice and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))

527: run right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

528: run twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))))

529: run thrice and turn right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN $0)))

530: turn opposite left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

531: run twice and look twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))))

532: run twice and run left
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

533: turn left and turn right twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

534: turn right and turn opposite left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

535: turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

536: turn opposite right after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

537: turn right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))

538: run twice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

539: run twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

540: run twice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

541: jump right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0)))))

542: jump thrice and run
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RUN $0)))

543: run twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

544: run and look thrice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

545: run twice and walk right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0)))))

546: jump left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0)))))

547: run and jump thrice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

548: run after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RUN $0)))

549: run twice and jump left
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0)))))

550: look thrice and run
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RUN $0)))

551: walk thrice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

552: look right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))))

553: run twice and look right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0)))))

554: jump left and run twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

555: walk right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

556: jump right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

557: run after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RUN $0)))

559: walk thrice and run
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RUN $0)))

561: run twice and jump right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0)))))

564: look thrice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

565: walk right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0)))))

567: run and walk thrice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

568: jump thrice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

569: walk left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_WALK $0)))))

573: run after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RUN $0)))

574: look twice and run right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0)))))

575: jump after jump thrice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

576: walk thrice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

577: walk after walk thrice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

578: run twice after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

579: jump thrice and jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

581: run left after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

582: run right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

583: run twice and turn right twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

584: jump twice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

585: walk twice after walk twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

586: jump and walk thrice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

587: look twice and look twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

588: run twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

589: look and look thrice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

590: run twice and turn opposite left
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

592: run thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

593: walk twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

594: walk thrice and walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

595: run and run opposite left
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

596: run thrice and run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

598: look twice and jump twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

599: jump twice after jump twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

600: run twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

601: jump after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_JUMP $0)))

602: walk twice and look twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

604: run right twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

605: walk thrice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

608: walk after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_WALK $0)))

609: jump thrice and look
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LOOK $0)))

610: jump thrice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

611: look after look thrice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

612: look after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LOOK $0)))

613: look thrice and walk
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_WALK $0)))

614: walk twice and walk twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

615: walk thrice and jump
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_JUMP $0)))

616: look and jump thrice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

617: run and run opposite right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

618: walk twice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

619: walk thrice and look
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LOOK $0)))

620: turn opposite right and run twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

622: walk twice and run right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0)))))

623: run twice and turn opposite right
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

625: look thrice and look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

626: look and walk thrice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

627: jump thrice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

628: jump thrice and walk
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_WALK $0)))

629: jump twice and run right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0)))))

630: jump and jump thrice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

631: jump twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

632: run left and run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

633: run twice and run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

634: jump and look thrice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

635: turn opposite left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

636: run opposite right after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

637: run twice and turn left twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

638: run right and walk twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

639: look twice after look twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

640: jump twice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

641: run right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0)))))

642: run left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0)))))

643: look thrice and jump
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_JUMP $0)))

644: jump after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_JUMP $0)))

645: run opposite left and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

646: walk twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))))

647: run left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_RUN $0)))))

648: run after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

649: walk thrice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

651: turn right twice and run twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

652: walk twice and jump twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))))

653: look twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

654: look thrice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

655: jump twice and walk twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))))

656: look twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

657: turn opposite right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

659: walk and look thrice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

660: jump twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))))

661: look twice and walk twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

662: jump twice and run left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0)))))

663: turn left twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

664: walk and walk thrice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

665: look after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LOOK $0)))

666: run right and run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

667: run after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

668: look thrice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

670: walk twice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

671: jump thrice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

672: jump twice and jump twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

673: run left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

674: run right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0)))))

675: look thrice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

677: run opposite left after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

678: jump twice and look twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

679: run twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

680: run opposite right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

681: run twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

682: turn left twice and run twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

683: run right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))))

684: walk and jump thrice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

685: turn opposite left and run twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

686: turn right twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

687: run left twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

688: run right and jump twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

689: walk after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_WALK $0)))

690: look opposite left after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

691: walk right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

693: walk thrice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

694: look opposite right after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

695: walk twice and jump left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0)))))

697: jump opposite right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_RUN $0))))

698: look left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

700: look twice and jump left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0)))))

701: walk opposite right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_RUN $0))))

702: look and run opposite right
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

703: look right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0)))))

704: look twice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

705: run opposite left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

706: run right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0)))))

708: run opposite left and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_JUMP $0))))

710: walk twice and look left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))))

711: walk twice and walk right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

712: walk left and walk twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

713: turn left and walk thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

714: look right and jump twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

715: jump twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))))

716: look and run opposite left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

717: jump right and jump twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

718: look twice after look left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

719: look thrice and turn right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN $0)))

720: run opposite right after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

721: jump left and walk twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))))

722: look left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))))

723: run and jump opposite left
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

725: run left and jump left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0)))))

727: turn left and look thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

728: walk twice and look right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0)))))

729: run opposite right and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_LOOK $0))))

731: turn right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN $0)))

732: look opposite right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_RUN $0))))

733: jump left and look twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

734: jump left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

735: run after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_RUN $0))))

737: jump twice and jump left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

739: walk left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0)))))

740: jump thrice and turn left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN $0)))

743: jump thrice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

744: look twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

749: jump twice after jump left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

751: run and look opposite right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

752: walk twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))))

754: walk thrice and turn right
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN $0)))

755: run and look opposite left
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

756: jump left and jump twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

758: jump right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0)))))

761: look left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

762: look right and run right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0)))))

764: walk left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))))

765: turn right and jump thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

767: run right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0)))))

768: jump twice and jump right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

769: jump twice and look right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0)))))

770: look right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

771: look thrice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

774: turn right and walk thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

776: look twice and look left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

777: look after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LOOK $0))))

778: turn left and jump thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

779: run after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_RUN $0))))

781: walk twice and walk left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

783: walk twice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

784: jump thrice and turn right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN $0)))

785: jump thrice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

787: look opposite left and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_RUN $0))))

788: jump left and run left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0)))))

790: run opposite left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LOOK $0))))

793: look left and look twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

795: walk right and walk twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

801: look twice and walk left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))))

802: jump twice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

803: run right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0)))))

806: walk and run opposite right
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

808: look twice after look right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

811: walk thrice and turn left
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN $0)))

812: look twice and jump right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0)))))

813: turn right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN $0)))

814: walk right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0)))))

817: turn left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN $0)))

818: look twice and look right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

819: walk twice after walk left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

821: jump right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

822: turn right and look thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

823: look right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0)))))

824: jump twice and walk left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0)))))

825: run and walk opposite right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

829: turn left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN $0)))

831: jump right and run right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0)))))

833: look left and walk twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

835: walk right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

836: run opposite right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_JUMP $0))))

838: jump left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0)))))

839: run opposite right and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_WALK $0))))

840: run and jump opposite right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

843: look right and look twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

845: look thrice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

848: look right and walk twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

850: look twice and walk right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0)))))

852: walk twice after walk right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

854: look thrice and turn left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN $0)))

858: jump and run opposite right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

859: look after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_LOOK $0))))

861: turn left after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN $0)))

865: jump right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

866: jump opposite left and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_RUN $0))))

868: run right and look right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0)))))

870: jump and run opposite left
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

871: walk left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))))

872: turn right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN $0)))

873: walk left and look twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

874: jump twice and look left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0)))))

877: jump twice after jump right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

880: walk thrice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

881: walk left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

882: turn right twice and run right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

883: turn opposite left and jump twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

884: run opposite right after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

885: look after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

886: look and look opposite left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

887: walk right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

888: jump opposite right and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_LOOK $0))))

889: turn right and run opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

890: run left after turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

892: jump and jump opposite left
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

893: run and turn right thrice
0.00	(lambda (SCAN_RUN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

894: jump after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_JUMP $0))))

895: jump opposite right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

896: jump and walk opposite right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

897: walk twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

898: walk after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_WALK $0))))

900: turn opposite right and look twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

902: jump opposite right and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_WALK $0))))

903: walk twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

905: walk right and walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

906: turn left twice and look twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

907: walk left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

908: walk left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0)))))

909: walk opposite right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_JUMP $0))))

911: run after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

913: jump twice and turn opposite right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

915: jump right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

917: look right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0)))))

920: walk opposite left and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

921: walk left and look left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))))

922: jump right after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

924: look twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

925: look opposite left and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_WALK $0))))

926: walk after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_WALK $0))))

927: jump opposite left after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

928: walk opposite right and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

930: look and look opposite right
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

932: walk right twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

933: jump twice and turn right twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

934: run thrice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

935: turn right thrice after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

936: walk opposite left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_LOOK $0))))

937: turn right twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

938: jump right and walk right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0)))))

939: jump right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0)))))

940: walk and jump opposite right
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

941: run thrice and run left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (SCAN_RUN $0))))

942: run left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

943: jump left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

944: turn opposite left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

946: turn left twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

947: look opposite right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_JUMP $0))))

948: jump opposite right after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

949: walk opposite left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

951: run thrice and jump twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP (SCAN_JUMP $0))))

952: look and jump opposite left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

953: run opposite left after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

954: look right twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

955: look left and walk left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))))

956: walk right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0)))))

958: turn left twice and walk twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

959: walk right and walk left
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

960: turn opposite left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

961: look twice and turn left twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

962: walk left and walk right
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

964: look left twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

965: walk after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_WALK $0))))

966: turn opposite right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

967: turn left twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

968: jump after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

969: turn opposite right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

970: jump opposite right after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

972: look after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_LOOK $0))))

973: walk and look opposite left
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

977: turn opposite left after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

979: look right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0)))))

980: run right after turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

981: look twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

982: walk twice and turn opposite right
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

983: turn opposite right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

984: turn opposite right after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

986: run thrice and run right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (SCAN_RUN $0))))

987: turn opposite left and walk twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

988: turn opposite right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

989: look left and look right
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

990: look twice and turn opposite right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

991: jump twice and run thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

992: run thrice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

993: jump left and jump right
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

994: walk twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

995: turn opposite left after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

996: jump right after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

998: jump twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1000: look after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1001: jump and look opposite right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1002: turn left and run opposite right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

1003: jump twice and turn left twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1004: look opposite right after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1005: jump right and jump left
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

1006: turn left twice and jump twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1008: look and walk opposite left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1009: run thrice and look twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LOOK (SCAN_LOOK $0))))

1010: look twice and turn right twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1011: jump after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_JUMP $0))))

1012: run right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1013: jump right twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

1016: look and jump opposite right
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1019: look right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

1020: walk right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0)))))

1021: run left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1022: look after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_LOOK $0))))

1024: look right after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

1025: jump twice and turn opposite left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1026: run opposite left and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN $0))))

1027: run opposite left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1028: walk twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

1029: run right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1030: jump left after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

1031: jump left twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

1032: run left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_RUN $0))))

1033: walk and walk opposite left
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1034: look opposite right and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1035: turn right after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RTURN $0))))

1036: run opposite left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RTURN $0))))

1037: turn right and run opposite left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1038: run opposite right and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN $0))))

1039: jump opposite left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_LOOK $0))))

1040: turn left twice and run left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1041: turn right twice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1042: turn left after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN $0))))

1043: look right and look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

1045: turn right thrice and run
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

1046: jump left and look left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0)))))

1049: look left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

1050: turn left twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1051: turn right twice and look twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1053: look left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))))

1054: walk left and walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

1057: look after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_LOOK $0))))

1058: walk twice and run thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1059: jump twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1060: turn right twice and walk twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

1061: run left after turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1062: walk twice and turn opposite left
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1065: walk right after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0)))))

1066: walk opposite left after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1067: look twice and run thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1068: turn left thrice and run
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1069: walk and walk opposite right
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1070: look opposite left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1071: jump and look opposite left
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1072: look opposite right after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1073: run thrice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1074: turn left thrice after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1075: run thrice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1076: turn opposite right and run right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

1077: run right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (SCAN_RUN $0))))

1078: turn opposite left and look twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1079: run right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_RUN $0))))

1080: run left and run thrice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1081: look twice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LOOK (SCAN_LOOK $0))))

1082: look opposite left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1083: run left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1084: look right and look left
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

1085: run opposite right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_LTURN $0))))

1086: look twice and turn opposite left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1087: walk opposite right after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1088: walk left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))))

1089: turn left after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_LTURN $0))))

1090: jump opposite left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1091: run opposite right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

1092: jump after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_JUMP $0))))

1093: look left after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

1096: walk right and look right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0)))))

1097: look twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1098: turn left twice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1099: walk after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

1100: jump twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1101: run right and run thrice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1102: run right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1104: walk after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

1105: look opposite left and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_JUMP $0))))

1108: look left and look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

1109: jump right and look right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0)))))

1110: walk twice and turn left twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1111: jump opposite right after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1113: look left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0)))))

1114: walk left twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

1115: walk twice and turn right twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1117: turn right after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN $0))))

1118: jump left and jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

1119: jump after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_JUMP $0))))

1120: turn opposite left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1122: run left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (SCAN_RUN $0))))

1123: turn left and run opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1124: look opposite left after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1126: jump and jump opposite right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1127: turn right twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1128: turn opposite right and jump twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1129: jump twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1131: run after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1132: jump after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1134: jump left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0)))))

1135: turn opposite left and run left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1136: jump left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0)))))

1137: turn opposite right and walk twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

1138: turn opposite right and run left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_RUN $0))))

1139: walk opposite left after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1141: turn opposite left and run right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_RUN $0))))

1142: walk opposite right after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1143: turn right twice and jump twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1144: jump opposite left and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1145: jump twice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP (SCAN_JUMP $0))))

1146: run and turn left thrice
0.00	(lambda (SCAN_RUN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1148: look left and jump left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0)))))

1149: look opposite left after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1150: turn right twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1151: run thrice and walk twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_WALK (SCAN_WALK $0))))

1152: look right and walk right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0)))))

1153: jump opposite left after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1154: look twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1155: run right after turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

1156: look left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_LOOK $0))))

1158: turn opposite left and look right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_LOOK $0))))

1159: turn right thrice after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1161: turn left twice and look right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_LOOK $0))))

1162: walk opposite right and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_RTURN $0))))

1163: run twice and walk thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1164: walk left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_WALK $0))))

1165: turn left twice and jump left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1166: look right after turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1167: jump thrice and run twice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RUN (SCAN_RUN $0))))

1168: turn left and jump opposite right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1169: turn left after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_LTURN $0))))

1170: turn opposite right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1171: walk left and turn right twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1172: turn right twice and jump left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_JUMP $0))))

1173: run twice and look thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1174: look left after turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1175: jump left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1176: turn right twice and look left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_LOOK $0))))

1177: turn left twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1178: jump left after turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1179: turn opposite left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1180: walk left after turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1182: look opposite left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_RTURN $0))))

1183: look and turn right thrice
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1184: look opposite left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1185: jump right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1186: jump left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1188: look right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1189: turn right twice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1190: walk right after turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1191: look after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1192: walk left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1193: jump opposite right after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1194: look thrice and run twice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RUN (SCAN_RUN $0))))

1195: jump opposite right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_LTURN $0))))

1196: walk right and turn left twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1197: turn left after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LTURN $0))))

1198: turn opposite left after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1199: look opposite right after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1200: look opposite right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LTURN $0))))

1202: look left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_LOOK $0))))

1204: walk left after turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1206: turn left twice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1207: turn right twice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1208: turn opposite right and walk right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1210: turn right and walk opposite left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1211: turn opposite right after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1212: walk opposite right after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1213: run twice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RUN (SCAN_RUN $0))))

1214: turn left after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_LTURN $0))))

1215: look right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_LOOK $0))))

1216: turn opposite left after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1217: run twice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RUN (SCAN_RUN $0))))

1218: turn opposite right and jump left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_JUMP $0))))

1219: turn left twice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1220: turn opposite left and look left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1222: walk opposite right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_LTURN $0))))

1224: turn left after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_LTURN $0))))

1225: look left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1226: turn left thrice after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1227: turn left and look opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1228: turn left and walk opposite right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1229: jump thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1230: look left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1231: turn opposite left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1232: look right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_LOOK $0))))

1233: turn right thrice and walk
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1234: turn right twice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1235: turn right and jump opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1237: look opposite right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1238: look left and turn right twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1239: turn right and walk opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1242: jump left after turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1243: turn opposite left and jump right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_JUMP $0))))

1244: turn right twice and look right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1245: jump opposite right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1246: turn left thrice after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1247: turn opposite right after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1248: run twice and jump thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1249: turn opposite left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1251: turn left twice and walk left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1252: turn opposite right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1253: walk right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_WALK $0))))

1254: turn left twice and walk right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_WALK $0))))

1255: turn left twice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1256: walk opposite left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_RTURN $0))))

1257: turn opposite right after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1258: turn opposite left and walk right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_WALK $0))))

1259: turn right thrice and look
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1260: turn right twice and walk left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_WALK $0))))

1261: jump opposite left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_RTURN $0))))

1262: walk after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1263: turn left and jump opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1265: turn right thrice after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1267: look after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1268: turn right and look opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1269: turn opposite right and jump right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1270: jump opposite left and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_LTURN $0))))

1271: walk after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1272: turn right thrice and jump
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1273: look right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1275: walk and turn right thrice
0.00	(lambda (SCAN_WALK (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1276: look opposite right and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_RTURN $0))))

1277: walk opposite left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1280: look left after turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1281: turn left and walk opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1282: look opposite left after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1283: jump right after turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1285: walk opposite left after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1286: look opposite left and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LTURN $0))))

1287: turn right thrice after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1288: look right after turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1289: walk and turn left thrice
0.00	(lambda (SCAN_WALK (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1290: look right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1291: turn opposite right and look left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_LOOK $0))))

1293: turn right after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_RTURN $0))))

1294: look right and turn left twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1295: jump left and turn right twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1296: walk left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1299: jump after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1300: jump right after turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1301: walk left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_WALK $0))))

1303: jump right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_JUMP $0))))

1304: jump and turn right thrice
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1305: turn left after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_LTURN $0))))

1306: turn right after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_RTURN $0))))

1307: jump opposite left after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1308: turn left thrice and look
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1309: jump right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1310: turn right after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_RTURN $0))))

1311: turn opposite left after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1312: turn opposite left and jump left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1313: turn right twice and walk right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1314: turn right and jump opposite left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1315: walk right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1316: jump opposite left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1317: turn left twice and look left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1318: walk left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1319: walk opposite left and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_LTURN $0))))

1320: walk right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1321: turn right twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1322: turn left after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LTURN $0))))

1323: walk right after turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1324: look left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1325: turn opposite right and walk left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_WALK $0))))

1326: walk thrice and run twice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RUN (SCAN_RUN $0))))

1327: look and turn left thrice
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1328: turn left thrice and walk
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1329: turn left and look opposite right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1330: jump left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_JUMP $0))))

1331: turn right after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_RTURN $0))))

1333: walk opposite right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1334: jump left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1336: jump right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1337: turn left thrice and jump
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1338: turn left thrice after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1340: jump and turn left thrice
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1341: turn right after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_RTURN $0))))

1342: turn right twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1343: look thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1344: turn right after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_RTURN $0))))

1345: turn right and look opposite left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1346: turn opposite right after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1347: jump after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1348: walk right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1349: jump opposite right and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_RTURN $0))))

1350: turn right twice and jump right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1351: walk right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_WALK $0))))

1353: jump left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_JUMP $0))))

1354: turn opposite left and walk left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1355: turn right twice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1356: turn left twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1359: turn opposite right and look right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1360: turn right twice and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1361: turn opposite left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1362: turn right after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

1363: run thrice and turn right twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1364: turn opposite left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1365: run opposite left and run twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1366: turn right twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1367: turn right twice and run thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1368: run twice and run opposite right
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))))

1369: turn left after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

1370: turn left twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1371: turn left thrice and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1372: turn opposite right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1373: turn left twice and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1374: turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1375: turn opposite right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1376: run thrice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1377: turn opposite left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1378: turn opposite right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1380: run opposite left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))))

1381: turn right and turn left thrice
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1382: turn opposite right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1384: turn opposite left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1385: turn left twice and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1386: turn left twice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1387: turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1388: turn right twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1389: turn opposite right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1390: turn right twice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1391: turn right thrice and turn left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

1392: turn opposite left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1393: turn opposite left and run thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1395: run twice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1396: turn opposite left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1397: turn right twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1398: turn opposite right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1399: turn opposite right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1400: run opposite right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))))

1401: run thrice and turn opposite left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1402: run twice and run opposite left
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))))

1403: turn opposite right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1404: run opposite right and run twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1405: turn left thrice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1407: turn right thrice and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1408: turn opposite left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1411: run thrice and run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1412: turn left twice and run thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1413: turn left thrice and turn right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

1415: turn opposite right and run thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1416: turn right twice and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1417: turn right twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1418: turn opposite right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1419: run thrice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1420: turn right and turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1421: turn opposite left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1422: turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1423: turn left twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1424: turn left twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1426: run thrice and turn left twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1427: run twice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1428: turn right after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1429: turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1430: turn left twice and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1431: turn right twice and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1432: turn right thrice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1433: run thrice and turn opposite right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1434: turn left twice and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1435: turn left and turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1436: turn left thrice after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1437: run thrice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1438: run thrice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1439: turn left twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1440: turn right twice and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1441: turn right thrice after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1442: turn left and turn right thrice
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1443: run thrice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1444: turn left after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1445: turn opposite left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1451: look thrice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1455: jump thrice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1458: look twice and look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1463: look thrice and look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1469: walk thrice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1471: walk thrice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1475: jump twice after jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1478: jump twice and jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1479: look thrice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1482: walk twice and walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1488: look thrice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1494: walk thrice and walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1510: walk twice after walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1512: look twice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LOOK (SCAN_LOOK $0))))

1522: jump twice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_JUMP (SCAN_JUMP $0))))

1530: look twice after look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1531: walk twice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_WALK (SCAN_WALK $0))))

1534: look twice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LOOK (SCAN_LOOK $0))))

1549: jump thrice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1553: jump thrice and jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1555: run opposite right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))))

1558: turn left thrice and run twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0)))))

1561: walk thrice and walk right
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN (SCAN_WALK $0))))

1562: run right twice after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

1564: turn right thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

1569: jump thrice and jump left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN (SCAN_JUMP $0))))

1573: run twice and turn left thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

1574: jump left and jump thrice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1575: run twice after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0)))))

1576: walk right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN (SCAN_WALK $0))))

1586: run right twice and turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))))

1590: walk thrice and walk left
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN (SCAN_WALK $0))))

1591: turn left thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

1594: look right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN (SCAN_LOOK $0))))

1596: run twice after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0)))))

1597: jump thrice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1603: walk thrice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1606: run right and run opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))))

1607: walk right and walk thrice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1612: turn right after run right twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))))

1614: look left and look thrice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1618: run left twice and turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))))

1626: walk left after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN (SCAN_WALK $0))))

1631: look thrice and look left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN (SCAN_LOOK $0))))

1636: turn left after run left twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))))

1642: run twice and turn right thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

1645: turn right and run right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

1648: jump right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN (SCAN_JUMP $0))))

1650: jump left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN (SCAN_JUMP $0))))

1658: run left after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

1661: walk thrice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1666: walk left and walk thrice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1676: run left twice after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

1677: look thrice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1680: turn right thrice and run twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0)))))

1682: run right after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

1684: look right and look thrice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1687: look thrice and look right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN (SCAN_LOOK $0))))

1689: jump thrice and jump right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN (SCAN_JUMP $0))))

1691: jump right and jump thrice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1692: turn left and run left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

1694: jump thrice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1698: look left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN (SCAN_LOOK $0))))

1700: look thrice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1707: run opposite right and run right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

1709: run opposite left after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))))

1716: jump thrice and run thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1718: walk twice and walk opposite left
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))))

1722: look opposite right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))))

1733: jump thrice and turn opposite right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1735: jump twice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1743: turn opposite left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1744: look after look left twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))))

1750: turn left twice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1752: jump and jump right twice
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))))

1754: jump right twice and jump
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))))

1757: walk thrice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1759: jump opposite left and jump twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1760: look thrice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1761: look twice and look opposite right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))))

1763: jump twice and jump opposite right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))))

1764: walk thrice and turn opposite left
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1769: look twice after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1771: look opposite left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))))

1779: walk twice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1780: walk thrice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1783: look thrice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1784: jump twice and jump opposite left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))))

1786: walk thrice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1790: turn left twice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1793: turn opposite right and jump thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1796: jump thrice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1803: look thrice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1806: turn opposite left and walk thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1807: look thrice and turn right twice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1812: turn right twice and look thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1818: turn opposite right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1820: jump opposite right and jump twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1829: jump thrice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1834: turn opposite left and look thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1835: jump opposite right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))))

1838: walk thrice and turn right twice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1846: turn right twice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1850: look twice and look opposite left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))))

1852: turn opposite left and jump thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1854: jump thrice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1863: run thrice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1864: look left twice after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))))

1868: look opposite left and look twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1871: turn right twice and jump thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1876: walk right twice and walk
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))))

1884: jump opposite left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))))

1885: look thrice and turn left twice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1887: walk opposite right and walk twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1891: look twice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1892: look thrice and turn opposite right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1893: jump thrice and turn right twice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1894: walk twice and walk opposite right
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))))

1898: walk thrice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1900: turn right twice and walk thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1908: walk and walk right twice
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))))

1914: walk opposite left and walk twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1919: jump thrice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1920: turn opposite right and walk thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1922: look thrice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1924: turn right twice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1931: walk opposite left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))))

1939: turn opposite right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1940: turn opposite right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1944: turn left twice and jump thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1946: walk twice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1951: look opposite right and look twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1953: look thrice and turn opposite left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1955: walk opposite right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))))

1957: walk and walk left twice
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))))

1960: jump twice after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1962: run thrice and jump thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1963: walk thrice and turn left twice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1964: jump thrice and turn left twice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1970: turn opposite left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1976: turn right twice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1978: turn opposite left after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1983: turn opposite right and look thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1989: jump thrice and turn opposite left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1993: turn left twice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1994: turn left twice and look thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1998: turn left twice and walk thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2001: walk thrice and turn opposite right
-0.10	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
-2.34	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN (SCAN_RTURN $0))))

2008: jump thrice after turn opposite left
-0.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
-2.37	(lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2019: turn left twice and run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2020: run opposite left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2026: run opposite left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2031: run opposite left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2033: run opposite right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2036: turn opposite left twice and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2038: run thrice after run opposite left
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RUN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2042: run opposite left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2048: run opposite right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2050: run and turn opposite left twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2051: turn right twice and run opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2053: run after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2057: turn opposite right and run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2063: turn opposite right after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2066: run opposite right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2072: run opposite right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2078: turn opposite right twice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2079: run opposite left and run thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RUN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2080: run opposite right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2085: turn right twice and run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2086: run thrice and run opposite left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2091: run opposite left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2097: run opposite right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2099: turn around right after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2101: turn opposite left after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2106: run after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2125: run thrice and run opposite right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2146: run opposite left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2165: turn right twice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2173: run and turn opposite right twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2176: turn opposite right and run opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2181: turn left twice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2182: run after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2185: run opposite left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2189: turn right twice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2192: run opposite left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2193: turn opposite left twice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2197: run opposite right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2198: run opposite left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2204: turn around right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2211: run and turn around right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2214: run and turn around left
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2228: run thrice after run opposite right
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RUN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2230: run right after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2240: turn opposite left and run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2242: turn left twice and run opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2244: turn around left and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2257: turn opposite left and run opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2258: turn opposite right after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2262: run left after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2265: run opposite right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2272: run after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2277: turn right thrice and run right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2281: turn around left after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2283: turn opposite right twice and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2293: turn left thrice and run left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2296: run opposite right and run thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RUN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2298: run opposite right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2299: turn left twice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2305: turn opposite left after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2312: run thrice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2313: look opposite right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2314: turn around right and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2315: jump opposite right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2317: look and turn opposite left twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2318: walk right after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2319: walk opposite right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2320: turn opposite right twice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2321: turn opposite right twice and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2322: turn left twice and look opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2323: walk opposite left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2324: walk opposite left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2325: jump right after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2326: turn around left after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2327: turn left twice and jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2328: turn opposite left and jump opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2329: turn around left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2330: turn opposite left after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2331: turn opposite left after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2333: walk opposite right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2334: walk left after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2335: jump opposite right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2336: turn right thrice and look right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2337: turn opposite left after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2338: run thrice and walk opposite left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2340: turn right twice and walk opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2341: turn left twice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2342: walk opposite left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2343: look opposite left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2344: look and turn around right
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2345: turn left twice after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2346: turn opposite right and look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2347: jump after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2348: jump opposite right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2349: turn opposite right and walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2350: jump opposite right and run thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2351: walk opposite right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2352: jump opposite right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2354: turn around right after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2355: jump opposite right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2356: turn opposite right after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2358: jump opposite right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2359: turn left twice and walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2361: walk opposite right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2362: jump opposite left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2363: walk opposite left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2364: look opposite left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2366: walk opposite left and run thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2368: look opposite right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2369: turn around left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2370: walk opposite left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2371: walk opposite left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2372: jump opposite left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2373: run thrice and jump opposite right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2374: turn around left and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2375: turn left twice and walk opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2376: turn right twice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2377: turn left twice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2378: jump opposite left and run thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2379: jump opposite right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2380: jump opposite left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2381: turn right twice after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2382: turn opposite left and look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2383: turn right twice after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2384: look and turn opposite right twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2386: turn opposite right and jump opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2388: look opposite left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2389: turn opposite left twice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2390: turn around right after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2391: look opposite left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2392: turn opposite left after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2393: walk opposite right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2394: walk and turn opposite left twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2395: look opposite right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2396: look opposite left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2397: walk opposite left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2398: turn opposite left twice and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2399: turn opposite left after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2400: walk opposite left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2401: turn opposite left twice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2402: look opposite left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2405: turn right twice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2407: walk opposite right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2408: turn right twice and walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2409: jump and turn around left
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2410: look opposite right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2411: jump opposite left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2412: turn opposite right after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2413: look after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2414: turn opposite right twice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2415: run thrice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2416: walk after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2417: jump after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2418: jump and turn around right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2419: turn right twice and jump opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2420: walk and turn opposite right twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2421: look opposite left and run thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2422: turn left twice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2423: jump after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2424: turn opposite right after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2425: turn opposite left twice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2428: look opposite right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2430: turn opposite left and walk opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2431: turn opposite right and walk opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2432: turn opposite right and look opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2433: turn right thrice and walk right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2434: turn opposite right after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2435: turn around right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2436: walk opposite right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2437: turn left twice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2438: turn opposite left and jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2439: turn opposite right after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2440: jump opposite left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2441: turn left twice and jump opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2442: look opposite right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2443: jump after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2444: look after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2446: look after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2447: turn left thrice and walk left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2448: walk and turn around right
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2449: look opposite right and run thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2450: run thrice and jump opposite left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2452: turn around right after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2453: look opposite left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2454: walk opposite right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2455: run thrice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2457: turn left thrice and jump left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2458: turn around right and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2459: jump and turn opposite left twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2460: run thrice and look opposite left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2461: jump opposite left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2462: turn opposite left after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2463: jump and turn opposite right twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2464: turn opposite right and jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2465: turn opposite right twice and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2466: turn left twice and look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2467: turn right thrice and jump right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2469: turn opposite left twice and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2470: turn opposite right after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2471: look opposite right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2472: walk after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2473: run thrice and look opposite right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2474: run thrice after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2475: turn opposite left and walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2476: look opposite right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2478: look opposite left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2479: turn right twice and look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2481: walk opposite right and run thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2482: walk after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2485: walk opposite left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2486: turn right twice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2487: walk after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2488: turn around left after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2489: look opposite left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2491: walk and turn around left
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2492: look left after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2493: look right after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2494: run thrice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2495: jump opposite left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2496: jump left after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2497: turn right twice and jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2498: turn opposite left twice and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2499: turn left thrice and look left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2500: look and turn around left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2501: jump opposite left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2502: turn right twice and look opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2503: turn opposite right twice and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2504: turn left twice after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2506: look opposite right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2507: turn right twice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2508: turn opposite right twice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2509: jump opposite right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2510: jump opposite left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2512: turn opposite left and look opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2513: run thrice and walk opposite right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2514: run thrice after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2517: jump opposite right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2518: turn around left and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2521: look after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2522: walk opposite right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2526: turn right thrice after turn right twice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2527: turn left thrice after turn left twice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2528: walk thrice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2529: turn around left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

2531: turn opposite right twice and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

2533: run thrice after turn right thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2535: turn around left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2536: turn right thrice after turn left twice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2539: run thrice after turn left thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2540: turn around right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2541: turn opposite right twice and turn right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2542: turn left thrice after turn opposite left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2543: turn left after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

2544: turn left after turn around left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2545: jump thrice and jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2546: look thrice and jump thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2549: look thrice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2550: look thrice and look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2551: turn opposite left after turn right thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2552: turn right and turn around left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2557: turn right and turn opposite left twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2559: turn around left and turn left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2561: turn around right after turn right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2564: turn left and turn around right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2566: turn left and turn around left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2568: turn opposite right after turn right thrice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2570: walk thrice and jump thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2571: turn left thrice and run thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2573: turn right twice and turn left thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2574: turn right after turn opposite right twice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2576: turn left and turn opposite right twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2577: turn left after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

2578: turn left thrice and turn opposite right
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2579: jump thrice and walk thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2585: jump thrice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2586: turn left thrice after run thrice
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2587: turn opposite right twice after turn right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2590: turn opposite right twice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2593: turn right and turn opposite right twice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2594: turn right thrice after turn opposite right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2595: turn right after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

2597: turn left twice and turn left thrice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2598: turn opposite right after turn left thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2600: turn opposite left twice after turn left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2601: turn right after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

2605: jump thrice and look thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2607: run thrice and turn right thrice
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2608: turn opposite left twice and turn left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2609: turn opposite left after turn left thrice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2610: turn opposite left and turn right thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2611: turn opposite right and turn right thrice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2612: walk thrice and look thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2615: turn opposite left twice and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

2617: turn left thrice after turn opposite right
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2618: turn right thrice and run thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2620: walk thrice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2621: turn around right and turn right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2623: turn right thrice after run thrice
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2624: turn right thrice and turn opposite left
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2625: turn right thrice and turn right twice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2627: turn right and turn around right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2629: turn left thrice after turn right twice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2631: turn left thrice and turn left twice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2632: turn opposite left twice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2634: turn left twice after turn right thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2635: jump thrice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2636: turn right thrice and turn opposite right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2640: turn left twice after turn left thrice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2641: turn right twice after turn left thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2642: walk thrice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2643: turn opposite right and turn left thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2644: walk thrice and walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2647: turn right thrice after turn opposite left
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2648: turn right twice and turn right thrice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2649: turn right thrice and turn left twice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2651: turn left thrice and turn right twice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2652: turn left and turn opposite left twice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2657: turn right after turn around right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2660: turn around left after turn left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2662: look thrice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2664: turn left twice and turn right thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2666: turn left thrice and turn opposite left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2667: look thrice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2670: turn right twice after turn right thrice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2673: turn around right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

2674: look thrice and walk thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2677: run thrice and turn left thrice
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2678: jump thrice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2680: turn opposite left and turn left thrice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2681: turn left after turn opposite left twice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2684: look thrice and run opposite right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2690: run opposite right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2692: run opposite left and look thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2693: run opposite left and jump thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2694: run opposite right and walk thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2695: walk thrice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2698: jump thrice and run opposite right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2699: run opposite left and walk thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2701: jump thrice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2702: run opposite right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2705: jump thrice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2710: look thrice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2711: run opposite left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2713: run opposite right and look thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2714: walk thrice and run opposite right
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2716: walk thrice and run opposite left
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2718: run opposite left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2722: look thrice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2730: jump thrice and run opposite left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2734: run opposite left after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2739: walk thrice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2741: look thrice and run opposite left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2745: run opposite right and jump thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2748: run opposite right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2755: look opposite right and walk thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2760: look opposite left and look thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LOOK $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2770: jump opposite right and look thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2776: jump opposite left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2780: jump thrice after jump opposite right
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_JUMP $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2783: walk thrice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2784: jump thrice and jump opposite right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2789: walk opposite left and jump thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2798: jump thrice after jump opposite left
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_JUMP $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2807: jump opposite left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2813: look opposite right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2814: walk opposite right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2820: look opposite right and jump thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2826: look thrice after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2827: look opposite left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2834: look thrice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2838: walk opposite left and look thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2842: look opposite left and jump thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2843: walk thrice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2848: look thrice after look opposite right
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LOOK $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2850: look thrice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2864: walk opposite right and jump thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2865: look thrice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2873: jump thrice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2881: look thrice and walk opposite left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2885: jump thrice and look opposite left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2886: look thrice and jump opposite left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2887: jump thrice and jump opposite left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2893: look opposite right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2894: look thrice and look opposite left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2898: jump opposite right and walk thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2900: look opposite left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2902: jump thrice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2909: walk thrice and look opposite right
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2914: jump thrice and walk opposite left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2917: look thrice after look opposite left
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LOOK $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2925: jump thrice after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2937: jump opposite right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2943: look thrice and jump opposite right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2944: look opposite right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2945: jump thrice and look opposite right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2946: walk opposite right and look thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2949: look opposite right and look thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LOOK $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2958: look thrice and look opposite right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2965: jump thrice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2970: jump opposite left and look thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2975: walk opposite right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2985: look thrice and walk opposite right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2986: jump opposite left and jump thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_JUMP $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2988: walk thrice and jump opposite right
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2993: jump thrice and walk opposite right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2996: walk opposite left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2999: walk opposite left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

3004: jump opposite right and jump thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_JUMP $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

3005: jump opposite right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

3010: jump opposite right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

3729: turn opposite left after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3732: turn left twice after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3733: turn around left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3734: turn around right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3735: turn right thrice and turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3736: turn opposite left and turn opposite right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3737: turn opposite left twice and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3738: turn around left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3739: turn around right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3740: turn opposite left twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3742: turn around right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3743: turn around left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3744: turn left thrice after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3745: turn opposite left after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3746: turn opposite right after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3747: turn around left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3749: turn right twice after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3750: turn right twice after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3752: turn opposite left after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3753: turn right twice and turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3755: turn opposite left twice and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3758: turn left twice and turn around right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3767: turn left twice after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3768: turn opposite right twice and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3769: turn right twice and turn around left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3770: turn around right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3771: turn opposite right twice and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3774: turn around left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3775: turn right twice and turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3777: turn around right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3780: turn opposite right twice and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3782: turn opposite left twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3784: turn opposite right twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3787: turn around left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3788: turn around left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3789: turn opposite right after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3793: turn opposite right twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3795: turn left twice after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3796: turn right twice after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3798: turn opposite right after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3800: turn left twice and turn opposite right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3802: turn left thrice and turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3804: turn left twice and turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3805: turn opposite right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3807: turn opposite right twice and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3809: turn opposite left twice and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3811: turn opposite right and turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3813: turn opposite left twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3816: turn opposite right and turn around left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3817: turn opposite left after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3820: turn around left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3821: turn opposite right twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3823: turn left twice after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3824: turn right thrice after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3825: turn opposite left and turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3826: turn opposite right and turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3828: turn right twice and turn opposite left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3831: turn opposite right after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3832: turn around right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3834: turn opposite left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3838: turn opposite right and turn opposite left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3839: turn opposite left and turn around right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3840: turn around right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3841: turn opposite left and turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3847: turn opposite left twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3848: turn opposite left twice and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3849: turn right twice after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3850: turn around right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3853: turn opposite right twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3855: turn left twice and turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

Compression message saved to: compressionMessages/2020-11-27T20:28:54.917148
Compression backend will run for most 20 iterations
Total number of candidates: 69551
Constructed version spaces and coalesced candidates in 14.0404s.
Trimmed down the beam, have only 300 best candidates (M)
Rewrote topK in 37.2403s.
Initial score: -16500.868176
 (M)New frontiers length 300 Scored candidates (M) in 17.1037s.
No improvement possible. (M) 
Completed one step of memory consolidation in 1.32862m.
completed ocaml compression in 1.32862m.
Finished consolidation.
Induced a grammar in 80.9 seconds
Grammar after iteration 2:
-1.317252	t0	$_
-2.280857	tstr -> tstr	SCAN_RUN
-2.302957	tstr -> tstr	SCAN_LOOK
-2.306689	tstr -> tstr	SCAN_JUMP
-2.342849	tstr -> tstr	SCAN_WALK
-2.402747	tstr -> tstr	SCAN_RTURN
-2.427748	tstr -> tstr	SCAN_LTURN
-2.627950	tstr -> tstr	#(lambda (SCAN_RTURN (SCAN_RTURN $0)))
-2.643535	tstr -> tstr	#(lambda (SCAN_LTURN (SCAN_LTURN $0)))
-3.844023	tstr -> tstr	#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))
-3.925516	tstr -> tstr	#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))
-3.934995	tstr -> tstr	#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))
-3.983785	tstr -> tstr	#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))
Currently using this much memory: 322760704
ecIterator count 1
Currently using this much memory: 322760704
Currently using this much memory: 322760704
Using a waking task batch of size: 2000
Disabling parallelism on the Python side because we only have one job.
If you are using ocaml, there could still be parallelism.
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 0. |finished| = 1.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.538920.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 0. |finished| = 0.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.741488.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 0. |finished| = 8.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 4.500000 <= MDL < 6.000000. Timeout 3.178531.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 0. |finished| = 4.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 6.000000 <= MDL < 7.500000. Timeout 2.561397.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 205. |finished| = 11.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 7.500000 <= MDL < 9.000000. Timeout 1.844364.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 210. |finished| = 0.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 9.000000 <= MDL < 10.500000. Timeout 0.934089.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 210. |finished| = 0.)
We enumerated this many programs, for each task:
	
Generative model enumeration results:
Hits 0/2000 tasks
Average description length of a program solving a task: 0.000000 nats
Generative model no successful times to report statistics on!
Currently using this much memory: 327573504
Frontiers discovered top down: 0
Total frontiers: 1891
Using an ensemble size of 1. Note that we will only store and test on the best recognition model.
Currently using this much memory: 327573504
(ID=0): Training a recognition model from 1891 frontiers, 0% Helmholtz, feature extractor ScanFeatures.
(ID=0): Got 0 Helmholtz frontiers - random Helmholtz training? : True
(ID=0): Contextual? False
(ID=0): Bias optimal? False
(ID=0): Aux loss? False (n.b. we train a 'auxiliary' classifier anyway - this controls if gradients propagate back to the future extractor)
(ID=0):  Epoch 1 Loss 6.575712117740302
(ID=0):  	vs MDL (w/o neural net) 8.831451435937117
(ID=0):  	1891 cumulative gradient steps. 483.812250 steps/sec
(ID=0):  	12-way auxiliary classification loss 0.41855491514971244
(ID=0):   Trained recognition model in 60.44980001449585 seconds
Currently using this much memory: 327225344
Trained an ensemble of 1 recognition models, now enumerating.
Enumerating from recognizer 0 of 1
Evaluated recognition model in 0.9 seconds
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (14 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (15 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (20 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (20 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (15 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (15 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (15 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (15 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (15 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.751550.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.589608.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.678566.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.859680.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.518313.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (14 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.357326.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.448740.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.203779.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.295337.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (15 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.134290.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.058679.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.982920.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.906384.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.829311.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.752760.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.675757.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.599363.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.522543.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.445313.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.366171.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.376408.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372273.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.369865.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.367363.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.365983.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (20 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.365425.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.365727.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.364423.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.364718.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.364790.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.364859.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.363735.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.366112.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.365845.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.366356.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.366950.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.366776.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.367373.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372133.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.374397.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.378945.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.381798.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.384406.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.382537.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.381662.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.381546.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.382578.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.382757.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.379795.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.377999.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.374608.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372001.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.370400.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.370112.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.369815.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.365924.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.366604.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.365361.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.365703.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.366148.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.366499.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.366042.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (20 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.368518.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.367996.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.367729.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.367803.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.367783.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372831.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.369322.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.369227.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372506.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.374800.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.373359.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.371052.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.374832.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.374807.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.374282.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.371061.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.367626.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.365582.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.362213.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.360031.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (15 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.360275.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.360788.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.361205.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.360069.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.355378.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.358355.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.364008.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.364493.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.364422.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.364064.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.368768.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.367341.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.367818.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (15 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.368215.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.371719.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375121.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375496.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.379727.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.381843.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.380682.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.381582.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.382191.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (15 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.380658.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.381902.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.380311.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.378992.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.376914.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.374163.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.373091.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372847.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.373236.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.373409.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.373244.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375066.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375283.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.373752.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.374429.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375981.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375575.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (15 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375278.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.374231.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372580.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.376177.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.381707.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.384022.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.386172.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (15 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.388576.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.388601.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.388741.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.389194.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.389036.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.388874.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.385833.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.383391.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.384966.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.381066.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.378577.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.378332.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.378804.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.377284.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.381503.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.379940.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.379951.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.380344.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.380563.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.379935.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.380190.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.379571.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.378994.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.378868.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.378962.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.383803.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.387046.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.387013.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.389441.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.391254.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.390519.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.389269.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.391901.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.390893.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.390318.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.387418.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.384172.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.380520.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.377811.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.376109.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375725.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375788.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375936.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375582.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375732.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375612.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.377803.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.377607.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.378554.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.378654.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.376655.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.377381.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.376986.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.376906.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.381838.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.383889.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.387678.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.390496.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.393076.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.391635.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.392421.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.392421.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.392675.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.392426.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.389676.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.386659.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.384223.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.381347.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.379878.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.384552.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.383136.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.384403.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.384863.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.384618.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.385119.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.385428.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.385148.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.385367.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.385118.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.384676.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.385061.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.385378.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.385201.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.389652.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.392771.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.395387.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.397840.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.392834.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.391373.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.391302.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.390815.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.390460.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.389978.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.384668.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.381747.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.378585.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375593.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372659.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372513.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372440.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372086.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372128.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.371445.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.371251.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.370695.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.369004.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375648.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.374773.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375433.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375471.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375416.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375357.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.382388.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.384286.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.387610.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.390220.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.392981.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.391105.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.390577.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.390607.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.390586.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.390271.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.388202.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.384820.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.386217.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.381178.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.378622.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.378148.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.374959.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.371135.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.370562.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.370391.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.371389.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.371574.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.371756.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372239.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372817.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.373594.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.373604.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.373340.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.374160.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.377224.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.380028.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.382231.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.385546.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.388373.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.386394.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.387672.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.393341.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.393674.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.392771.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.388780.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.381874.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.376662.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.373919.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.369915.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.368951.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.367162.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.366689.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.365981.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.363788.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.363381.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.363861.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.363629.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.363468.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.363818.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.363999.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.364003.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.364131.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.364964.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.370170.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.374854.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.382269.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.384658.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.388665.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.386332.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.389173.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.387928.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.387525.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.390421.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.384710.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.378172.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372965.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.367571.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.366913.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.366359.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.366240.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.365588.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.365090.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.364950.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.364968.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.364922.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.365600.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.365069.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.365498.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.366635.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.365851.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.366075.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.367363.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.371775.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.377833.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.383606.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.389322.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.389968.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.390910.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.390283.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.388864.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.387205.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.384108.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.381224.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.378267.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375253.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.373365.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.373002.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372032.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372097.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372467.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372600.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372469.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372635.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.371316.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.371182.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.371291.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.370877.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.371250.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375148.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.377174.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.377753.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.383242.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.386595.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.388782.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.391847.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.389824.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.387987.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.388463.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.388334.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.387556.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.385718.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.383187.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.381969.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.378995.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.376441.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.376265.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.376365.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.375882.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.376085.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.376520.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.376276.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.376248.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.376958.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.377282.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.377296.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.382251.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.380802.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.381142.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.382155.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.386183.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.388860.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.391462.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.394576.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.397507.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.396791.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.397320.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.397583.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.397427.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.395763.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.392526.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.386058.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.379238.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.372638.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.371371.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.370190.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.369499.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.369442.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.368817.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.368559.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.368637.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.368116.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.368035.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.367623.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.367409.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.367333.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.367330.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.367039.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.367934.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.124576.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.965466.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.062788.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.245043.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.907568.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (14 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.742488.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.833405.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.587695.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.678770.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (15 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.517236.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.434411.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.353477.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.274124.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.191483.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.111222.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.033230.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.956332.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.879778.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.802295.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.722422.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.731512.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.725354.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.726552.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.722396.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.725649.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (20 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.723737.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.724282.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.722790.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.722927.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.728473.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.734004.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.738554.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.743518.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.747067.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.747922.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.748601.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.747789.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.747761.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.749449.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.745493.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.749223.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.746176.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.742707.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.738093.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.737150.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.737236.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.738377.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.738713.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.736028.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.734516.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.730807.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.728497.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.725954.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.725554.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.725646.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.722423.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.723272.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.724054.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.730472.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.736532.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.741734.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.747145.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (20 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751958.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.752584.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.752918.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.753073.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.752538.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.753908.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.743586.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.739278.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.740327.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.741267.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.738313.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.735753.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.739568.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.737090.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.736698.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.732927.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.729644.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.727412.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.723947.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.721782.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (15 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.722017.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.721909.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.722173.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.721834.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.719577.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.729570.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.740263.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.745069.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.747142.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.746636.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751172.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.749794.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751778.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (15 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.749643.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.752888.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.754005.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.752036.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.754431.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.754660.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.753097.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.754482.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.755188.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (15 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.753357.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.754787.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.753170.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751567.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.748960.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.746149.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.745281.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.745181.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.743499.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.748513.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.746852.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751520.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.754541.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.755754.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.758933.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.762751.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.761256.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (15 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.760857.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (16 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.759271.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.757908.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.760829.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.763909.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764033.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.763333.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (15 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.762612.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.760830.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.759199.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764675.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.762194.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.762144.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.759388.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.757783.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.759179.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.755082.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.752651.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.752504.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.752958.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.752312.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.756293.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.755261.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.760500.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.763891.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.767229.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.769205.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.771713.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.770082.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.769290.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.769753.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.769711.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.771900.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.771266.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764281.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.762170.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.761768.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.760102.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.758658.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.760437.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.759319.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.758853.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.755129.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751481.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.747649.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.744926.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.740283.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.739539.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.739802.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.736947.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.735895.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.737042.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.740960.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.749063.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.754461.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.759008.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.758727.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.757264.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.757995.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.757835.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.757203.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.759896.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.760498.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.761682.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.760825.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.762633.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.759101.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.759334.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.762650.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.762899.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.763832.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.760826.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.757832.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.754789.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.752234.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.750802.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.755013.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.753725.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.755522.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.755834.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.760219.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.761151.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.763843.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.767184.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.770627.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.771776.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.772442.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.773025.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.773844.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.771311.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.772573.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.769022.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.765196.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764995.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.753786.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.752399.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.752458.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751639.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751610.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751415.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.746170.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.744424.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.741496.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.738910.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.736394.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.735780.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.735717.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.735270.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.738128.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.739598.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.742866.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.749706.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.753460.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764263.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764526.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.765666.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.766082.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.765261.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.762782.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.766383.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764124.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.763517.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.763985.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764588.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.762371.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.761430.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.761056.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764475.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.763265.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.761454.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.758185.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.759964.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.754344.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751391.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751253.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.748098.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.745084.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.744946.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.749455.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.754268.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.759459.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.761120.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.763748.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.762836.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764040.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764084.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764221.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.763803.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764745.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.765238.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764720.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.765607.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.766824.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764189.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.765329.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.770854.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.772733.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.771417.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.770622.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.761810.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.756573.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.754999.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751552.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.750143.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.748817.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.747495.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.747151.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.749599.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751660.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.754450.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.756080.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.757864.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.757255.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.757205.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751968.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.750329.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.748096.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.747677.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.746798.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.748981.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.745437.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.748751.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.746574.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.749549.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.748802.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.748653.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751731.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.746020.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.739468.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.733971.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.730071.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.728714.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.725674.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.732527.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.731670.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.733834.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.740786.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.746514.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751699.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.758114.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.757015.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.757096.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.758086.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.757026.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.756679.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.755866.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.757430.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.760853.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764716.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.768411.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.767251.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.771863.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.769965.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.768630.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.767617.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764399.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.761085.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.757551.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.754764.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.752802.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.752569.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751542.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751663.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751766.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.755881.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.759015.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.761738.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.762807.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764704.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.763235.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764032.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764173.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.768340.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.769522.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.767349.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.771193.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.771200.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.770816.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.771736.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.769403.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.767190.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.768020.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.767920.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.767028.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.764466.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.762260.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.760422.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.754640.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.752567.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751734.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.752178.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751560.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751697.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.756893.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.758494.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.761934.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.765441.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.768748.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.767431.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.772899.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.771154.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.771367.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.771645.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.773039.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.773479.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.772879.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.778583.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.778326.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.777835.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.778177.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.778283.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.778508.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.777072.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.774158.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.767369.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.760645.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.754098.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.752623.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.751433.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.750765.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.750740.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.749868.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.754094.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.756600.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.758667.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.761087.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.763190.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.760887.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.761223.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.759915.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.759372.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.759144.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.511215.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.345878.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.438463.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.616242.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.275119.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (14 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.109710.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.200422.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.954452.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.045926.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (15 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.883854.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.800340.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.719282.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.640092.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.557158.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 4 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.505805.
	(ocaml: 4 CPUs. shatter: 40. |fringe| = 0. |finished| = 20.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.507884.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.507599.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
We enumerated this many programs, for each task:
	 [31, 30, 30, 32, 33, 26, 27, 34, 31, 34, 34, 26, 29, 36, 36, 6, 13, 26, 31, 9, 10, 12, 6, 34, 10, 13, 13, 6, 10, 9, 6, 10, 8, 12, 10, 26, 12, 12, 9, 7, 7, 33, 7, 8, 10, 11, 34, 10, 11, 9, 9, 11, 13, 9, 13, 12, 9, 9, 12, 8, 13, 13, 13, 12, 9, 10, 9, 13, 26, 13, 7, 11, 10, 26, 10, 34, 26, 7, 7, 7, 10, 7, 10, 8, 9, 30, 12, 9, 10, 6, 11, 10, 12, 9, 34, 13, 9, 34, 10, 30, 26, 10, 12, 13, 33, 7, 34, 10, 26, 6, 13, 9, 26, 10, 10, 10, 13, 9, 9, 13, 6, 34, 7, 10, 6, 9, 12, 11, 9, 13, 30, 10, 10, 7, 10, 13, 12, 12, 12, 10, 10, 34, 13, 13, 10, 33, 7, 8, 12, 9, 9, 11, 10, 7, 10, 9, 10, 7, 13, 7, 12, 12, 33, 10, 6, 30, 7, 26, 8, 7, 8, 9, 13, 9, 12, 7, 7, 12, 13, 7, 11, 7, 10, 10, 12, 13, 6, 12, 13, 12, 8, 13, 10, 7, 13, 7, 13, 10, 12, 13, 34, 9, 12, 7, 8, 10, 9, 12, 8, 9, 9, 8, 7, 8, 9, 7, 9, 9, 9, 9, 8, 8, 12, 9, 8, 9, 6, 10, 8, 12, 12, 10, 8, 9, 8, 9, 12, 12, 9, 10, 12, 12, 9, 11, 12, 9, 9, 8, 12, 12, 11, 7, 9, 10, 7, 10, 9, 9, 8, 8, 9, 10, 8, 12, 8, 8, 12, 9, 9, 12, 12, 7, 11, 8, 9, 9, 6, 7, 8, 7, 8, 8, 12, 12, 11, 9, 12, 11, 12, 9, 12, 6, 12, 11, 9, 10, 12, 11, 10, 9, 9, 12, 13, 8, 12, 10, 11, 8, 12, 13, 12, 9, 11, 12, 13, 8, 8, 10, 8, 11, 12, 12, 9, 11, 11, 11, 12, 13, 8, 12, 6, 7, 9, 8, 12, 9, 12, 10, 11, 10, 12, 11, 9, 9, 8, 12, 8, 8, 8, 8, 8, 7, 13, 12, 7, 10, 13, 10, 12, 9, 8, 8, 12, 8, 8, 10, 8, 10, 12, 9, 8, 12, 12, 8, 7, 12, 9, 9, 8, 8, 8, 8, 12, 8, 9, 12, 8, 9, 7, 8, 9, 9, 9, 9, 10, 12, 12, 8, 8, 8, 9, 11, 9, 12, 13, 12, 9, 13, 8, 8, 13, 12, 8, 8, 12, 8, 11, 13, 12, 12, 8, 8, 12, 13, 9, 12, 13, 11, 8, 9, 8, 7, 7, 12, 10, 9, 8, 9, 12, 12, 11, 9, 9, 12, 8, 8, 8, 12, 12, 10, 9, 9, 7, 9, 12, 10, 10, 13, 9, 8, 12, 8, 12, 8, 9, 10, 11, 9, 12, 10, 12, 8, 12, 9, 8, 11, 12, 8, 11, 7, 9, 8, 9, 8, 9, 7, 9, 12, 13, 10, 8, 9, 9, 12, 10, 9, 12, 8, 8, 8, 10, 6, 8, 13, 10, 7, 8, 9, 7, 12, 9, 8, 10, 8, 8, 7, 12, 12, 6, 10, 10, 13, 6, 12, 9, 11, 10, 10, 7, 12, 7, 11, 11, 9, 11, 12, 7, 10, 11, 7, 10, 9, 11, 12, 7, 7, 9, 12, 12, 7, 9, 7, 7, 11, 10, 6, 11, 9, 7, 12, 9, 11, 7, 10, 11, 12, 13, 7, 12, 11, 12, 13, 11, 9, 10, 6, 12, 11, 8, 11, 9, 12, 13, 8, 9, 12, 9, 11, 7, 8, 7, 12, 8, 7, 12, 8, 11, 11, 8, 6, 12, 12, 7, 12, 7, 6, 11, 6, 7, 8, 10, 9, 12, 9, 11, 9, 6, 10, 11, 11, 10, 9, 8, 12, 7, 12, 7, 9, 7, 12, 9, 9, 8, 11, 11, 9, 12, 9, 11, 9, 7, 9, 9, 8, 7, 12, 7, 12, 11, 10, 11, 7, 9, 7, 10, 9, 7, 7, 10, 9, 12, 9, 10, 8, 12, 7, 7, 9, 11, 9, 9, 6, 9, 6, 12, 9, 10, 12, 11, 11, 11, 10, 11, 7, 8, 7, 9, 6, 10, 9, 11, 11, 11, 7, 11, 8, 12, 11, 10, 11, 7, 9, 9, 10, 11, 12, 6, 7, 10, 13, 12, 9, 11, 6, 7, 11, 12, 12, 6, 9, 6, 9, 7, 7, 11, 7, 7, 11, 10, 11, 11, 13, 29, 9, 9, 7, 27, 7, 7, 6, 10, 9, 13, 12, 8, 9, 12, 6, 11, 8, 6, 7, 6, 6, 12, 8, 9, 9, 7, 11, 9, 32, 7, 8, 9, 11, 9, 12, 9, 12, 9, 8, 9, 9, 9, 11, 9, 9, 12, 11, 12, 12, 10, 9, 8, 7, 7, 9, 8, 6, 6, 9, 9, 9, 7, 8, 12, 6, 8, 6, 32, 8, 11, 13, 6, 10, 11, 9, 12, 12, 7, 7, 11, 6, 9, 10, 10, 11, 9, 10, 7, 9, 11, 9, 7, 8, 8, 7, 8, 11, 9, 6, 8, 8, 12, 8, 8, 9, 9, 10, 11, 8, 11, 11, 9, 11, 12, 6, 12, 9, 8, 11, 8, 29, 8, 9, 9, 6, 8, 7, 10, 10, 9, 11, 27, 11, 7, 8, 9, 8, 7, 8, 8, 11, 10, 8, 11, 11, 11, 7, 8, 9, 11, 6, 12, 7, 12, 10, 11, 9, 6, 9, 8, 13, 12, 9, 12, 12, 9, 12, 11, 6, 11, 9, 9, 8, 6, 7, 10, 8, 8, 13, 7, 9, 13, 30, 34, 10, 8, 10, 8, 10, 8, 13, 9, 10, 8, 13, 13, 8, 9, 10, 13, 10, 8, 9, 9, 10, 10, 10, 10, 8, 11, 11, 8, 10, 9, 9, 9, 13, 8, 10, 7, 10, 13, 9, 10, 10, 11, 10, 12, 9, 10, 7, 11, 8, 8, 8, 9, 9, 9, 13, 9, 9, 9, 13, 11, 13, 8, 11, 9, 9, 10, 34, 13, 10, 10, 33, 8, 8, 33, 8, 9, 8, 10, 13, 30, 11, 9, 8, 9, 30, 13, 13, 8, 12, 9, 8, 10, 10, 9, 10, 12, 9, 10, 10, 7, 11, 13, 10, 10, 11, 9, 9, 33, 7, 10, 11, 9, 8, 11, 9, 13, 30, 34, 9, 8, 12, 11, 34, 7, 10, 8, 8, 8, 10, 13, 9, 8, 10, 9, 9, 8, 12, 10, 8, 11, 12, 10, 9, 13, 12, 11, 11, 13, 8, 8, 12, 10, 8, 8, 10, 12, 8, 34, 13, 8, 13, 9, 8, 8, 11, 7, 9, 8, 9, 12, 8, 13, 6, 13, 11, 8, 9, 10, 7, 10, 10, 9, 34, 11, 8, 34, 9, 9, 6, 33, 34, 6, 9, 30, 8, 13, 7, 6, 6, 13, 31, 31, 6, 13, 10, 11, 6, 34, 34, 12, 9, 26, 6, 30, 12, 31, 6, 9, 6, 13, 9, 29, 8, 9, 8, 31, 7, 36, 7, 13, 8, 10, 26, 36, 9, 30, 7, 6, 9, 9, 13, 9, 9, 10, 7, 7, 34, 34, 6, 26, 7, 6, 26, 31, 9, 26, 7, 30, 29, 8, 7, 9, 12, 32, 36, 11, 8, 10, 6, 9, 6, 6, 9, 9, 10, 6, 6, 6, 9, 9, 6, 6, 8, 9, 10, 33, 6, 6, 10, 33, 6, 7, 10, 7, 13, 7, 6, 8, 8, 26, 9, 9, 9, 27, 6, 31, 6, 6, 6, 7, 6, 9, 8, 6, 10, 11, 9, 6, 7, 8, 8, 8, 13, 9, 10, 36, 7, 9, 10, 6, 13, 9, 12, 7, 6, 7, 27, 10, 11, 6, 9, 6, 13, 8, 32, 8, 9, 6, 26, 8, 31, 7, 9, 31, 7, 9, 6, 7, 26, 9, 8, 11, 8, 10, 5, 10, 11, 11, 12, 12, 13, 7, 8, 13, 12, 11, 12, 12, 12, 10, 26, 10, 6, 8, 12, 8, 10, 10, 11, 8, 9, 12, 10, 6, 9, 6, 10, 6, 8, 9, 10, 10, 10, 7, 12, 10, 8, 12, 8, 10, 6, 10, 5, 7, 9, 12, 12, 10, 8, 10, 10, 5, 33, 10, 10, 12, 13, 5, 10, 8, 12, 12, 12, 10, 8, 34, 10, 11, 9, 12, 7, 12, 10, 6, 10, 7, 11, 9, 9, 11, 12, 5, 13, 12, 8, 6, 12, 9, 7, 5, 8, 34, 11, 11, 12, 12, 12, 9, 7, 8, 13, 9, 6, 7, 8, 9, 10, 10, 11, 6, 12, 13, 12, 7, 13, 7, 6, 13, 12, 13, 8, 10, 10, 9, 6, 5, 8, 8, 5, 13, 12, 10, 10, 12, 10, 8, 9, 11, 7, 12, 13, 9, 12, 10, 11, 12, 10, 12, 12, 9, 10, 9, 12, 11, 9, 12, 13, 8, 12, 13, 11, 12, 12, 8, 8, 9, 12, 6, 11, 11, 12, 5, 12, 9, 10, 6, 12, 10, 12, 12, 6, 7, 12, 9, 8, 9, 12, 12, 10, 7, 8, 10, 10, 12, 11, 10, 12, 9, 7, 6, 13, 11, 26, 8, 26, 10, 10, 11, 9, 9, 5, 12, 12, 8, 11, 30, 8, 5, 11, 8, 6, 12, 7, 8, 12, 13, 8, 12, 13, 26, 13, 11, 10, 9, 12, 11, 9, 8, 10, 7, 10, 7, 33, 8, 8, 8, 30, 11, 12, 12, 12, 12, 34, 12, 11, 8, 10, 11, 11, 9, 5, 10, 12, 8, 10, 10, 8, 8, 12, 10, 12, 12, 10, 8, 8, 12, 5, 12, 12, 9, 7, 10, 8, 12, 10, 12, 7, 13, 9, 10, 12, 8, 12, 10, 9, 12, 10, 9, 10, 12, 9, 10, 9, 8, 12, 10, 8, 26, 8, 13, 10, 13, 26, 9, 11, 12, 9, 12, 9, 5, 5, 8, 11, 11, 9, 26, 5, 5, 6, 9, 11, 11, 8, 12, 10, 12, 12, 7, 6, 7, 12, 10, 6, 9, 12, 7, 10, 9, 10, 11, 8, 7, 8, 10, 34, 12, 12, 10, 10, 12, 12, 10, 9, 12, 10, 10, 9, 11, 9, 13, 13, 5, 9, 10, 10, 8, 5, 10, 8, 12, 13, 9, 13, 12, 10, 12, 9, 12, 13, 10, 11, 12, 12, 11, 6, 10, 12, 13, 9, 8, 10, 10, 9, 5, 13, 13, 10, 12, 26, 12, 11, 11, 10, 10, 10, 7, 9, 12, 12, 7, 9, 8, 9, 9, 9, 9, 9, 12, 9, 11, 12, 9, 12, 9, 8, 8, 8, 7, 9, 9, 8, 10, 12, 7, 12, 8, 7, 8, 9, 8, 32, 9, 9, 9, 9, 8, 12, 10, 8, 13, 9, 8, 9, 9, 7, 8, 8, 11, 8, 7, 9, 8, 10, 12, 9, 11, 7, 11, 11, 9, 9, 9, 9, 8, 8, 9, 8, 8, 12, 8, 7, 6, 27, 8, 8, 7, 13, 11, 12, 6, 9, 12, 13, 12, 11, 8, 8, 8, 8, 8, 9, 32, 12, 12, 6, 12, 12, 8, 8, 9, 9, 11, 9, 7, 10, 8, 12, 49, 12, 36, 8, 8, 29, 7, 9, 8, 12, 10, 9, 8, 8, 13, 8, 12, 12, 12, 10, 10, 9, 36, 11, 9, 7, 8, 9, 11, 8, 10, 10, 8, 9, 9, 9, 29, 7, 9, 8, 10, 6, 9, 9, 7, 9, 12, 12, 13, 9, 27, 9, 8, 8, 6, 8, 8, 6, 9, 7, 7, 27, 12, 8, 49, 11, 11, 12, 11, 10, 8, 9, 9, 8, 8, 9, 8, 9, 8, 9, 8, 8, 9, 9, 12, 10, 29, 8, 12, 6, 7, 9, 6, 10, 7, 7, 9, 11, 9, 29, 13, 9, 9, 8, 12, 12, 7, 9, 8, 8, 7, 8, 7, 10, 8, 7, 7, 12, 10, 12, 7, 8, 8, 8, 7, 8, 9, 7, 8, 8, 9, 7, 12, 8, 8, 7, 32, 10, 11, 12, 8, 9, 27, 8, 7, 7, 7, 9, 10, 9, 9, 8, 10, 8, 29, 8, 9, 8, 9, 8, 9, 9, 7, 9, 8, 9, 9, 8, 12, 9, 8, 9, 8, 8, 11, 9, 12, 7, 9, 9, 8, 7, 8, 7, 9, 8]
Recognizer 0 solved 0/20910 tasks; total tasks solved is now 0.
Best recognizer: 0.
Currently using this much memory: 333508608
Recognition model enumeration results for the best recognizer.
Hits 0/2000 tasks
Average description length of a program solving a task: 0.000000 nats
Recognition model no successful times to report statistics on!
Cumulative results for the full ensemble of 1 recognizers: 
Frontiers discovered bottom up: 0
Total frontiers: 1891
0 / 2000 total hit tasks
              bottom miss  bottom hit  
top miss         2000           0      
top hit            0            0      
Currently using this much memory: 330174464
Showing the top 5 programs in each frontier being sent to the compressor:
0: run
0.00	(lambda (SCAN_RUN $0))

1: look
0.00	(lambda (SCAN_LOOK $0))

2: jump
0.00	(lambda (SCAN_JUMP $0))

3: walk
0.00	(lambda (SCAN_WALK $0))

4: turn right
0.00	(lambda (SCAN_RTURN $0))

5: turn left
0.00	(lambda (SCAN_LTURN $0))

6: run after run
0.00	(lambda (SCAN_RUN (SCAN_RUN $0)))

7: run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN $0)))

8: run and run
0.00	(lambda (SCAN_RUN (SCAN_RUN $0)))

9: walk and run
0.00	(lambda (SCAN_WALK (SCAN_RUN $0)))

10: run and walk
0.00	(lambda (SCAN_RUN (SCAN_WALK $0)))

11: run and jump
0.00	(lambda (SCAN_RUN (SCAN_JUMP $0)))

12: jump and run
0.00	(lambda (SCAN_JUMP (SCAN_RUN $0)))

13: run after jump
0.00	(lambda (SCAN_JUMP (SCAN_RUN $0)))

14: look and run
0.00	(lambda (SCAN_LOOK (SCAN_RUN $0)))

15: run after look
0.00	(lambda (SCAN_LOOK (SCAN_RUN $0)))

16: run after walk
0.00	(lambda (SCAN_WALK (SCAN_RUN $0)))

17: walk after run
0.00	(lambda (SCAN_RUN (SCAN_WALK $0)))

18: run and look
0.00	(lambda (SCAN_RUN (SCAN_LOOK $0)))

19: jump after run
0.00	(lambda (SCAN_RUN (SCAN_JUMP $0)))

20: look after run
0.00	(lambda (SCAN_RUN (SCAN_LOOK $0)))

21: turn right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN $0)))

22: look after jump
0.00	(lambda (SCAN_JUMP (SCAN_LOOK $0)))

23: run after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN $0)))

24: walk after look
0.00	(lambda (SCAN_LOOK (SCAN_WALK $0)))

25: jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP $0)))

26: walk after jump
0.00	(lambda (SCAN_JUMP (SCAN_WALK $0)))

27: walk and jump
0.00	(lambda (SCAN_WALK (SCAN_JUMP $0)))

28: look after look
0.00	(lambda (SCAN_LOOK (SCAN_LOOK $0)))

29: run and turn left
0.00	(lambda (SCAN_RUN (SCAN_LTURN $0)))

30: jump after walk
0.00	(lambda (SCAN_WALK (SCAN_JUMP $0)))

31: jump after look
0.00	(lambda (SCAN_LOOK (SCAN_JUMP $0)))

32: turn right and run
0.00	(lambda (SCAN_RTURN (SCAN_RUN $0)))

33: jump after jump
0.00	(lambda (SCAN_JUMP (SCAN_JUMP $0)))

34: walk after walk
0.00	(lambda (SCAN_WALK (SCAN_WALK $0)))

35: run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN $0)))

36: look after walk
0.00	(lambda (SCAN_WALK (SCAN_LOOK $0)))

37: jump and jump
0.00	(lambda (SCAN_JUMP (SCAN_JUMP $0)))

38: turn left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN $0)))

39: look and jump
0.00	(lambda (SCAN_LOOK (SCAN_JUMP $0)))

40: walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK $0)))

41: run and turn right
0.00	(lambda (SCAN_RUN (SCAN_RTURN $0)))

42: turn left and run
0.00	(lambda (SCAN_LTURN (SCAN_RUN $0)))

43: look and walk
0.00	(lambda (SCAN_LOOK (SCAN_WALK $0)))

44: look and look
0.00	(lambda (SCAN_LOOK (SCAN_LOOK $0)))

45: run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN $0)))

46: jump and look
0.00	(lambda (SCAN_JUMP (SCAN_LOOK $0)))

47: jump and walk
0.00	(lambda (SCAN_JUMP (SCAN_WALK $0)))

48: run after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN $0)))

49: look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK $0)))

50: walk and walk
0.00	(lambda (SCAN_WALK (SCAN_WALK $0)))

51: walk and look
0.00	(lambda (SCAN_WALK (SCAN_LOOK $0)))

52: jump and turn left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN $0)))

53: look and turn right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN $0)))

54: turn right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN $0)))

55: jump after turn left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP $0)))

56: jump and turn right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN $0)))

57: look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK $0)))

58: walk after turn left
0.00	(lambda (SCAN_LTURN (SCAN_WALK $0)))

59: look and turn left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN $0)))

60: look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK $0)))

61: turn left and walk
0.00	(lambda (SCAN_LTURN (SCAN_WALK $0)))

62: turn left and jump
0.00	(lambda (SCAN_LTURN (SCAN_JUMP $0)))

63: jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP $0)))

64: turn right and look
0.00	(lambda (SCAN_RTURN (SCAN_LOOK $0)))

65: look after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK $0)))

66: turn right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN $0)))

67: walk and turn right
0.00	(lambda (SCAN_WALK (SCAN_RTURN $0)))

68: jump after turn right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP $0)))

69: walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK $0)))

70: walk after turn right
0.00	(lambda (SCAN_RTURN (SCAN_WALK $0)))

71: walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK $0)))

72: turn right and jump
0.00	(lambda (SCAN_RTURN (SCAN_JUMP $0)))

73: turn left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN $0)))

74: turn right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN $0)))

75: turn left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN $0)))

76: turn left and look
0.00	(lambda (SCAN_LTURN (SCAN_LOOK $0)))

77: jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP $0)))

78: look after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK $0)))

79: turn left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN $0)))

80: turn right and walk
0.00	(lambda (SCAN_RTURN (SCAN_WALK $0)))

81: walk and turn left
0.00	(lambda (SCAN_WALK (SCAN_LTURN $0)))

82: turn right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN $0)))

83: run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))

84: run twice after run
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))

85: turn left after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))

86: turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))

87: run after run twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))

88: turn left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN $0)))

89: turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))

90: run twice and run
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))

91: turn right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN $0)))

92: turn right and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))

93: turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))

94: turn left and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))

95: turn left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN $0)))

96: turn right after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))

97: run and run twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))

98: turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))

99: run twice after jump
0.00	(lambda (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0))))

100: look and run twice
0.00	(lambda (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0))))

101: jump after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP $0))))

102: walk after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK $0))))

103: run twice and look
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK $0))))

104: run twice and walk
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK $0))))

105: run twice after walk
0.00	(lambda (SCAN_WALK (SCAN_RUN (SCAN_RUN $0))))

106: run twice after look
0.00	(lambda (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0))))

107: look after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK $0))))

108: walk and run twice
0.00	(lambda (SCAN_WALK (SCAN_RUN (SCAN_RUN $0))))

109: jump and run twice
0.00	(lambda (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0))))

110: run twice and jump
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP $0))))

111: run and jump twice
0.00	(lambda (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0))))

112: turn right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))

113: run right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))

114: run twice and turn right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN $0))))

115: run and run right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))

116: run after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN $0))))

117: run twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))

118: turn left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN $0))))

119: run after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN $0))))

120: walk twice and run
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN $0))))

121: run and run left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0))))

122: run twice and turn left
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN $0))))

123: look twice and run
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN $0))))

124: run and look twice
0.00	(lambda (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0))))

125: look twice after run
0.00	(lambda (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0))))

126: jump twice after run
0.00	(lambda (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0))))

127: walk twice after run
0.00	(lambda (SCAN_RUN (SCAN_WALK (SCAN_WALK $0))))

128: turn right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN $0))))

129: run right and run
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))

130: run and walk twice
0.00	(lambda (SCAN_RUN (SCAN_WALK (SCAN_WALK $0))))

131: run after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))

132: turn left and run twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))

133: run left and run
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))

134: run twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))

135: run after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))

136: run left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0))))

137: run after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN $0))))

138: jump twice and run
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN $0))))

139: run and look right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0))))

140: walk after walk twice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))

141: walk twice and jump
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP $0))))

142: look twice and look
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))

143: walk right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0))))

144: jump right and run
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN $0))))

145: run after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN $0))))

146: jump left and run
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN $0))))

147: look twice and jump
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP $0))))

148: look after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK $0))))

149: run after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RUN $0))))

150: walk twice after jump
0.00	(lambda (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0))))

151: run left and look
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LOOK $0))))

152: jump and jump twice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))

153: run left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_RUN $0))))

154: walk twice after walk
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))

155: walk right and run
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN $0))))

156: jump twice after jump
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))

157: jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))

158: jump twice and walk
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK $0))))

159: run right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0))))

160: look right and run
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RUN $0))))

161: run and walk right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0))))

162: run and walk left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_WALK $0))))

163: jump after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP $0))))

164: jump and run left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0))))

165: walk after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK $0))))

166: run left and jump
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP $0))))

167: jump and walk twice
0.00	(lambda (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0))))

168: jump after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP $0))))

169: look after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LOOK $0))))

170: look twice after look
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))

171: run right and jump
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP $0))))

172: run right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0))))

173: jump after jump twice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))

174: walk after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK $0))))

175: run left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_RUN $0))))

176: walk and run left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_RUN $0))))

177: jump twice after walk
0.00	(lambda (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0))))

178: look twice after jump
0.00	(lambda (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0))))

179: look and look twice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))

180: walk after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK $0))))

181: run after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RUN $0))))

182: walk left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_WALK $0))))

183: look and run left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_RUN $0))))

184: walk left and run
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RUN $0))))

185: look twice after walk
0.00	(lambda (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0))))

186: jump and run right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0))))

187: look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))

188: look left and run
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RUN $0))))

189: jump left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0))))

190: look and walk twice
0.00	(lambda (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0))))

191: jump after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP $0))))

192: jump twice after look
0.00	(lambda (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0))))

193: look twice and walk
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK $0))))

194: look after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LOOK $0))))

195: walk and look twice
0.00	(lambda (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0))))

196: walk and walk twice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))

197: look and jump twice
0.00	(lambda (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0))))

198: jump and look twice
0.00	(lambda (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0))))

199: walk twice and look
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK $0))))

200: run and look left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LOOK $0))))

201: jump after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP $0))))

202: jump twice and jump
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))

203: run after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN $0))))

204: walk twice after look
0.00	(lambda (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0))))

205: walk after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_WALK $0))))

206: look right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0))))

207: run left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0))))

208: run and jump right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0))))

209: walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))

210: run left and walk
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_WALK $0))))

211: jump twice and look
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK $0))))

212: look left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LOOK $0))))

213: look and run right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0))))

214: jump right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0))))

215: run after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RUN $0))))

216: run right and walk
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK $0))))

217: walk and jump twice
0.00	(lambda (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0))))

218: run right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0))))

219: walk twice and walk
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))

220: look after look twice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))

221: run and jump left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0))))

222: run right and look
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LOOK $0))))

223: look after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK $0))))

224: walk and run right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0))))

225: run after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN $0))))

226: jump left and walk
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK $0))))

227: look right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0))))

228: run and turn opposite left
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

229: walk and jump left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0))))

230: run left after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

231: run right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RUN $0))))

232: jump left and jump
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))

233: turn opposite right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

234: look after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))

235: turn right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN $0))))

236: look after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LOOK $0))))

237: look left and jump
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP $0))))

238: look and look left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))

239: run right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LTURN $0))))

240: jump right and jump
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))

241: look after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK $0))))

242: walk after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK $0))))

243: jump twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))

244: jump and jump right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))

245: look after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK $0))))

246: look right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0))))

247: turn right and jump twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))

248: look left and look
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))

249: jump after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))

250: turn opposite left and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

251: turn left twice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

252: turn right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN $0))))

253: run left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RTURN $0))))

254: walk and walk left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))

255: jump after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP $0))))

256: jump and look left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0))))

257: run twice after run twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

258: look right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0))))

259: turn left after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LTURN $0))))

260: run right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))

261: look and walk left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0))))

262: turn right twice and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

263: walk right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))

264: look left and walk
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK $0))))

265: turn right and walk twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))

266: walk left and walk
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))

267: turn left and run right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RUN $0))))

268: run thrice and run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

269: run twice and run twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

270: turn left twice and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

271: walk left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0))))

272: turn right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))

273: turn left after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))

274: turn right twice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

275: run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

276: jump after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP $0))))

277: jump twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))

278: jump after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP $0))))

279: run after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

280: walk after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))

281: walk twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))

282: look and look right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0))))

283: run after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

284: look and walk right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0))))

285: look right and walk
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_WALK $0))))

286: jump left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0))))

287: jump left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0))))

288: turn left and walk twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))

289: look twice and turn left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN $0))))

290: jump after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))

291: walk and walk right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))

292: run and turn right twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

293: run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

294: jump left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0))))

295: walk left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))

296: look left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))

297: run and turn opposite right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

298: turn opposite right after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

299: look twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))

300: turn right after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RTURN $0))))

301: run right after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

302: look after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))

303: walk and look left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0))))

304: look and jump left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0))))

305: look right and jump
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP $0))))

306: run after run thrice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

307: look right and look
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))

308: look left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0))))

309: turn left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))

310: turn right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN $0))))

311: run and run thrice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

312: turn left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN $0))))

313: turn left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN $0))))

314: turn right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))

315: walk right and look
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LOOK $0))))

316: walk left and jump
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP $0))))

317: walk twice and turn right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN $0))))

318: jump right and walk
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_WALK $0))))

319: jump and jump left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0))))

320: jump right and look
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK $0))))

321: jump and walk right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0))))

322: walk left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0))))

323: walk twice and turn left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN $0))))

324: jump right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0))))

325: run and turn left twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

326: turn opposite left after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

327: jump and look right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0))))

328: walk left and look
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK $0))))

329: jump and walk left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0))))

330: walk twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))

331: walk after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))

332: jump right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0))))

333: walk right and jump
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_JUMP $0))))

334: walk right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0))))

335: walk right and walk
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))

336: run left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_RUN $0))))

337: run left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))

338: jump twice and turn left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN $0))))

339: walk after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_WALK $0))))

340: jump left and look
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK $0))))

341: turn left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN $0))))

342: look twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))

343: look and jump right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0))))

344: look left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0))))

345: walk right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0))))

346: turn right and run right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

347: run thrice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

348: run after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

349: walk and look right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0))))

350: look twice and turn right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN $0))))

351: walk after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_WALK $0))))

352: jump right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))

353: turn left and run left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

354: look after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK $0))))

355: walk after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK $0))))

356: jump after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_JUMP $0))))

357: turn left and look twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))

358: run after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

359: turn right and run left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_RUN $0))))

360: walk and jump right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0))))

361: jump twice and turn right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN $0))))

362: turn left and jump left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

363: turn right and jump right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

364: jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

365: turn left and walk right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0))))

366: run thrice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

367: turn opposite left and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

368: look left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN $0))))

369: jump and turn opposite left
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

370: jump after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

371: jump right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN $0))))

372: turn opposite left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

373: run thrice and look
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LOOK $0)))

374: walk and turn opposite left
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

375: jump left after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

376: walk right after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

377: look left after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

378: turn right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN $0))))

379: turn right twice and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

380: walk and turn right twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

381: turn opposite right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

382: turn left twice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

383: look and run thrice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

384: jump after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

385: walk after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

386: look right after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

387: jump right after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

388: walk and turn opposite right
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

389: walk left after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

390: turn opposite left after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

391: walk after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

392: look right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN $0))))

393: turn left and jump right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_JUMP $0))))

394: turn right and walk left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0))))

395: turn left after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN $0))))

396: turn right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN $0))))

397: turn opposite right and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

398: turn right after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN $0))))

399: jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

400: turn left after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN $0))))

401: turn left and walk left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

402: turn left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN $0))))

403: jump after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

404: turn opposite left after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

405: turn left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN $0))))

406: jump and turn left twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

407: jump left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN $0))))

408: walk right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN $0))))

409: turn opposite left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

410: look after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

411: walk left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0))))

412: turn opposite left and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

413: jump left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0))))

414: turn right twice and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

415: look and turn opposite right
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

416: look right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0))))

417: turn right twice and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

418: look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

419: walk after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

420: jump after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

421: look and turn left twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

422: look after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

423: turn right after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN $0))))

424: turn right twice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

425: turn right twice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

426: run thrice and walk
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_WALK $0)))

427: jump and turn opposite right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

428: look left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN $0))))

429: turn right and look right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

430: turn left twice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

431: jump and run thrice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

432: jump right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN $0))))

433: run thrice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

434: jump after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP $0)))

435: jump and turn right twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

436: turn right after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN $0))))

437: turn left after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN $0))))

438: turn right twice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

439: run thrice and jump
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP $0)))

440: walk after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_WALK $0)))

441: look right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN $0))))

442: jump left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN $0))))

443: look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

444: turn left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN $0))))

445: walk left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN $0))))

446: walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

447: look after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LOOK $0)))

448: look and turn right twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

449: turn right and look left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0))))

450: turn opposite right and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

451: look after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

452: turn opposite right after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

453: turn left twice and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

454: look left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0))))

455: turn opposite right after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

456: walk after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

457: look after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

458: walk left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN $0))))

459: turn left and look left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

460: look and turn opposite left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

461: turn opposite right after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

462: turn right after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN $0))))

463: turn right and jump left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0))))

464: turn left twice and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

465: turn right and walk right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

466: turn left twice and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

467: walk and turn left twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

468: jump right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_JUMP $0))))

469: walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

470: walk and run thrice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

471: turn left and look right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0))))

472: walk right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN $0))))

473: run thrice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

474: walk right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0))))

475: turn left twice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

476: jump twice and run twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

477: turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

478: look twice and run twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))))

479: turn left and turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

480: turn left and turn opposite right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

481: run right and run twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

482: turn right and turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

483: run thrice and turn left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN $0)))

484: turn right after turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

485: turn right twice and turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

486: run twice and walk twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

487: turn left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))

488: run thrice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

489: turn left and turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

490: run twice after run right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

491: turn left twice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

492: turn right and turn left twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

493: turn left after turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

494: turn left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN $0)))

495: run twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

496: turn right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN $0)))

497: walk twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

498: turn opposite right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))

499: turn right and run thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

500: turn right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))

501: turn right twice and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))

502: run left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

503: walk twice and run twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

504: run twice and run right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

505: turn left twice and turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

506: turn left and run thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

507: run thrice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

508: turn opposite right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

509: turn opposite left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))

510: turn right after turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

511: run twice and jump twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

512: turn left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))

513: turn opposite left after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

514: run twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

515: look twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))))

516: run left and run twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

517: jump twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

518: run twice after run left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

519: turn right and turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

520: turn left after turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

521: turn right twice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

522: turn opposite right and turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

523: turn right twice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

524: turn left twice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

525: turn opposite left and turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

526: turn left twice and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))

527: run right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

528: run twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))))

529: run thrice and turn right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN $0)))

530: turn opposite left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

531: run twice and look twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))))

532: run twice and run left
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

533: turn left and turn right twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

534: turn right and turn opposite left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

535: turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

536: turn opposite right after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

537: turn right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))

538: run twice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

539: run twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

540: run twice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

541: jump right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0)))))

542: jump thrice and run
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RUN $0)))

543: run twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

544: run and look thrice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

545: run twice and walk right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0)))))

546: jump left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0)))))

547: run and jump thrice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

548: run after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RUN $0)))

549: run twice and jump left
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0)))))

550: look thrice and run
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RUN $0)))

551: walk thrice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

552: look right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))))

553: run twice and look right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0)))))

554: jump left and run twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

555: walk right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

556: jump right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

557: run after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RUN $0)))

559: walk thrice and run
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RUN $0)))

561: run twice and jump right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0)))))

564: look thrice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

565: walk right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0)))))

567: run and walk thrice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

568: jump thrice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

569: walk left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_WALK $0)))))

573: run after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RUN $0)))

574: look twice and run right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0)))))

575: jump after jump thrice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

576: walk thrice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

577: walk after walk thrice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

578: run twice after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

579: jump thrice and jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

581: run left after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

582: run right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

583: run twice and turn right twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

584: jump twice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

585: walk twice after walk twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

586: jump and walk thrice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

587: look twice and look twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

588: run twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

589: look and look thrice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

590: run twice and turn opposite left
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

592: run thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

593: walk twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

594: walk thrice and walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

595: run and run opposite left
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

596: run thrice and run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

598: look twice and jump twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

599: jump twice after jump twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

600: run twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

601: jump after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_JUMP $0)))

602: walk twice and look twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

604: run right twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

605: walk thrice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

608: walk after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_WALK $0)))

609: jump thrice and look
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LOOK $0)))

610: jump thrice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

611: look after look thrice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

612: look after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LOOK $0)))

613: look thrice and walk
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_WALK $0)))

614: walk twice and walk twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

615: walk thrice and jump
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_JUMP $0)))

616: look and jump thrice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

617: run and run opposite right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

618: walk twice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

619: walk thrice and look
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LOOK $0)))

620: turn opposite right and run twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

622: walk twice and run right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0)))))

623: run twice and turn opposite right
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

625: look thrice and look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

626: look and walk thrice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

627: jump thrice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

628: jump thrice and walk
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_WALK $0)))

629: jump twice and run right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0)))))

630: jump and jump thrice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

631: jump twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

632: run left and run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

633: run twice and run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

634: jump and look thrice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

635: turn opposite left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

636: run opposite right after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

637: run twice and turn left twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

638: run right and walk twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

639: look twice after look twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

640: jump twice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

641: run right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0)))))

642: run left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0)))))

643: look thrice and jump
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_JUMP $0)))

644: jump after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_JUMP $0)))

645: run opposite left and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

646: walk twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))))

647: run left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_RUN $0)))))

648: run after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

649: walk thrice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

651: turn right twice and run twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

652: walk twice and jump twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))))

653: look twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

654: look thrice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

655: jump twice and walk twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))))

656: look twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

657: turn opposite right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

659: walk and look thrice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

660: jump twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))))

661: look twice and walk twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

662: jump twice and run left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0)))))

663: turn left twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

664: walk and walk thrice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

665: look after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LOOK $0)))

666: run right and run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

667: run after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

668: look thrice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

670: walk twice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

671: jump thrice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

672: jump twice and jump twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

673: run left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

674: run right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0)))))

675: look thrice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

677: run opposite left after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

678: jump twice and look twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

679: run twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

680: run opposite right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

681: run twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

682: turn left twice and run twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

683: run right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))))

684: walk and jump thrice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

685: turn opposite left and run twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

686: turn right twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

687: run left twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

688: run right and jump twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

689: walk after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_WALK $0)))

690: look opposite left after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

691: walk right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

693: walk thrice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

694: look opposite right after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

695: walk twice and jump left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0)))))

697: jump opposite right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_RUN $0))))

698: look left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

700: look twice and jump left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0)))))

701: walk opposite right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_RUN $0))))

702: look and run opposite right
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

703: look right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0)))))

704: look twice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

705: run opposite left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

706: run right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0)))))

708: run opposite left and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_JUMP $0))))

710: walk twice and look left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))))

711: walk twice and walk right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

712: walk left and walk twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

713: turn left and walk thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

714: look right and jump twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

715: jump twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))))

716: look and run opposite left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

717: jump right and jump twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

718: look twice after look left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

719: look thrice and turn right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN $0)))

720: run opposite right after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

721: jump left and walk twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))))

722: look left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))))

723: run and jump opposite left
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

725: run left and jump left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0)))))

727: turn left and look thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

728: walk twice and look right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0)))))

729: run opposite right and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_LOOK $0))))

731: turn right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN $0)))

732: look opposite right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_RUN $0))))

733: jump left and look twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

734: jump left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

735: run after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_RUN $0))))

737: jump twice and jump left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

739: walk left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0)))))

740: jump thrice and turn left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN $0)))

743: jump thrice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

744: look twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

749: jump twice after jump left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

751: run and look opposite right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

752: walk twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))))

754: walk thrice and turn right
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN $0)))

755: run and look opposite left
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

756: jump left and jump twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

758: jump right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0)))))

761: look left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

762: look right and run right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0)))))

764: walk left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))))

765: turn right and jump thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

767: run right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0)))))

768: jump twice and jump right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

769: jump twice and look right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0)))))

770: look right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

771: look thrice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

774: turn right and walk thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

776: look twice and look left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

777: look after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LOOK $0))))

778: turn left and jump thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

779: run after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_RUN $0))))

781: walk twice and walk left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

783: walk twice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

784: jump thrice and turn right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN $0)))

785: jump thrice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

787: look opposite left and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_RUN $0))))

788: jump left and run left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0)))))

790: run opposite left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LOOK $0))))

793: look left and look twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

795: walk right and walk twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

801: look twice and walk left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))))

802: jump twice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

803: run right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0)))))

806: walk and run opposite right
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

808: look twice after look right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

811: walk thrice and turn left
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN $0)))

812: look twice and jump right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0)))))

813: turn right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN $0)))

814: walk right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0)))))

817: turn left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN $0)))

818: look twice and look right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

819: walk twice after walk left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

821: jump right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

822: turn right and look thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

823: look right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0)))))

824: jump twice and walk left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0)))))

825: run and walk opposite right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

829: turn left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN $0)))

831: jump right and run right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0)))))

833: look left and walk twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

835: walk right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

836: run opposite right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_JUMP $0))))

838: jump left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0)))))

839: run opposite right and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_WALK $0))))

840: run and jump opposite right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

843: look right and look twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

845: look thrice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

848: look right and walk twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

850: look twice and walk right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0)))))

852: walk twice after walk right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

854: look thrice and turn left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN $0)))

858: jump and run opposite right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

859: look after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_LOOK $0))))

861: turn left after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN $0)))

865: jump right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

866: jump opposite left and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_RUN $0))))

868: run right and look right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0)))))

870: jump and run opposite left
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

871: walk left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))))

872: turn right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN $0)))

873: walk left and look twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

874: jump twice and look left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0)))))

877: jump twice after jump right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

880: walk thrice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

881: walk left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

882: turn right twice and run right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

883: turn opposite left and jump twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

884: run opposite right after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

885: look after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

886: look and look opposite left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

887: walk right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

888: jump opposite right and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_LOOK $0))))

889: turn right and run opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

890: run left after turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

892: jump and jump opposite left
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

893: run and turn right thrice
0.00	(lambda (SCAN_RUN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

894: jump after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_JUMP $0))))

895: jump opposite right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

896: jump and walk opposite right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

897: walk twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

898: walk after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_WALK $0))))

900: turn opposite right and look twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

902: jump opposite right and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_WALK $0))))

903: walk twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

905: walk right and walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

906: turn left twice and look twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

907: walk left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

908: walk left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0)))))

909: walk opposite right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_JUMP $0))))

911: run after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

913: jump twice and turn opposite right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

915: jump right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

917: look right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0)))))

920: walk opposite left and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

921: walk left and look left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))))

922: jump right after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

924: look twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

925: look opposite left and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_WALK $0))))

926: walk after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_WALK $0))))

927: jump opposite left after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

928: walk opposite right and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

930: look and look opposite right
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

932: walk right twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

933: jump twice and turn right twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

934: run thrice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

935: turn right thrice after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

936: walk opposite left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_LOOK $0))))

937: turn right twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

938: jump right and walk right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0)))))

939: jump right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0)))))

940: walk and jump opposite right
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

941: run thrice and run left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (SCAN_RUN $0))))

942: run left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

943: jump left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

944: turn opposite left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

946: turn left twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

947: look opposite right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_JUMP $0))))

948: jump opposite right after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

949: walk opposite left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

951: run thrice and jump twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP (SCAN_JUMP $0))))

952: look and jump opposite left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

953: run opposite left after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

954: look right twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

955: look left and walk left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))))

956: walk right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0)))))

958: turn left twice and walk twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

959: walk right and walk left
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

960: turn opposite left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

961: look twice and turn left twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

962: walk left and walk right
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

964: look left twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

965: walk after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_WALK $0))))

966: turn opposite right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

967: turn left twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

968: jump after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

969: turn opposite right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

970: jump opposite right after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

972: look after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_LOOK $0))))

973: walk and look opposite left
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

977: turn opposite left after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

979: look right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0)))))

980: run right after turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

981: look twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

982: walk twice and turn opposite right
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

983: turn opposite right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

984: turn opposite right after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

986: run thrice and run right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (SCAN_RUN $0))))

987: turn opposite left and walk twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

988: turn opposite right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

989: look left and look right
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

990: look twice and turn opposite right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

991: jump twice and run thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

992: run thrice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

993: jump left and jump right
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

994: walk twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

995: turn opposite left after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

996: jump right after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

998: jump twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1000: look after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1001: jump and look opposite right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1002: turn left and run opposite right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

1003: jump twice and turn left twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1004: look opposite right after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1005: jump right and jump left
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

1006: turn left twice and jump twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1008: look and walk opposite left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1009: run thrice and look twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LOOK (SCAN_LOOK $0))))

1010: look twice and turn right twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1011: jump after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_JUMP $0))))

1012: run right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1013: jump right twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

1016: look and jump opposite right
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1019: look right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

1020: walk right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0)))))

1021: run left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1022: look after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_LOOK $0))))

1024: look right after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

1025: jump twice and turn opposite left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1026: run opposite left and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN $0))))

1027: run opposite left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1028: walk twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

1029: run right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1030: jump left after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

1031: jump left twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

1032: run left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_RUN $0))))

1033: walk and walk opposite left
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1034: look opposite right and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1035: turn right after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RTURN $0))))

1036: run opposite left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RTURN $0))))

1037: turn right and run opposite left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1038: run opposite right and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN $0))))

1039: jump opposite left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_LOOK $0))))

1040: turn left twice and run left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1041: turn right twice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1042: turn left after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN $0))))

1043: look right and look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

1045: turn right thrice and run
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

1046: jump left and look left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0)))))

1049: look left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

1050: turn left twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1051: turn right twice and look twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1053: look left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))))

1054: walk left and walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

1057: look after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_LOOK $0))))

1058: walk twice and run thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1059: jump twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1060: turn right twice and walk twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

1061: run left after turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1062: walk twice and turn opposite left
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1065: walk right after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0)))))

1066: walk opposite left after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1067: look twice and run thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1068: turn left thrice and run
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1069: walk and walk opposite right
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1070: look opposite left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1071: jump and look opposite left
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1072: look opposite right after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1073: run thrice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1074: turn left thrice after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1075: run thrice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1076: turn opposite right and run right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

1077: run right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (SCAN_RUN $0))))

1078: turn opposite left and look twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1079: run right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_RUN $0))))

1080: run left and run thrice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1081: look twice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LOOK (SCAN_LOOK $0))))

1082: look opposite left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1083: run left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1084: look right and look left
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

1085: run opposite right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_LTURN $0))))

1086: look twice and turn opposite left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1087: walk opposite right after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1088: walk left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))))

1089: turn left after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_LTURN $0))))

1090: jump opposite left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1091: run opposite right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

1092: jump after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_JUMP $0))))

1093: look left after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

1096: walk right and look right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0)))))

1097: look twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1098: turn left twice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1099: walk after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

1100: jump twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1101: run right and run thrice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1102: run right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1104: walk after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

1105: look opposite left and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_JUMP $0))))

1108: look left and look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

1109: jump right and look right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0)))))

1110: walk twice and turn left twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1111: jump opposite right after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1113: look left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0)))))

1114: walk left twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

1115: walk twice and turn right twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1117: turn right after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN $0))))

1118: jump left and jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

1119: jump after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_JUMP $0))))

1120: turn opposite left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1122: run left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (SCAN_RUN $0))))

1123: turn left and run opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1124: look opposite left after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1126: jump and jump opposite right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1127: turn right twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1128: turn opposite right and jump twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1129: jump twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1131: run after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1132: jump after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1134: jump left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0)))))

1135: turn opposite left and run left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1136: jump left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0)))))

1137: turn opposite right and walk twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

1138: turn opposite right and run left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_RUN $0))))

1139: walk opposite left after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1141: turn opposite left and run right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_RUN $0))))

1142: walk opposite right after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1143: turn right twice and jump twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1144: jump opposite left and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1145: jump twice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP (SCAN_JUMP $0))))

1146: run and turn left thrice
0.00	(lambda (SCAN_RUN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1148: look left and jump left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0)))))

1149: look opposite left after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1150: turn right twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1151: run thrice and walk twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_WALK (SCAN_WALK $0))))

1152: look right and walk right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0)))))

1153: jump opposite left after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1154: look twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1155: run right after turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

1156: look left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_LOOK $0))))

1158: turn opposite left and look right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_LOOK $0))))

1159: turn right thrice after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1161: turn left twice and look right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_LOOK $0))))

1162: walk opposite right and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_RTURN $0))))

1163: run twice and walk thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1164: walk left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_WALK $0))))

1165: turn left twice and jump left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1166: look right after turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1167: jump thrice and run twice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RUN (SCAN_RUN $0))))

1168: turn left and jump opposite right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1169: turn left after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_LTURN $0))))

1170: turn opposite right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1171: walk left and turn right twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1172: turn right twice and jump left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_JUMP $0))))

1173: run twice and look thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1174: look left after turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1175: jump left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1176: turn right twice and look left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_LOOK $0))))

1177: turn left twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1178: jump left after turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1179: turn opposite left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1180: walk left after turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1182: look opposite left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_RTURN $0))))

1183: look and turn right thrice
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1184: look opposite left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1185: jump right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1186: jump left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1188: look right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1189: turn right twice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1190: walk right after turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1191: look after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1192: walk left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1193: jump opposite right after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1194: look thrice and run twice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RUN (SCAN_RUN $0))))

1195: jump opposite right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_LTURN $0))))

1196: walk right and turn left twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1197: turn left after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LTURN $0))))

1198: turn opposite left after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1199: look opposite right after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1200: look opposite right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LTURN $0))))

1202: look left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_LOOK $0))))

1204: walk left after turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1206: turn left twice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1207: turn right twice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1208: turn opposite right and walk right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1210: turn right and walk opposite left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1211: turn opposite right after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1212: walk opposite right after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1213: run twice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RUN (SCAN_RUN $0))))

1214: turn left after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_LTURN $0))))

1215: look right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_LOOK $0))))

1216: turn opposite left after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1217: run twice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RUN (SCAN_RUN $0))))

1218: turn opposite right and jump left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_JUMP $0))))

1219: turn left twice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1220: turn opposite left and look left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1222: walk opposite right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_LTURN $0))))

1224: turn left after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_LTURN $0))))

1225: look left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1226: turn left thrice after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1227: turn left and look opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1228: turn left and walk opposite right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1229: jump thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1230: look left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1231: turn opposite left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1232: look right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_LOOK $0))))

1233: turn right thrice and walk
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1234: turn right twice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1235: turn right and jump opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1237: look opposite right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1238: look left and turn right twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1239: turn right and walk opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1242: jump left after turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1243: turn opposite left and jump right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_JUMP $0))))

1244: turn right twice and look right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1245: jump opposite right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1246: turn left thrice after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1247: turn opposite right after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1248: run twice and jump thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1249: turn opposite left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1251: turn left twice and walk left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1252: turn opposite right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1253: walk right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_WALK $0))))

1254: turn left twice and walk right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_WALK $0))))

1255: turn left twice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1256: walk opposite left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_RTURN $0))))

1257: turn opposite right after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1258: turn opposite left and walk right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_WALK $0))))

1259: turn right thrice and look
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1260: turn right twice and walk left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_WALK $0))))

1261: jump opposite left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_RTURN $0))))

1262: walk after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1263: turn left and jump opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1265: turn right thrice after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1267: look after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1268: turn right and look opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1269: turn opposite right and jump right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1270: jump opposite left and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_LTURN $0))))

1271: walk after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1272: turn right thrice and jump
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1273: look right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1275: walk and turn right thrice
0.00	(lambda (SCAN_WALK (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1276: look opposite right and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_RTURN $0))))

1277: walk opposite left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1280: look left after turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1281: turn left and walk opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1282: look opposite left after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1283: jump right after turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1285: walk opposite left after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1286: look opposite left and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LTURN $0))))

1287: turn right thrice after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1288: look right after turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1289: walk and turn left thrice
0.00	(lambda (SCAN_WALK (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1290: look right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1291: turn opposite right and look left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_LOOK $0))))

1293: turn right after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_RTURN $0))))

1294: look right and turn left twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1295: jump left and turn right twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1296: walk left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1299: jump after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1300: jump right after turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1301: walk left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_WALK $0))))

1303: jump right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_JUMP $0))))

1304: jump and turn right thrice
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1305: turn left after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_LTURN $0))))

1306: turn right after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_RTURN $0))))

1307: jump opposite left after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1308: turn left thrice and look
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1309: jump right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1310: turn right after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_RTURN $0))))

1311: turn opposite left after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1312: turn opposite left and jump left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1313: turn right twice and walk right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1314: turn right and jump opposite left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1315: walk right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1316: jump opposite left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1317: turn left twice and look left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1318: walk left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1319: walk opposite left and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_LTURN $0))))

1320: walk right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1321: turn right twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1322: turn left after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LTURN $0))))

1323: walk right after turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1324: look left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1325: turn opposite right and walk left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_WALK $0))))

1326: walk thrice and run twice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RUN (SCAN_RUN $0))))

1327: look and turn left thrice
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1328: turn left thrice and walk
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1329: turn left and look opposite right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1330: jump left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_JUMP $0))))

1331: turn right after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_RTURN $0))))

1333: walk opposite right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1334: jump left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1336: jump right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1337: turn left thrice and jump
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1338: turn left thrice after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1340: jump and turn left thrice
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1341: turn right after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_RTURN $0))))

1342: turn right twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1343: look thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1344: turn right after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_RTURN $0))))

1345: turn right and look opposite left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1346: turn opposite right after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1347: jump after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1348: walk right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1349: jump opposite right and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_RTURN $0))))

1350: turn right twice and jump right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1351: walk right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_WALK $0))))

1353: jump left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_JUMP $0))))

1354: turn opposite left and walk left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1355: turn right twice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1356: turn left twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1359: turn opposite right and look right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1360: turn right twice and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1361: turn opposite left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1362: turn right after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

1363: run thrice and turn right twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1364: turn opposite left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1365: run opposite left and run twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1366: turn right twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1367: turn right twice and run thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1368: run twice and run opposite right
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))))

1369: turn left after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

1370: turn left twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1371: turn left thrice and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1372: turn opposite right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1373: turn left twice and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1374: turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1375: turn opposite right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1376: run thrice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1377: turn opposite left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1378: turn opposite right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1380: run opposite left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))))

1381: turn right and turn left thrice
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1382: turn opposite right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1384: turn opposite left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1385: turn left twice and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1386: turn left twice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1387: turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1388: turn right twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1389: turn opposite right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1390: turn right twice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1391: turn right thrice and turn left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

1392: turn opposite left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1393: turn opposite left and run thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1395: run twice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1396: turn opposite left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1397: turn right twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1398: turn opposite right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1399: turn opposite right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1400: run opposite right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))))

1401: run thrice and turn opposite left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1402: run twice and run opposite left
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))))

1403: turn opposite right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1404: run opposite right and run twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1405: turn left thrice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1407: turn right thrice and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1408: turn opposite left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1411: run thrice and run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1412: turn left twice and run thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1413: turn left thrice and turn right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

1415: turn opposite right and run thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1416: turn right twice and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1417: turn right twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1418: turn opposite right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1419: run thrice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1420: turn right and turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1421: turn opposite left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1422: turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1423: turn left twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1424: turn left twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1426: run thrice and turn left twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1427: run twice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1428: turn right after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1429: turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1430: turn left twice and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1431: turn right twice and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1432: turn right thrice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1433: run thrice and turn opposite right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1434: turn left twice and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1435: turn left and turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1436: turn left thrice after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1437: run thrice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1438: run thrice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1439: turn left twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1440: turn right twice and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1441: turn right thrice after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1442: turn left and turn right thrice
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1443: run thrice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1444: turn left after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1445: turn opposite left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1451: look thrice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1455: jump thrice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1458: look twice and look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1463: look thrice and look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1469: walk thrice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1471: walk thrice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1475: jump twice after jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1478: jump twice and jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1479: look thrice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1482: walk twice and walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1488: look thrice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1494: walk thrice and walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1510: walk twice after walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1512: look twice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LOOK (SCAN_LOOK $0))))

1522: jump twice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_JUMP (SCAN_JUMP $0))))

1530: look twice after look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1531: walk twice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_WALK (SCAN_WALK $0))))

1534: look twice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LOOK (SCAN_LOOK $0))))

1549: jump thrice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1553: jump thrice and jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1555: run opposite right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))))

1558: turn left thrice and run twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0)))))

1561: walk thrice and walk right
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN (SCAN_WALK $0))))

1562: run right twice after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

1564: turn right thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

1569: jump thrice and jump left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN (SCAN_JUMP $0))))

1573: run twice and turn left thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

1574: jump left and jump thrice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1575: run twice after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0)))))

1576: walk right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN (SCAN_WALK $0))))

1586: run right twice and turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))))

1590: walk thrice and walk left
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN (SCAN_WALK $0))))

1591: turn left thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

1594: look right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN (SCAN_LOOK $0))))

1596: run twice after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0)))))

1597: jump thrice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1603: walk thrice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1606: run right and run opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))))

1607: walk right and walk thrice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1612: turn right after run right twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))))

1614: look left and look thrice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1618: run left twice and turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))))

1626: walk left after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN (SCAN_WALK $0))))

1631: look thrice and look left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN (SCAN_LOOK $0))))

1636: turn left after run left twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))))

1642: run twice and turn right thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

1645: turn right and run right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

1648: jump right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN (SCAN_JUMP $0))))

1650: jump left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN (SCAN_JUMP $0))))

1658: run left after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

1661: walk thrice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1666: walk left and walk thrice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1676: run left twice after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

1677: look thrice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1680: turn right thrice and run twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0)))))

1682: run right after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

1684: look right and look thrice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1687: look thrice and look right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN (SCAN_LOOK $0))))

1689: jump thrice and jump right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN (SCAN_JUMP $0))))

1691: jump right and jump thrice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1692: turn left and run left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

1694: jump thrice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1698: look left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN (SCAN_LOOK $0))))

1700: look thrice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1707: run opposite right and run right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

1709: run opposite left after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))))

1716: jump thrice and run thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1718: walk twice and walk opposite left
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))))

1722: look opposite right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))))

1733: jump thrice and turn opposite right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1735: jump twice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1743: turn opposite left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1744: look after look left twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))))

1750: turn left twice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1752: jump and jump right twice
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))))

1754: jump right twice and jump
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))))

1757: walk thrice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1759: jump opposite left and jump twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1760: look thrice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1761: look twice and look opposite right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))))

1763: jump twice and jump opposite right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))))

1764: walk thrice and turn opposite left
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1769: look twice after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1771: look opposite left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))))

1779: walk twice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1780: walk thrice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1783: look thrice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1784: jump twice and jump opposite left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))))

1786: walk thrice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1790: turn left twice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1793: turn opposite right and jump thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1796: jump thrice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1803: look thrice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1806: turn opposite left and walk thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1807: look thrice and turn right twice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1812: turn right twice and look thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1818: turn opposite right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1820: jump opposite right and jump twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1829: jump thrice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1834: turn opposite left and look thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1835: jump opposite right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))))

1838: walk thrice and turn right twice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1846: turn right twice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1850: look twice and look opposite left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))))

1852: turn opposite left and jump thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1854: jump thrice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1863: run thrice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1864: look left twice after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))))

1868: look opposite left and look twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1871: turn right twice and jump thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1876: walk right twice and walk
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))))

1884: jump opposite left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))))

1885: look thrice and turn left twice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1887: walk opposite right and walk twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1891: look twice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1892: look thrice and turn opposite right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1893: jump thrice and turn right twice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1894: walk twice and walk opposite right
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))))

1898: walk thrice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1900: turn right twice and walk thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1908: walk and walk right twice
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))))

1914: walk opposite left and walk twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1919: jump thrice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1920: turn opposite right and walk thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1922: look thrice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1924: turn right twice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1931: walk opposite left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))))

1939: turn opposite right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1940: turn opposite right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1944: turn left twice and jump thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1946: walk twice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1951: look opposite right and look twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1953: look thrice and turn opposite left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1955: walk opposite right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))))

1957: walk and walk left twice
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))))

1960: jump twice after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1962: run thrice and jump thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1963: walk thrice and turn left twice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1964: jump thrice and turn left twice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1970: turn opposite left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1976: turn right twice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1978: turn opposite left after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1983: turn opposite right and look thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1989: jump thrice and turn opposite left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1993: turn left twice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1994: turn left twice and look thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1998: turn left twice and walk thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2001: walk thrice and turn opposite right
-0.10	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
-2.34	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN (SCAN_RTURN $0))))

2008: jump thrice after turn opposite left
-0.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
-2.37	(lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2019: turn left twice and run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2020: run opposite left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2026: run opposite left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2031: run opposite left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2033: run opposite right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2036: turn opposite left twice and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2038: run thrice after run opposite left
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RUN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2042: run opposite left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2048: run opposite right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2050: run and turn opposite left twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2051: turn right twice and run opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2053: run after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2057: turn opposite right and run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2063: turn opposite right after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2066: run opposite right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2072: run opposite right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2078: turn opposite right twice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2079: run opposite left and run thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RUN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2080: run opposite right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2085: turn right twice and run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2086: run thrice and run opposite left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2091: run opposite left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2097: run opposite right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2099: turn around right after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2101: turn opposite left after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2106: run after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2125: run thrice and run opposite right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2146: run opposite left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2165: turn right twice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2173: run and turn opposite right twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2176: turn opposite right and run opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2181: turn left twice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2182: run after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2185: run opposite left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2189: turn right twice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2192: run opposite left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2193: turn opposite left twice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2197: run opposite right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2198: run opposite left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2204: turn around right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2211: run and turn around right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2214: run and turn around left
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2228: run thrice after run opposite right
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RUN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2230: run right after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2240: turn opposite left and run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2242: turn left twice and run opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2244: turn around left and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2257: turn opposite left and run opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2258: turn opposite right after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2262: run left after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2265: run opposite right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2272: run after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2277: turn right thrice and run right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2281: turn around left after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2283: turn opposite right twice and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2293: turn left thrice and run left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2296: run opposite right and run thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RUN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2298: run opposite right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2299: turn left twice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2305: turn opposite left after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2312: run thrice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2313: look opposite right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2314: turn around right and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2315: jump opposite right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2317: look and turn opposite left twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2318: walk right after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2319: walk opposite right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2320: turn opposite right twice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2321: turn opposite right twice and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2322: turn left twice and look opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2323: walk opposite left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2324: walk opposite left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2325: jump right after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2326: turn around left after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2327: turn left twice and jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2328: turn opposite left and jump opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2329: turn around left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2330: turn opposite left after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2331: turn opposite left after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2333: walk opposite right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2334: walk left after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2335: jump opposite right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2336: turn right thrice and look right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2337: turn opposite left after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2338: run thrice and walk opposite left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2340: turn right twice and walk opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2341: turn left twice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2342: walk opposite left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2343: look opposite left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2344: look and turn around right
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2345: turn left twice after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2346: turn opposite right and look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2347: jump after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2348: jump opposite right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2349: turn opposite right and walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2350: jump opposite right and run thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2351: walk opposite right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2352: jump opposite right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2354: turn around right after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2355: jump opposite right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2356: turn opposite right after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2358: jump opposite right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2359: turn left twice and walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2361: walk opposite right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2362: jump opposite left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2363: walk opposite left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2364: look opposite left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2366: walk opposite left and run thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2368: look opposite right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2369: turn around left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2370: walk opposite left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2371: walk opposite left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2372: jump opposite left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2373: run thrice and jump opposite right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2374: turn around left and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2375: turn left twice and walk opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2376: turn right twice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2377: turn left twice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2378: jump opposite left and run thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2379: jump opposite right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2380: jump opposite left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2381: turn right twice after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2382: turn opposite left and look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2383: turn right twice after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2384: look and turn opposite right twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2386: turn opposite right and jump opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2388: look opposite left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2389: turn opposite left twice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2390: turn around right after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2391: look opposite left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2392: turn opposite left after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2393: walk opposite right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2394: walk and turn opposite left twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2395: look opposite right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2396: look opposite left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2397: walk opposite left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2398: turn opposite left twice and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2399: turn opposite left after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2400: walk opposite left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2401: turn opposite left twice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2402: look opposite left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2405: turn right twice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2407: walk opposite right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2408: turn right twice and walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2409: jump and turn around left
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2410: look opposite right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2411: jump opposite left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2412: turn opposite right after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2413: look after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2414: turn opposite right twice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2415: run thrice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2416: walk after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2417: jump after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2418: jump and turn around right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2419: turn right twice and jump opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2420: walk and turn opposite right twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2421: look opposite left and run thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2422: turn left twice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2423: jump after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2424: turn opposite right after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2425: turn opposite left twice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2428: look opposite right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2430: turn opposite left and walk opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2431: turn opposite right and walk opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2432: turn opposite right and look opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2433: turn right thrice and walk right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2434: turn opposite right after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2435: turn around right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2436: walk opposite right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2437: turn left twice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2438: turn opposite left and jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2439: turn opposite right after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2440: jump opposite left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2441: turn left twice and jump opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2442: look opposite right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2443: jump after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2444: look after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2446: look after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2447: turn left thrice and walk left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2448: walk and turn around right
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2449: look opposite right and run thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2450: run thrice and jump opposite left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2452: turn around right after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2453: look opposite left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2454: walk opposite right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2455: run thrice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2457: turn left thrice and jump left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2458: turn around right and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2459: jump and turn opposite left twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2460: run thrice and look opposite left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2461: jump opposite left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2462: turn opposite left after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2463: jump and turn opposite right twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2464: turn opposite right and jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2465: turn opposite right twice and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2466: turn left twice and look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2467: turn right thrice and jump right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2469: turn opposite left twice and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2470: turn opposite right after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2471: look opposite right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2472: walk after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2473: run thrice and look opposite right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2474: run thrice after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2475: turn opposite left and walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2476: look opposite right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2478: look opposite left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2479: turn right twice and look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2481: walk opposite right and run thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2482: walk after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2485: walk opposite left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2486: turn right twice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2487: walk after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2488: turn around left after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2489: look opposite left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2491: walk and turn around left
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2492: look left after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2493: look right after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2494: run thrice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2495: jump opposite left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2496: jump left after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2497: turn right twice and jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2498: turn opposite left twice and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2499: turn left thrice and look left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2500: look and turn around left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2501: jump opposite left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2502: turn right twice and look opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2503: turn opposite right twice and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2504: turn left twice after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2506: look opposite right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2507: turn right twice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2508: turn opposite right twice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2509: jump opposite right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2510: jump opposite left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2512: turn opposite left and look opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2513: run thrice and walk opposite right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2514: run thrice after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2517: jump opposite right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2518: turn around left and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2521: look after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2522: walk opposite right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2526: turn right thrice after turn right twice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2527: turn left thrice after turn left twice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2528: walk thrice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2529: turn around left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

2531: turn opposite right twice and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

2533: run thrice after turn right thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2535: turn around left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2536: turn right thrice after turn left twice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2539: run thrice after turn left thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2540: turn around right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2541: turn opposite right twice and turn right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2542: turn left thrice after turn opposite left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2543: turn left after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

2544: turn left after turn around left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2545: jump thrice and jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2546: look thrice and jump thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2549: look thrice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2550: look thrice and look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2551: turn opposite left after turn right thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2552: turn right and turn around left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2557: turn right and turn opposite left twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2559: turn around left and turn left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2561: turn around right after turn right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2564: turn left and turn around right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2566: turn left and turn around left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2568: turn opposite right after turn right thrice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2570: walk thrice and jump thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2571: turn left thrice and run thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2573: turn right twice and turn left thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2574: turn right after turn opposite right twice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2576: turn left and turn opposite right twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2577: turn left after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

2578: turn left thrice and turn opposite right
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2579: jump thrice and walk thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2585: jump thrice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2586: turn left thrice after run thrice
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2587: turn opposite right twice after turn right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2590: turn opposite right twice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2593: turn right and turn opposite right twice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2594: turn right thrice after turn opposite right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2595: turn right after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

2597: turn left twice and turn left thrice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2598: turn opposite right after turn left thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2600: turn opposite left twice after turn left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2601: turn right after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

2605: jump thrice and look thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2607: run thrice and turn right thrice
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2608: turn opposite left twice and turn left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2609: turn opposite left after turn left thrice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2610: turn opposite left and turn right thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2611: turn opposite right and turn right thrice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2612: walk thrice and look thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2615: turn opposite left twice and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

2617: turn left thrice after turn opposite right
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2618: turn right thrice and run thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2620: walk thrice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2621: turn around right and turn right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2623: turn right thrice after run thrice
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2624: turn right thrice and turn opposite left
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2625: turn right thrice and turn right twice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2627: turn right and turn around right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2629: turn left thrice after turn right twice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2631: turn left thrice and turn left twice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2632: turn opposite left twice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2634: turn left twice after turn right thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2635: jump thrice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2636: turn right thrice and turn opposite right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2640: turn left twice after turn left thrice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2641: turn right twice after turn left thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2642: walk thrice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2643: turn opposite right and turn left thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2644: walk thrice and walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2647: turn right thrice after turn opposite left
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2648: turn right twice and turn right thrice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2649: turn right thrice and turn left twice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2651: turn left thrice and turn right twice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2652: turn left and turn opposite left twice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2657: turn right after turn around right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2660: turn around left after turn left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2662: look thrice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2664: turn left twice and turn right thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2666: turn left thrice and turn opposite left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2667: look thrice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2670: turn right twice after turn right thrice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2673: turn around right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

2674: look thrice and walk thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2677: run thrice and turn left thrice
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2678: jump thrice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2680: turn opposite left and turn left thrice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2681: turn left after turn opposite left twice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2684: look thrice and run opposite right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2690: run opposite right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2692: run opposite left and look thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2693: run opposite left and jump thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2694: run opposite right and walk thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2695: walk thrice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2698: jump thrice and run opposite right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2699: run opposite left and walk thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2701: jump thrice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2702: run opposite right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2705: jump thrice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2710: look thrice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2711: run opposite left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2713: run opposite right and look thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2714: walk thrice and run opposite right
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2716: walk thrice and run opposite left
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2718: run opposite left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2722: look thrice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2730: jump thrice and run opposite left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2734: run opposite left after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2739: walk thrice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2741: look thrice and run opposite left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2745: run opposite right and jump thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2748: run opposite right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2755: look opposite right and walk thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2760: look opposite left and look thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LOOK $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2770: jump opposite right and look thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2776: jump opposite left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2780: jump thrice after jump opposite right
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_JUMP $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2783: walk thrice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2784: jump thrice and jump opposite right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2789: walk opposite left and jump thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2798: jump thrice after jump opposite left
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_JUMP $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2807: jump opposite left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2813: look opposite right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2814: walk opposite right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2820: look opposite right and jump thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2826: look thrice after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2827: look opposite left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2834: look thrice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2838: walk opposite left and look thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2842: look opposite left and jump thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2843: walk thrice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2848: look thrice after look opposite right
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LOOK $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2850: look thrice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2864: walk opposite right and jump thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2865: look thrice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2873: jump thrice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2881: look thrice and walk opposite left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2885: jump thrice and look opposite left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2886: look thrice and jump opposite left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2887: jump thrice and jump opposite left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2893: look opposite right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2894: look thrice and look opposite left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2898: jump opposite right and walk thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2900: look opposite left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2902: jump thrice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2909: walk thrice and look opposite right
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2914: jump thrice and walk opposite left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2917: look thrice after look opposite left
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LOOK $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2925: jump thrice after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2937: jump opposite right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2943: look thrice and jump opposite right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2944: look opposite right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2945: jump thrice and look opposite right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2946: walk opposite right and look thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2949: look opposite right and look thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LOOK $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2958: look thrice and look opposite right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2965: jump thrice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2970: jump opposite left and look thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2975: walk opposite right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2985: look thrice and walk opposite right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2986: jump opposite left and jump thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_JUMP $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2988: walk thrice and jump opposite right
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2993: jump thrice and walk opposite right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2996: walk opposite left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2999: walk opposite left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

3004: jump opposite right and jump thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_JUMP $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

3005: jump opposite right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

3010: jump opposite right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

3729: turn opposite left after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3732: turn left twice after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3733: turn around left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3734: turn around right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3735: turn right thrice and turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3736: turn opposite left and turn opposite right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3737: turn opposite left twice and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3738: turn around left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3739: turn around right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3740: turn opposite left twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3742: turn around right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3743: turn around left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3744: turn left thrice after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3745: turn opposite left after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3746: turn opposite right after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3747: turn around left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3749: turn right twice after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3750: turn right twice after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3752: turn opposite left after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3753: turn right twice and turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3755: turn opposite left twice and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3758: turn left twice and turn around right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3767: turn left twice after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3768: turn opposite right twice and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3769: turn right twice and turn around left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3770: turn around right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3771: turn opposite right twice and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3774: turn around left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3775: turn right twice and turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3777: turn around right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3780: turn opposite right twice and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3782: turn opposite left twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3784: turn opposite right twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3787: turn around left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3788: turn around left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3789: turn opposite right after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3793: turn opposite right twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3795: turn left twice after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3796: turn right twice after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3798: turn opposite right after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3800: turn left twice and turn opposite right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3802: turn left thrice and turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3804: turn left twice and turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3805: turn opposite right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3807: turn opposite right twice and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3809: turn opposite left twice and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3811: turn opposite right and turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3813: turn opposite left twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3816: turn opposite right and turn around left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3817: turn opposite left after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3820: turn around left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3821: turn opposite right twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3823: turn left twice after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3824: turn right thrice after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3825: turn opposite left and turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3826: turn opposite right and turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3828: turn right twice and turn opposite left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3831: turn opposite right after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3832: turn around right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3834: turn opposite left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3838: turn opposite right and turn opposite left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3839: turn opposite left and turn around right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3840: turn around right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3841: turn opposite left and turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3847: turn opposite left twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3848: turn opposite left twice and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3849: turn right twice after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3850: turn around right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3853: turn opposite right twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3855: turn left twice and turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

Compression message saved to: compressionMessages/2020-11-27T20:33:15.873816
Compression backend will run for most 20 iterations
Total number of candidates: 69551
Constructed version spaces and coalesced candidates in 14.4936s.
Trimmed down the beam, have only 300 best candidates (M)
Rewrote topK in 37.3398s.
Initial score: -16500.868176
 (M)New frontiers length 300 Scored candidates (M) in 17.0545s.
No improvement possible. (M) 
Completed one step of memory consolidation in 1.33996m.
completed ocaml compression in 1.33996m.
Finished consolidation.
Induced a grammar in 81.7 seconds
Grammar after iteration 3:
-1.317252	t0	$_
-2.280857	tstr -> tstr	SCAN_RUN
-2.302957	tstr -> tstr	SCAN_LOOK
-2.306689	tstr -> tstr	SCAN_JUMP
-2.342849	tstr -> tstr	SCAN_WALK
-2.402747	tstr -> tstr	SCAN_RTURN
-2.427748	tstr -> tstr	SCAN_LTURN
-2.627950	tstr -> tstr	#(lambda (SCAN_RTURN (SCAN_RTURN $0)))
-2.643535	tstr -> tstr	#(lambda (SCAN_LTURN (SCAN_LTURN $0)))
-3.844023	tstr -> tstr	#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))
-3.925516	tstr -> tstr	#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))
-3.934995	tstr -> tstr	#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))
-3.983785	tstr -> tstr	#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))
Currently using this much memory: 340217856
ecIterator count 2
Currently using this much memory: 340217856
Currently using this much memory: 340217856
Using a waking task batch of size: 2000
Disabling parallelism on the Python side because we only have one job.
If you are using ocaml, there could still be parallelism.
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 0. |finished| = 1.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.559886.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 0. |finished| = 0.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.707799.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 0. |finished| = 8.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 4.500000 <= MDL < 6.000000. Timeout 3.131087.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 0. |finished| = 4.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 6.000000 <= MDL < 7.500000. Timeout 2.581810.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 205. |finished| = 11.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 7.500000 <= MDL < 9.000000. Timeout 1.449042.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 210. |finished| = 0.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 9.000000 <= MDL < 10.500000. Timeout 0.570117.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 210. |finished| = 0.)
We enumerated this many programs, for each task:
	
Generative model enumeration results:
Hits 0/2000 tasks
Average description length of a program solving a task: 0.000000 nats
Generative model no successful times to report statistics on!
Currently using this much memory: 344854528
Frontiers discovered top down: 0
Total frontiers: 1891
Using an ensemble size of 1. Note that we will only store and test on the best recognition model.
Currently using this much memory: 344854528
(ID=0): Training a recognition model from 1891 frontiers, 0% Helmholtz, feature extractor ScanFeatures.
(ID=0): Got 0 Helmholtz frontiers - random Helmholtz training? : True
(ID=0): Contextual? False
(ID=0): Bias optimal? False
(ID=0): Aux loss? False (n.b. we train a 'auxiliary' classifier anyway - this controls if gradients propagate back to the future extractor)
(ID=0):  Epoch 1 Loss 6.5183639789875825
(ID=0):  	vs MDL (w/o neural net) 8.831451435937103
(ID=0):  	1891 cumulative gradient steps. 474.240856 steps/sec
(ID=0):  	12-way auxiliary classification loss 0.4405943332904864
(ID=0):   Trained recognition model in 64.17303514480591 seconds
Currently using this much memory: 344203264
Trained an ensemble of 1 recognition models, now enumerating.
Enumerating from recognizer 0 of 1
Evaluated recognition model in 0.9 seconds
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.842849.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.749142.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.660098.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.571595.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.484035.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.398061.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.218732.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.319602.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.140647.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.056637.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.880422.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.981590.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.804079.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.719948.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.636070.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.551264.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.466790.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.381947.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.296205.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.210850.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223106.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222393.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220639.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218936.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216165.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217591.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216367.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216186.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216115.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215965.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215865.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216067.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215906.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216230.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215796.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216020.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216934.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221094.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219245.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219554.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.224220.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226441.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.228974.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231745.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.234573.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.232530.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.233164.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231721.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.228720.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226476.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223840.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220755.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219526.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220059.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219666.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220115.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221226.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221794.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221679.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222346.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221867.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221418.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221934.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221053.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221257.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221062.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221331.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226002.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226151.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.227618.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231161.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.230211.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231204.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231058.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.228627.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225376.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222402.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220279.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219528.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219202.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218118.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218142.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218223.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217999.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217496.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218183.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217620.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222503.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220436.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219466.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219439.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218788.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218826.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222717.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225349.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.227603.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229993.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.228463.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.228577.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229174.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226298.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223376.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220416.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218754.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217317.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217914.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217919.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217966.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219347.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216990.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216857.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216104.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216134.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216649.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216463.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215679.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215133.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213481.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211839.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216110.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219266.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222339.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.224293.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223597.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223506.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223290.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217563.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213248.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214283.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.210109.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.209091.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208341.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208301.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208363.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.207321.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.207120.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208590.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213442.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211810.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211733.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211711.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211888.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.212117.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211671.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211420.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216621.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223403.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225737.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.228475.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.230683.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229172.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.227078.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225907.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226954.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222888.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220681.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217744.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217534.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217209.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216712.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216741.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216679.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217233.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216921.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215158.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215183.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214658.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214381.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211386.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.210731.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213767.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.212296.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217045.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219725.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220096.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222223.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220648.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221251.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219998.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217565.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214932.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211423.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.209358.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.210728.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.207933.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.209043.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208879.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213466.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211323.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211677.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211198.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211488.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.210927.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214768.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213386.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.212620.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.212315.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211922.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211251.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214234.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217098.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218171.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220053.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219073.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218993.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216076.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213438.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211389.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.209027.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208309.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.207812.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.207461.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.207654.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.207879.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208368.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208908.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.207743.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213313.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211786.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211542.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213211.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211712.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.209977.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.209614.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213589.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216561.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219081.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220300.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222863.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221031.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218401.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215524.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.212235.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.209399.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.201983.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.200349.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.200148.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.200701.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.201793.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.204422.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.204384.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208416.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.207044.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.205658.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.205499.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.206015.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.209746.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.207564.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208070.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208670.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215204.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215809.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.216103.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220585.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226729.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225348.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223514.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220756.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218052.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215319.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.212452.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.210816.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213752.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.212027.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211824.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211692.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.211421.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.210355.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.210170.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.209749.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214612.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217112.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215421.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214956.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214810.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218372.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221787.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223230.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.186101.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.134619.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.084141.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.039199.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.987159.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.934515.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.882540.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.870806.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.871272.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.870840.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.870725.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.869637.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.869896.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.869296.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.869298.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.869338.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.869141.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.869395.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.869408.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.898930.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.953929.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.007805.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.051860.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.104047.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.156679.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208563.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225476.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225798.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220167.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217959.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215774.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214851.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214743.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214323.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213495.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.174560.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.120662.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.071865.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.066679.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.066050.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.065368.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.006282.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.952940.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.901104.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.849780.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.849432.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.853928.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.857322.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.860667.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.861453.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.859468.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.854009.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.851919.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.850737.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.875937.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.928985.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.982306.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.987191.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.986495.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.986396.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.039710.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.093318.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.147545.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.197758.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.201297.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.200716.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.199862.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.199425.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.200043.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.206475.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.209943.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.212424.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214525.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217196.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218642.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217260.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217930.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214688.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.212090.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.209288.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.206813.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.204634.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.202127.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.206052.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.201463.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.196398.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.193401.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.192232.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.190145.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.188288.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.187290.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.186419.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.184315.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.182456.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.181124.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.184325.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.186443.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.189394.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.191881.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.191996.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.192443.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.193882.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.187511.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.178862.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.178561.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.179000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.180148.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.180613.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.181916.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.182922.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.180900.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.184123.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.186231.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.187039.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.190124.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.190728.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.196055.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.194218.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.194365.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.194604.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.199111.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.203620.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213436.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221027.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.227620.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226937.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.227668.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.228672.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225220.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226210.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222582.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220083.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220640.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220707.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220406.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220286.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220081.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220466.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220061.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220014.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220174.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219826.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219646.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.219284.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218916.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218591.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.218429.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221361.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225464.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.228671.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.231085.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229724.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229933.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229593.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223832.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221039.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217058.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.212210.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208561.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.207996.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.207904.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208163.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208116.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.207152.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.207366.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208137.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208128.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208293.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208644.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208305.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208241.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208847.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.208563.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214370.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217896.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221647.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.224727.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229639.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.230157.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229463.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225771.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.222436.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221088.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217516.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213986.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213859.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213114.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213059.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213331.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213592.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213257.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213370.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.213396.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.217247.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215571.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215530.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215229.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.215079.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214794.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.220397.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.223992.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.226478.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.227842.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229702.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.229844.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.230282.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.225799.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.221907.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.214600.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.209872.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.206846.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.206405.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.206035.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.203742.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 3.045913.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.951885.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.862342.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.773839.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.686174.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.597221.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.416486.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.517102.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.339726.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.253520.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.077203.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.181834.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.009338.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.930151.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.851135.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.770597.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.683898.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.598501.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.512181.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.421247.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.431428.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429080.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.425174.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422322.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423602.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423934.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422701.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423484.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.424182.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423668.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423498.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423312.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.420975.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.420493.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.420594.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.421001.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422206.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432713.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.434744.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.435630.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.444293.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.449509.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.450188.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.452775.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.455051.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.449877.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.448523.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.442272.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.435681.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432470.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429849.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.430790.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428100.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428952.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428892.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429286.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429877.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429983.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429633.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429054.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.425334.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.424353.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.425176.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.424577.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429956.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.431961.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.436803.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.443049.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.442605.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.444235.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.447285.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.443014.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.441938.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.438424.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.433721.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.430124.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.426755.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.425077.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.425041.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429916.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.427900.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.427377.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.425716.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.425080.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.424930.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.425562.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.426831.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432066.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.430130.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429775.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.435465.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.437187.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.439981.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.444815.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.443143.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.445013.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.447093.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.443019.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.439679.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.435205.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429663.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.431314.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.425933.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.424351.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422768.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423672.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423602.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423186.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.424724.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422527.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422255.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.421780.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423433.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429695.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428881.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428064.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432045.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.433748.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.434530.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.444660.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.446346.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.449919.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.452172.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.449061.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.445073.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.441844.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429665.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422629.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422875.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.418710.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.418000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.414902.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.413550.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.413795.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.412674.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.411268.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.412786.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.417305.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.415008.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.414411.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.413942.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.413469.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.417624.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.420931.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423827.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432744.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.443471.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.444822.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.446748.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.443051.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.442159.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432284.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.426842.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.426676.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.424202.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.421671.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.378456.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.318347.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.317739.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.317122.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.317206.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.316444.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.317429.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.315246.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.313760.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.313460.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.312944.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.313438.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.317066.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.316231.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.325131.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.328416.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.334162.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.336378.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.333320.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.364336.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.426043.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.424313.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.420070.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.417418.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.414803.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.411557.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.409980.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.412710.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.409906.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.412464.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.412694.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.417176.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.416289.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.417626.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.418134.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.418565.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.418540.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428161.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.430195.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.433723.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.436131.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.439575.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.437235.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.440350.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.440202.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.438355.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.436566.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432369.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428905.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.424270.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.421673.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.419590.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.416835.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.415282.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.414682.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.414030.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.413351.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.411005.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.411099.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.411919.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.414330.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.418091.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.417416.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.419476.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.426444.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.427819.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.429220.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432304.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.435501.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.438965.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.440485.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.439021.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.438833.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.434553.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.427869.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423427.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422444.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.419451.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (13 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.411294.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.409709.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.409160.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.409185.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.410557.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.413284.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.413466.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.417368.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.416258.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.414609.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.413947.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.414816.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422139.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423402.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.426211.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.431136.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (12 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.437540.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.438467.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.437887.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.439265.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.442878.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.439140.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.434771.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.431648.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428672.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.426346.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423771.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422193.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.425817.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423099.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422761.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423211.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423426.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.422700.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423424.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423182.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428659.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.431881.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.436021.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.438878.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.441528.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.447639.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.450632.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.452294.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.414935.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.360068.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.306184.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.255590.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.200973.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.147631.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.095531.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.083484.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.083526.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.082690.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.081945.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.080588.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.080916.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.080040.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.080320.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.080035.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.080019.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.080152.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.080014.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.109554.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.169941.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.227326.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.276683.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.330399.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.387884.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.437833.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.454917.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.454281.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.450036.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.445428.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.440008.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.435051.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.433906.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.433445.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432978.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.431069.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.390155.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.336258.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.287560.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.282364.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.281442.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.281116.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.222493.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.168999.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.117423.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.066685.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.067124.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.073048.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.078647.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.087248.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.091263.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.087209.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.079841.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.076258.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.073899.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.098250.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.145924.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.196822.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.201201.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.200910.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.200302.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.253093.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.307074.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.361111.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.410979.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.414638.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.413967.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.413380.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.412611.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.412960.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.418454.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.421008.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.414455.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.410704.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.413524.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.410584.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.409632.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.402045.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.387857.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.373441.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.359022.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.347922.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.340130.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.332464.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.329558.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.321481.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.312137.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.307851.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.304705.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.302417.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.302360.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.311029.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.315432.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.310663.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.312342.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.312379.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.317742.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.328396.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.340278.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.349982.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.356559.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.357115.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.356241.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.351984.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.338634.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.337846.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.325993.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.317214.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.312521.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.307833.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.307627.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.294353.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.297522.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.292849.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.295926.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.290857.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.285442.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.292000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.290714.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.294070.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.299690.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.303718.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.291636.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.296922.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.307056.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.322046.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.330398.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.331736.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.329045.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.317219.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.323262.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.318816.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.314419.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.308804.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.313995.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.310687.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.300200.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.290851.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.282323.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.271054.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.268966.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.290966.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.298347.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.304956.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.306916.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.308007.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.311084.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.317027.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.330395.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.343878.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.354573.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.367385.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.375550.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.375822.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.385289.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.387121.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.385561.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.391225.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.397921.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.398183.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.398099.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.399255.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.400252.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.401353.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.400136.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.401003.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.406334.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.404738.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.405909.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.406260.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.406127.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.406822.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.411613.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.415459.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.428637.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.437097.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.446795.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.448006.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.453617.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.452255.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.443604.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.431692.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423585.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.420802.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.416183.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.413431.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.413181.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.396236.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.391625.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.392385.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.392586.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.392397.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.392026.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.392478.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.396255.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.394827.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.393255.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.392989.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.393056.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.400409.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.414290.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.423401.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.431553.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.432109.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.433069.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.425906.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.421298.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.426480.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.419104.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.407997.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.401924.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.398091.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.375682.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.373015.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.370261.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.214123.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.120047.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (10 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 1.030643.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.942112.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.853904.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.765412.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.583859.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.683890.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.507242.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
We enumerated this many programs, for each task:
	 [30, 29, 31, 34, 41, 30, 41, 25, 35, 33, 9, 8, 31, 10, 10, 10, 8, 10, 12, 11, 9, 8, 9, 12, 7, 11, 9, 11, 7, 12, 11, 8, 9, 10, 11, 12, 12, 11, 12, 9, 9, 9, 11, 9, 8, 12, 8, 9, 6, 12, 12, 12, 8, 11, 12, 13, 11, 13, 12, 8, 9, 10, 10, 8, 11, 9, 12, 12, 12, 9, 9, 6, 10, 10, 11, 11, 10, 8, 9, 13, 9, 12, 12, 8, 8, 13, 9, 13, 11, 9, 11, 11, 12, 9, 11, 11, 9, 12, 10, 11, 12, 6, 10, 11, 9, 12, 8, 11, 11, 9, 11, 12, 11, 12, 9, 8, 9, 12, 8, 12, 11, 10, 11, 8, 12, 10, 7, 9, 12, 13, 9, 11, 12, 11, 9, 10, 13, 12, 9, 12, 10, 9, 9, 12, 11, 12, 8, 8, 7, 8, 12, 9, 11, 9, 10, 10, 10, 11, 11, 9, 11, 9, 9, 9, 13, 11, 9, 8, 8, 12, 13, 8, 10, 11, 8, 9, 11, 9, 7, 12, 12, 9, 9, 9, 12, 12, 11, 13, 9, 10, 9, 8, 8, 12, 12, 9, 9, 7, 11, 11, 8, 12, 12, 13, 12, 10, 12, 8, 11, 11, 10, 9, 10, 9, 12, 11, 8, 11, 11, 9, 12, 12, 9, 9, 10, 8, 9, 11, 9, 8, 11, 10, 11, 12, 11, 12, 9, 6, 9, 13, 8, 12, 11, 12, 10, 9, 9, 9, 10, 12, 11, 10, 13, 10, 13, 8, 11, 12, 8, 11, 11, 12, 13, 9, 11, 8, 8, 9, 9, 10, 8, 11, 11, 12, 8, 13, 6, 9, 7, 10, 11, 8, 6, 8, 9, 9, 9, 9, 7, 11, 11, 12, 12, 9, 8, 7, 11, 9, 11, 9, 10, 9, 12, 9, 7, 10, 9, 8, 7, 7, 7, 8, 7, 9, 6, 6, 9, 7, 8, 8, 8, 7, 9, 7, 11, 7, 30, 30, 8, 9, 7, 9, 9, 8, 7, 7, 31, 6, 9, 7, 8, 9, 9, 9, 31, 8, 7, 31, 9, 9, 7, 7, 7, 7, 6, 7, 6, 6, 6, 9, 7, 11, 7, 7, 9, 9, 31, 9, 8, 8, 7, 9, 9, 9, 8, 7, 9, 7, 7, 8, 7, 7, 8, 9, 8, 7, 6, 7, 6, 8, 7, 7, 30, 8, 8, 9, 7, 9, 8, 6, 7, 7, 30, 9, 6, 9, 6, 7, 6, 9, 8, 7, 7, 9, 7, 9, 9, 8, 6, 8, 8, 8, 7, 7, 7, 7, 9, 9, 10, 12, 9, 7, 11, 41, 10, 9, 8, 10, 10, 12, 41, 7, 10, 10, 7, 10, 10, 9, 10, 10, 8, 9, 12, 7, 12, 8, 10, 11, 13, 10, 10, 13, 7, 13, 9, 10, 6, 9, 9, 7, 9, 9, 10, 9, 11, 9, 9, 10, 12, 11, 7, 9, 9, 8, 10, 7, 9, 9, 7, 9, 9, 10, 9, 9, 10, 10, 13, 10, 6, 9, 12, 9, 12, 9, 9, 9, 10, 11, 14, 14, 9, 12, 12, 9, 9, 10, 10, 9, 9, 9, 11, 10, 6, 9, 7, 10, 9, 11, 9, 9, 9, 10, 7, 9, 9, 6, 7, 9, 10, 8, 7, 10, 8, 10, 9, 9, 9, 9, 10, 9, 11, 8, 9, 9, 10, 13, 10, 9, 9, 9, 8, 9, 11, 9, 10, 13, 10, 9, 14, 9, 14, 12, 10, 9, 6, 13, 12, 13, 7, 9, 12, 10, 10, 13, 10, 9, 9, 7, 9, 9, 9, 9, 6, 10, 6, 9, 12, 10, 12, 8, 7, 10, 9, 10, 11, 10, 9, 8, 10, 10, 9, 11, 10, 12, 9, 9, 10, 10, 9, 11, 9, 13, 10, 9, 11, 9, 11, 12, 7, 9, 11, 11, 9, 9, 10, 7, 6, 10, 7, 10, 10, 7, 6, 8, 11, 9, 6, 8, 7, 7, 11, 8, 10, 9, 7, 10, 10, 10, 10, 10, 7, 8, 6, 8, 10, 7, 10, 9, 7, 8, 6, 6, 6, 6, 6, 9, 8, 10, 6, 7, 8, 9, 7, 10, 10, 9, 8, 6, 10, 8, 10, 9, 9, 11, 7, 7, 6, 7, 9, 9, 8, 9, 6, 9, 9, 9, 7, 11, 9, 11, 7, 6, 8, 9, 9, 7, 10, 8, 9, 6, 11, 8, 7, 7, 9, 9, 8, 7, 7, 10, 10, 8, 7, 8, 7, 8, 9, 12, 9, 6, 9, 10, 6, 8, 8, 10, 7, 6, 10, 8, 8, 8, 10, 9, 9, 6, 7, 6, 10, 10, 11, 8, 10, 6, 8, 10, 9, 7, 8, 9, 9, 10, 7, 7, 10, 7, 9, 10, 10, 7, 9, 7, 10, 8, 9, 9, 10, 6, 7, 9, 11, 7, 7, 7, 7, 7, 10, 7, 9, 7, 9, 9, 9, 12, 7, 8, 11, 10, 10, 11, 8, 8, 8, 6, 8, 6, 9, 6, 7, 11, 10, 9, 6, 9, 8, 7, 7, 10, 6, 8, 9, 7, 6, 7, 9, 8, 7, 9, 7, 9, 9, 11, 7, 9, 7, 10, 7, 7, 6, 6, 10, 7, 10, 7, 10, 7, 8, 9, 9, 10, 7, 8, 6, 6, 9, 7, 10, 10, 7, 7, 9, 8, 9, 7, 6, 10, 10, 9, 9, 8, 9, 9, 8, 8, 10, 6, 7, 9, 11, 9, 8, 9, 5, 9, 8, 10, 8, 10, 10, 6, 8, 8, 9, 8, 10, 8, 8, 5, 9, 6, 7, 7, 10, 10, 11, 8, 8, 9, 10, 8, 9, 10, 8, 8, 8, 9, 7, 8, 13, 7, 9, 7, 10, 7, 7, 10, 9, 7, 8, 8, 12, 6, 7, 8, 7, 9, 7, 10, 9, 9, 8, 10, 9, 10, 8, 10, 7, 9, 7, 6, 9, 9, 12, 11, 9, 7, 7, 7, 7, 9, 9, 8, 10, 7, 10, 7, 10, 8, 10, 7, 8, 7, 7, 8, 9, 11, 7, 9, 7, 6, 9, 9, 8, 10, 11, 8, 9, 7, 11, 7, 13, 13, 8, 9, 9, 13, 11, 8, 9, 10, 7, 8, 7, 10, 9, 9, 9, 7, 8, 11, 10, 6, 10, 11, 11, 5, 7, 7, 7, 8, 10, 7, 9, 10, 6, 7, 9, 9, 9, 9, 11, 10, 6, 11, 8, 9, 11, 9, 6, 7, 11, 8, 7, 7, 9, 11, 9, 7, 9, 9, 8, 7, 9, 9, 9, 8, 10, 10, 10, 8, 9, 10, 9, 7, 9, 11, 6, 9, 7, 10, 10, 10, 5, 7, 9, 9, 5, 9, 11, 7, 10, 8, 12, 10, 5, 8, 9, 10, 7, 8, 9, 9, 7, 10, 9, 7, 9, 10, 11, 11, 9, 10, 12, 8, 7, 6, 8, 8, 7, 10, 8, 11, 8, 8, 7, 7, 10, 9, 8, 9, 10, 8, 6, 6, 10, 9, 7, 10, 8, 10, 8, 9, 7, 10, 7, 11, 9, 7, 10, 9, 10, 7, 7, 11, 5, 8, 9, 11, 7, 9, 8, 12, 9, 8, 10, 10, 7, 7, 7, 7, 8, 10, 10, 6, 6, 9, 12, 7, 7, 7, 11, 9, 8, 8, 8, 9, 10, 5, 8, 7, 6, 10, 9, 8, 9, 9, 9, 12, 6, 10, 8, 9, 12, 29, 9, 9, 9, 10, 9, 9, 29, 9, 7, 9, 9, 10, 8, 8, 8, 41, 8, 9, 9, 10, 29, 10, 10, 7, 9, 9, 9, 10, 13, 6, 9, 8, 8, 9, 9, 8, 10, 10, 41, 7, 8, 29, 10, 10, 8, 10, 7, 10, 9, 10, 9, 9, 8, 10, 8, 9, 10, 9, 10, 7, 7, 8, 10, 7, 10, 9, 25, 8, 10, 29, 9, 10, 10, 13, 10, 10, 9, 8, 9, 6, 8, 9, 7, 9, 8, 12, 7, 10, 7, 12, 8, 9, 6, 9, 9, 7, 9, 10, 10, 33, 10, 8, 7, 7, 9, 11, 9, 10, 9, 10, 8, 9, 8, 9, 11, 29, 12, 35, 10, 9, 10, 8, 25, 8, 8, 8, 8, 25, 9, 9, 10, 35, 29, 8, 12, 7, 10, 10, 7, 8, 8, 8, 10, 9, 9, 13, 10, 8, 25, 9, 9, 9, 9, 7, 6, 6, 8, 9, 9, 10, 9, 10, 10, 9, 10, 8, 8, 10, 6, 9, 33, 9, 10, 10, 8, 10, 9, 7, 7, 8, 8, 25, 33, 6, 8, 10, 9, 8, 9, 8, 9, 9, 10, 10, 10, 8, 25, 9, 8, 10, 10, 10, 8, 10, 9, 10, 12, 9, 8, 8, 10, 8, 9, 9, 10, 9, 10, 10, 10, 10, 9, 12, 25, 9, 10, 29, 10, 6, 13, 10, 13, 10, 8, 33, 10, 7, 9, 12, 8, 8, 7, 9, 8, 8, 6, 7, 10, 6, 10, 9, 9, 8, 8, 7, 8, 25, 9, 9, 10, 10, 12, 9, 10, 8, 9, 8, 8, 11, 8, 9, 8, 10, 9, 12, 11, 8, 11, 11, 6, 8, 10, 10, 10, 8, 9, 9, 9, 10, 8, 9, 6, 9, 9, 10, 8, 10, 10, 9, 8, 11, 11, 10, 11, 10, 10, 10, 12, 9, 10, 10, 7, 10, 10, 9, 12, 9, 10, 6, 8, 10, 10, 12, 7, 9, 9, 11, 9, 9, 10, 10, 10, 9, 10, 11, 11, 10, 8, 9, 8, 10, 7, 8, 8, 12, 10, 8, 7, 8, 9, 8, 11, 10, 10, 10, 12, 11, 9, 9, 12, 6, 10, 9, 8, 10, 9, 12, 8, 9, 9, 10, 12, 12, 12, 11, 8, 10, 10, 7, 10, 9, 8, 9, 9, 10, 11, 9, 10, 9, 9, 11, 9, 8, 10, 9, 9, 9, 9, 8, 9, 9, 10, 8, 10, 7, 8, 12, 9, 10, 9, 9, 9, 10, 10, 12, 9, 8, 12, 11, 12, 9, 10, 8, 8, 10, 9, 8, 12, 12, 8, 8, 10, 7, 12, 8, 10, 12, 8, 9, 7, 9, 8, 8, 8, 8, 7, 7, 10, 10, 9, 9, 10, 8, 8, 10, 9, 7, 10, 10, 7, 10, 10, 11, 11, 8, 7, 8, 7, 9, 9, 12, 7, 8, 7, 8, 8, 9, 9, 9, 9, 9, 11, 9, 8, 7, 11, 11, 9, 9, 9, 8, 12, 8, 9, 7, 9, 7, 10, 9, 30, 8, 9, 7, 9, 6, 12, 8, 9, 7, 9, 9, 8, 31, 10, 9, 7, 9, 10, 10, 8, 8, 9, 7, 11, 8, 6, 8, 6, 9, 30, 6, 10, 9, 9, 8, 31, 9, 11, 9, 8, 12, 8, 12, 12, 10, 9, 7, 9, 8, 7, 7, 10, 7, 12, 7, 10, 8, 12, 9, 7, 6, 9, 11, 8, 6, 9, 10, 9, 7, 9, 12, 8, 12, 7, 7, 10, 8, 7, 8, 7, 7, 30, 10, 9, 9, 13, 12, 8, 6, 30, 6, 7, 12, 12, 13, 9, 13, 10, 8, 13, 9, 9, 31, 12, 8, 9, 8, 31, 8, 9, 9, 7, 9, 8, 10, 9, 10, 11, 9, 10, 8, 10, 8, 10, 41, 10, 8, 9, 8, 9, 10, 8, 9, 9, 8, 9, 10, 10, 9, 8, 10, 7, 41, 9, 8, 8, 10, 9, 8, 6, 9, 9, 10, 10, 9, 7, 10, 9, 10, 9, 10, 11, 7, 9, 9, 10, 6, 10, 11, 8, 10, 8, 13, 8, 8, 11, 8, 9, 8, 8, 9, 10, 10, 8, 8, 10, 6, 8, 9, 9, 10, 6, 10, 6, 8, 10, 8, 8, 10, 9, 8, 9, 9, 9, 7, 9, 9, 10, 9, 11, 12, 9, 10, 11, 8, 11, 10, 9, 8, 9, 7, 8, 8, 9, 12, 8, 6, 10, 10, 9, 12, 8, 10, 8, 9, 6, 8, 8, 10, 7, 11, 8, 10, 9, 10, 8, 10, 9, 8, 8, 8, 11, 8, 9, 9, 6, 11, 8, 10, 10, 9, 7, 8, 8, 8, 11, 12, 8, 12, 9, 8, 10, 8, 8, 13, 8, 11, 9, 10, 7, 8, 8, 8, 10, 9, 7, 6, 6, 10, 12, 12, 8, 8, 11, 8, 7, 9]
Recognizer 0 solved 34/20910 tasks; total tasks solved is now 34.
Best recognizer: 0.
Currently using this much memory: 344559616
Recognition model enumeration results for the best recognizer.
HIT 6435: turn opposite left twice and turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) ; log prior = -2.915014 ; log likelihood = 0.000000
HIT 6436: turn left twice and turn opposite left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) ; log prior = -3.101088 ; log likelihood = 0.000000
HIT 6438: turn around left after turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) ; log prior = -3.142969 ; log likelihood = 0.000000
HIT 6439: turn around right and turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) ; log prior = -2.960172 ; log likelihood = 0.000000
HIT 6447: turn opposite right twice and turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) ; log prior = -2.810090 ; log likelihood = 0.000000
HIT 6455: turn opposite left thrice after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) ; log prior = -3.136236 ; log likelihood = 0.000000
HIT 6473: turn opposite left and turn opposite left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) ; log prior = -3.437250 ; log likelihood = 0.000000
HIT 6483: turn left twice after turn opposite left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) ; log prior = -3.136236 ; log likelihood = 0.000000
HIT 6489: turn opposite right twice after turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) ; log prior = -2.775089 ; log likelihood = 0.000000
HIT 6494: turn opposite right after turn opposite right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) ; log prior = -3.135411 ; log likelihood = 0.000000
HIT 6495: turn opposite right thrice after turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) ; log prior = -3.135411 ; log likelihood = 0.000000
HIT 6503: turn right twice and turn opposite right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) ; log prior = -2.838677 ; log likelihood = 0.000000
HIT 6508: turn around left and turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) ; log prior = -2.567745 ; log likelihood = 0.000000
HIT 6509: turn around left after turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) ; log prior = -2.560825 ; log likelihood = 0.000000
HIT 6517: turn opposite left thrice after turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) ; log prior = -3.451114 ; log likelihood = 0.000000
HIT 6551: turn opposite left thrice and turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) ; log prior = -3.101088 ; log likelihood = 0.000000
HIT 6552: turn opposite right thrice after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) ; log prior = -2.815482 ; log likelihood = 0.000000
HIT 6553: turn opposite right thrice and turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) ; log prior = -2.838677 ; log likelihood = 0.000000
HIT 6555: turn opposite right twice after turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) ; log prior = -2.537067 ; log likelihood = 0.000000
HIT 6565: turn around right and turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) ; log prior = -2.539947 ; log likelihood = 0.000000
HIT 6568: turn opposite left twice after turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) ; log prior = -2.560825 ; log likelihood = 0.000000
HIT 6569: turn opposite left thrice and turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) ; log prior = -3.437250 ; log likelihood = 0.000000
HIT 6570: turn opposite left twice and turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) ; log prior = -2.567745 ; log likelihood = 0.000000
HIT 6573: turn right twice after turn opposite right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) ; log prior = -2.815482 ; log likelihood = 0.000000
HIT 6577: turn around right after turn opposite right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) ; log prior = -2.537067 ; log likelihood = 0.000000
HIT 6580: turn around right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) ; log prior = -2.655628 ; log likelihood = 0.000000
HIT 6584: turn around left and turn around left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) ; log prior = -3.149892 ; log likelihood = 0.000000
HIT 6591: turn opposite left after turn opposite left thrice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) ; log prior = -3.451114 ; log likelihood = 0.000000
HIT 6595: turn opposite left twice after turn opposite left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) ; log prior = -2.924179 ; log likelihood = 0.000000
HIT 6598: turn around right after turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) ; log prior = -2.920548 ; log likelihood = 0.000000
HIT 6612: turn opposite right thrice and turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) ; log prior = -3.184933 ; log likelihood = 0.000000
HIT 6617: turn opposite right and turn opposite right thrice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) ; log prior = -3.184933 ; log likelihood = 0.000000
HIT 6621: turn opposite right twice and turn around right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) ; log prior = -2.539947 ; log likelihood = 0.000000
HIT 6622: turn around left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) ; log prior = -2.706186 ; log likelihood = 0.000000
Hits 34/2000 tasks
Average description length of a program solving a task: 2.928568 nats
Recognition model average:  3 sec.	median: 2 	max: 4 	standard deviation 1
Cumulative results for the full ensemble of 1 recognizers: 
Frontiers discovered bottom up: 34
Total frontiers: 1925
Average search time:  3 sec.	median: 2 	max: 4 	standard deviation 1
34 / 2000 total hit tasks
              bottom miss  bottom hit  
top miss         1966          34      
top hit            0            0      
Currently using this much memory: 344694784
Showing the top 5 programs in each frontier being sent to the compressor:
0: run
0.00	(lambda (SCAN_RUN $0))

1: look
0.00	(lambda (SCAN_LOOK $0))

2: jump
0.00	(lambda (SCAN_JUMP $0))

3: walk
0.00	(lambda (SCAN_WALK $0))

4: turn right
0.00	(lambda (SCAN_RTURN $0))

5: turn left
0.00	(lambda (SCAN_LTURN $0))

6: run after run
0.00	(lambda (SCAN_RUN (SCAN_RUN $0)))

7: run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN $0)))

8: run and run
0.00	(lambda (SCAN_RUN (SCAN_RUN $0)))

9: walk and run
0.00	(lambda (SCAN_WALK (SCAN_RUN $0)))

10: run and walk
0.00	(lambda (SCAN_RUN (SCAN_WALK $0)))

11: run and jump
0.00	(lambda (SCAN_RUN (SCAN_JUMP $0)))

12: jump and run
0.00	(lambda (SCAN_JUMP (SCAN_RUN $0)))

13: run after jump
0.00	(lambda (SCAN_JUMP (SCAN_RUN $0)))

14: look and run
0.00	(lambda (SCAN_LOOK (SCAN_RUN $0)))

15: run after look
0.00	(lambda (SCAN_LOOK (SCAN_RUN $0)))

16: run after walk
0.00	(lambda (SCAN_WALK (SCAN_RUN $0)))

17: walk after run
0.00	(lambda (SCAN_RUN (SCAN_WALK $0)))

18: run and look
0.00	(lambda (SCAN_RUN (SCAN_LOOK $0)))

19: jump after run
0.00	(lambda (SCAN_RUN (SCAN_JUMP $0)))

20: look after run
0.00	(lambda (SCAN_RUN (SCAN_LOOK $0)))

21: turn right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN $0)))

22: look after jump
0.00	(lambda (SCAN_JUMP (SCAN_LOOK $0)))

23: run after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN $0)))

24: walk after look
0.00	(lambda (SCAN_LOOK (SCAN_WALK $0)))

25: jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP $0)))

26: walk after jump
0.00	(lambda (SCAN_JUMP (SCAN_WALK $0)))

27: walk and jump
0.00	(lambda (SCAN_WALK (SCAN_JUMP $0)))

28: look after look
0.00	(lambda (SCAN_LOOK (SCAN_LOOK $0)))

29: run and turn left
0.00	(lambda (SCAN_RUN (SCAN_LTURN $0)))

30: jump after walk
0.00	(lambda (SCAN_WALK (SCAN_JUMP $0)))

31: jump after look
0.00	(lambda (SCAN_LOOK (SCAN_JUMP $0)))

32: turn right and run
0.00	(lambda (SCAN_RTURN (SCAN_RUN $0)))

33: jump after jump
0.00	(lambda (SCAN_JUMP (SCAN_JUMP $0)))

34: walk after walk
0.00	(lambda (SCAN_WALK (SCAN_WALK $0)))

35: run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN $0)))

36: look after walk
0.00	(lambda (SCAN_WALK (SCAN_LOOK $0)))

37: jump and jump
0.00	(lambda (SCAN_JUMP (SCAN_JUMP $0)))

38: turn left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN $0)))

39: look and jump
0.00	(lambda (SCAN_LOOK (SCAN_JUMP $0)))

40: walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK $0)))

41: run and turn right
0.00	(lambda (SCAN_RUN (SCAN_RTURN $0)))

42: turn left and run
0.00	(lambda (SCAN_LTURN (SCAN_RUN $0)))

43: look and walk
0.00	(lambda (SCAN_LOOK (SCAN_WALK $0)))

44: look and look
0.00	(lambda (SCAN_LOOK (SCAN_LOOK $0)))

45: run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN $0)))

46: jump and look
0.00	(lambda (SCAN_JUMP (SCAN_LOOK $0)))

47: jump and walk
0.00	(lambda (SCAN_JUMP (SCAN_WALK $0)))

48: run after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN $0)))

49: look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK $0)))

50: walk and walk
0.00	(lambda (SCAN_WALK (SCAN_WALK $0)))

51: walk and look
0.00	(lambda (SCAN_WALK (SCAN_LOOK $0)))

52: jump and turn left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN $0)))

53: look and turn right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN $0)))

54: turn right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN $0)))

55: jump after turn left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP $0)))

56: jump and turn right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN $0)))

57: look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK $0)))

58: walk after turn left
0.00	(lambda (SCAN_LTURN (SCAN_WALK $0)))

59: look and turn left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN $0)))

60: look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK $0)))

61: turn left and walk
0.00	(lambda (SCAN_LTURN (SCAN_WALK $0)))

62: turn left and jump
0.00	(lambda (SCAN_LTURN (SCAN_JUMP $0)))

63: jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP $0)))

64: turn right and look
0.00	(lambda (SCAN_RTURN (SCAN_LOOK $0)))

65: look after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK $0)))

66: turn right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN $0)))

67: walk and turn right
0.00	(lambda (SCAN_WALK (SCAN_RTURN $0)))

68: jump after turn right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP $0)))

69: walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK $0)))

70: walk after turn right
0.00	(lambda (SCAN_RTURN (SCAN_WALK $0)))

71: walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK $0)))

72: turn right and jump
0.00	(lambda (SCAN_RTURN (SCAN_JUMP $0)))

73: turn left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN $0)))

74: turn right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN $0)))

75: turn left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN $0)))

76: turn left and look
0.00	(lambda (SCAN_LTURN (SCAN_LOOK $0)))

77: jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP $0)))

78: look after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK $0)))

79: turn left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN $0)))

80: turn right and walk
0.00	(lambda (SCAN_RTURN (SCAN_WALK $0)))

81: walk and turn left
0.00	(lambda (SCAN_WALK (SCAN_LTURN $0)))

82: turn right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN $0)))

83: run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))

84: run twice after run
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))

85: turn left after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))

86: turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))

87: run after run twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))

88: turn left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN $0)))

89: turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))

90: run twice and run
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))

91: turn right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN $0)))

92: turn right and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))

93: turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))

94: turn left and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))

95: turn left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN $0)))

96: turn right after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))

97: run and run twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))

98: turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))

99: run twice after jump
0.00	(lambda (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0))))

100: look and run twice
0.00	(lambda (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0))))

101: jump after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP $0))))

102: walk after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK $0))))

103: run twice and look
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK $0))))

104: run twice and walk
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK $0))))

105: run twice after walk
0.00	(lambda (SCAN_WALK (SCAN_RUN (SCAN_RUN $0))))

106: run twice after look
0.00	(lambda (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0))))

107: look after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK $0))))

108: walk and run twice
0.00	(lambda (SCAN_WALK (SCAN_RUN (SCAN_RUN $0))))

109: jump and run twice
0.00	(lambda (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0))))

110: run twice and jump
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP $0))))

111: run and jump twice
0.00	(lambda (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0))))

112: turn right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))

113: run right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))

114: run twice and turn right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN $0))))

115: run and run right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))

116: run after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN $0))))

117: run twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))

118: turn left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN $0))))

119: run after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN $0))))

120: walk twice and run
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN $0))))

121: run and run left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0))))

122: run twice and turn left
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN $0))))

123: look twice and run
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN $0))))

124: run and look twice
0.00	(lambda (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0))))

125: look twice after run
0.00	(lambda (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0))))

126: jump twice after run
0.00	(lambda (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0))))

127: walk twice after run
0.00	(lambda (SCAN_RUN (SCAN_WALK (SCAN_WALK $0))))

128: turn right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN $0))))

129: run right and run
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))

130: run and walk twice
0.00	(lambda (SCAN_RUN (SCAN_WALK (SCAN_WALK $0))))

131: run after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))

132: turn left and run twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))

133: run left and run
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))

134: run twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))

135: run after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))

136: run left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0))))

137: run after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN $0))))

138: jump twice and run
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN $0))))

139: run and look right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0))))

140: walk after walk twice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))

141: walk twice and jump
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP $0))))

142: look twice and look
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))

143: walk right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0))))

144: jump right and run
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN $0))))

145: run after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN $0))))

146: jump left and run
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN $0))))

147: look twice and jump
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP $0))))

148: look after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK $0))))

149: run after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RUN $0))))

150: walk twice after jump
0.00	(lambda (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0))))

151: run left and look
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LOOK $0))))

152: jump and jump twice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))

153: run left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_RUN $0))))

154: walk twice after walk
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))

155: walk right and run
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN $0))))

156: jump twice after jump
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))

157: jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))

158: jump twice and walk
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK $0))))

159: run right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0))))

160: look right and run
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RUN $0))))

161: run and walk right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0))))

162: run and walk left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_WALK $0))))

163: jump after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP $0))))

164: jump and run left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0))))

165: walk after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK $0))))

166: run left and jump
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP $0))))

167: jump and walk twice
0.00	(lambda (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0))))

168: jump after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP $0))))

169: look after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LOOK $0))))

170: look twice after look
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))

171: run right and jump
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP $0))))

172: run right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0))))

173: jump after jump twice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))

174: walk after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK $0))))

175: run left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_RUN $0))))

176: walk and run left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_RUN $0))))

177: jump twice after walk
0.00	(lambda (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0))))

178: look twice after jump
0.00	(lambda (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0))))

179: look and look twice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))

180: walk after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK $0))))

181: run after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RUN $0))))

182: walk left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_WALK $0))))

183: look and run left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_RUN $0))))

184: walk left and run
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RUN $0))))

185: look twice after walk
0.00	(lambda (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0))))

186: jump and run right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0))))

187: look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))

188: look left and run
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RUN $0))))

189: jump left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0))))

190: look and walk twice
0.00	(lambda (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0))))

191: jump after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP $0))))

192: jump twice after look
0.00	(lambda (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0))))

193: look twice and walk
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK $0))))

194: look after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LOOK $0))))

195: walk and look twice
0.00	(lambda (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0))))

196: walk and walk twice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))

197: look and jump twice
0.00	(lambda (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0))))

198: jump and look twice
0.00	(lambda (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0))))

199: walk twice and look
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK $0))))

200: run and look left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LOOK $0))))

201: jump after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP $0))))

202: jump twice and jump
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))

203: run after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN $0))))

204: walk twice after look
0.00	(lambda (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0))))

205: walk after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_WALK $0))))

206: look right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0))))

207: run left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0))))

208: run and jump right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0))))

209: walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))

210: run left and walk
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_WALK $0))))

211: jump twice and look
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK $0))))

212: look left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LOOK $0))))

213: look and run right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0))))

214: jump right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0))))

215: run after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RUN $0))))

216: run right and walk
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK $0))))

217: walk and jump twice
0.00	(lambda (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0))))

218: run right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0))))

219: walk twice and walk
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))

220: look after look twice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))

221: run and jump left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0))))

222: run right and look
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LOOK $0))))

223: look after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK $0))))

224: walk and run right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0))))

225: run after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN $0))))

226: jump left and walk
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK $0))))

227: look right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0))))

228: run and turn opposite left
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

229: walk and jump left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0))))

230: run left after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

231: run right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RUN $0))))

232: jump left and jump
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))

233: turn opposite right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

234: look after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))

235: turn right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN $0))))

236: look after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LOOK $0))))

237: look left and jump
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP $0))))

238: look and look left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))

239: run right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LTURN $0))))

240: jump right and jump
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))

241: look after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK $0))))

242: walk after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK $0))))

243: jump twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))

244: jump and jump right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))

245: look after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK $0))))

246: look right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0))))

247: turn right and jump twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))

248: look left and look
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))

249: jump after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))

250: turn opposite left and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

251: turn left twice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

252: turn right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN $0))))

253: run left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RTURN $0))))

254: walk and walk left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))

255: jump after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP $0))))

256: jump and look left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0))))

257: run twice after run twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

258: look right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0))))

259: turn left after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LTURN $0))))

260: run right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))

261: look and walk left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0))))

262: turn right twice and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

263: walk right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))

264: look left and walk
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK $0))))

265: turn right and walk twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))

266: walk left and walk
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))

267: turn left and run right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RUN $0))))

268: run thrice and run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

269: run twice and run twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

270: turn left twice and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

271: walk left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0))))

272: turn right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))

273: turn left after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))

274: turn right twice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

275: run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

276: jump after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP $0))))

277: jump twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))

278: jump after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP $0))))

279: run after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

280: walk after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))

281: walk twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))

282: look and look right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0))))

283: run after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

284: look and walk right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0))))

285: look right and walk
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_WALK $0))))

286: jump left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0))))

287: jump left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0))))

288: turn left and walk twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))

289: look twice and turn left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN $0))))

290: jump after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))

291: walk and walk right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))

292: run and turn right twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

293: run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

294: jump left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0))))

295: walk left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))

296: look left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))

297: run and turn opposite right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

298: turn opposite right after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

299: look twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))

300: turn right after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RTURN $0))))

301: run right after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

302: look after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))

303: walk and look left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0))))

304: look and jump left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0))))

305: look right and jump
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP $0))))

306: run after run thrice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

307: look right and look
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))

308: look left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0))))

309: turn left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))

310: turn right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN $0))))

311: run and run thrice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

312: turn left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN $0))))

313: turn left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN $0))))

314: turn right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))

315: walk right and look
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LOOK $0))))

316: walk left and jump
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP $0))))

317: walk twice and turn right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN $0))))

318: jump right and walk
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_WALK $0))))

319: jump and jump left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0))))

320: jump right and look
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK $0))))

321: jump and walk right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0))))

322: walk left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0))))

323: walk twice and turn left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN $0))))

324: jump right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0))))

325: run and turn left twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

326: turn opposite left after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

327: jump and look right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0))))

328: walk left and look
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK $0))))

329: jump and walk left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0))))

330: walk twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))

331: walk after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))

332: jump right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0))))

333: walk right and jump
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_JUMP $0))))

334: walk right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0))))

335: walk right and walk
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))

336: run left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_RUN $0))))

337: run left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))

338: jump twice and turn left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN $0))))

339: walk after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_WALK $0))))

340: jump left and look
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK $0))))

341: turn left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN $0))))

342: look twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))

343: look and jump right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0))))

344: look left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0))))

345: walk right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0))))

346: turn right and run right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

347: run thrice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

348: run after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

349: walk and look right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0))))

350: look twice and turn right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN $0))))

351: walk after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_WALK $0))))

352: jump right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))

353: turn left and run left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

354: look after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK $0))))

355: walk after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK $0))))

356: jump after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_JUMP $0))))

357: turn left and look twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))

358: run after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

359: turn right and run left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_RUN $0))))

360: walk and jump right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0))))

361: jump twice and turn right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN $0))))

362: turn left and jump left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

363: turn right and jump right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

364: jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

365: turn left and walk right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0))))

366: run thrice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

367: turn opposite left and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

368: look left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN $0))))

369: jump and turn opposite left
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

370: jump after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

371: jump right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN $0))))

372: turn opposite left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

373: run thrice and look
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LOOK $0)))

374: walk and turn opposite left
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

375: jump left after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

376: walk right after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

377: look left after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

378: turn right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN $0))))

379: turn right twice and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

380: walk and turn right twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

381: turn opposite right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

382: turn left twice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

383: look and run thrice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

384: jump after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

385: walk after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

386: look right after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

387: jump right after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

388: walk and turn opposite right
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

389: walk left after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

390: turn opposite left after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

391: walk after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

392: look right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN $0))))

393: turn left and jump right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_JUMP $0))))

394: turn right and walk left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0))))

395: turn left after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN $0))))

396: turn right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN $0))))

397: turn opposite right and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

398: turn right after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN $0))))

399: jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

400: turn left after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN $0))))

401: turn left and walk left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

402: turn left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN $0))))

403: jump after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

404: turn opposite left after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

405: turn left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN $0))))

406: jump and turn left twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

407: jump left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN $0))))

408: walk right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN $0))))

409: turn opposite left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

410: look after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

411: walk left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0))))

412: turn opposite left and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

413: jump left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0))))

414: turn right twice and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

415: look and turn opposite right
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

416: look right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0))))

417: turn right twice and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

418: look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

419: walk after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

420: jump after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

421: look and turn left twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

422: look after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

423: turn right after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN $0))))

424: turn right twice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

425: turn right twice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

426: run thrice and walk
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_WALK $0)))

427: jump and turn opposite right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

428: look left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN $0))))

429: turn right and look right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

430: turn left twice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

431: jump and run thrice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

432: jump right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN $0))))

433: run thrice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

434: jump after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP $0)))

435: jump and turn right twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

436: turn right after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN $0))))

437: turn left after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN $0))))

438: turn right twice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

439: run thrice and jump
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP $0)))

440: walk after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_WALK $0)))

441: look right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN $0))))

442: jump left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN $0))))

443: look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

444: turn left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN $0))))

445: walk left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN $0))))

446: walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

447: look after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LOOK $0)))

448: look and turn right twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

449: turn right and look left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0))))

450: turn opposite right and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

451: look after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

452: turn opposite right after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

453: turn left twice and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

454: look left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0))))

455: turn opposite right after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

456: walk after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

457: look after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

458: walk left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN $0))))

459: turn left and look left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

460: look and turn opposite left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

461: turn opposite right after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

462: turn right after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN $0))))

463: turn right and jump left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0))))

464: turn left twice and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

465: turn right and walk right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

466: turn left twice and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

467: walk and turn left twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

468: jump right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_JUMP $0))))

469: walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

470: walk and run thrice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

471: turn left and look right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0))))

472: walk right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN $0))))

473: run thrice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

474: walk right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0))))

475: turn left twice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

476: jump twice and run twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

477: turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

478: look twice and run twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))))

479: turn left and turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

480: turn left and turn opposite right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

481: run right and run twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

482: turn right and turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

483: run thrice and turn left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN $0)))

484: turn right after turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

485: turn right twice and turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

486: run twice and walk twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

487: turn left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))

488: run thrice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

489: turn left and turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

490: run twice after run right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

491: turn left twice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

492: turn right and turn left twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

493: turn left after turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

494: turn left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN $0)))

495: run twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

496: turn right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN $0)))

497: walk twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

498: turn opposite right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))

499: turn right and run thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

500: turn right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))

501: turn right twice and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))

502: run left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

503: walk twice and run twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

504: run twice and run right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

505: turn left twice and turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

506: turn left and run thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

507: run thrice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

508: turn opposite right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

509: turn opposite left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))

510: turn right after turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

511: run twice and jump twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

512: turn left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))

513: turn opposite left after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

514: run twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

515: look twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))))

516: run left and run twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

517: jump twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

518: run twice after run left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

519: turn right and turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

520: turn left after turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

521: turn right twice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

522: turn opposite right and turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

523: turn right twice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

524: turn left twice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

525: turn opposite left and turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

526: turn left twice and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))

527: run right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

528: run twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))))

529: run thrice and turn right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN $0)))

530: turn opposite left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

531: run twice and look twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))))

532: run twice and run left
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

533: turn left and turn right twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

534: turn right and turn opposite left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

535: turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

536: turn opposite right after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

537: turn right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))

538: run twice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

539: run twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

540: run twice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

541: jump right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0)))))

542: jump thrice and run
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RUN $0)))

543: run twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

544: run and look thrice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

545: run twice and walk right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0)))))

546: jump left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0)))))

547: run and jump thrice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

548: run after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RUN $0)))

549: run twice and jump left
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0)))))

550: look thrice and run
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RUN $0)))

551: walk thrice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

552: look right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))))

553: run twice and look right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0)))))

554: jump left and run twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

555: walk right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

556: jump right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

557: run after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RUN $0)))

559: walk thrice and run
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RUN $0)))

561: run twice and jump right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0)))))

564: look thrice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

565: walk right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0)))))

567: run and walk thrice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

568: jump thrice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

569: walk left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_WALK $0)))))

573: run after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RUN $0)))

574: look twice and run right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0)))))

575: jump after jump thrice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

576: walk thrice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

577: walk after walk thrice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

578: run twice after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

579: jump thrice and jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

581: run left after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

582: run right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

583: run twice and turn right twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

584: jump twice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

585: walk twice after walk twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

586: jump and walk thrice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

587: look twice and look twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

588: run twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

589: look and look thrice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

590: run twice and turn opposite left
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

592: run thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

593: walk twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

594: walk thrice and walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

595: run and run opposite left
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

596: run thrice and run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

598: look twice and jump twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

599: jump twice after jump twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

600: run twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

601: jump after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_JUMP $0)))

602: walk twice and look twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

604: run right twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

605: walk thrice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

608: walk after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_WALK $0)))

609: jump thrice and look
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LOOK $0)))

610: jump thrice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

611: look after look thrice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

612: look after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LOOK $0)))

613: look thrice and walk
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_WALK $0)))

614: walk twice and walk twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

615: walk thrice and jump
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_JUMP $0)))

616: look and jump thrice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

617: run and run opposite right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

618: walk twice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

619: walk thrice and look
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LOOK $0)))

620: turn opposite right and run twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

622: walk twice and run right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0)))))

623: run twice and turn opposite right
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

625: look thrice and look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

626: look and walk thrice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

627: jump thrice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

628: jump thrice and walk
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_WALK $0)))

629: jump twice and run right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0)))))

630: jump and jump thrice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

631: jump twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

632: run left and run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

633: run twice and run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

634: jump and look thrice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

635: turn opposite left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

636: run opposite right after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

637: run twice and turn left twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

638: run right and walk twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

639: look twice after look twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

640: jump twice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

641: run right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0)))))

642: run left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0)))))

643: look thrice and jump
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_JUMP $0)))

644: jump after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_JUMP $0)))

645: run opposite left and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

646: walk twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))))

647: run left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_RUN $0)))))

648: run after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

649: walk thrice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

651: turn right twice and run twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

652: walk twice and jump twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))))

653: look twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

654: look thrice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

655: jump twice and walk twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))))

656: look twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

657: turn opposite right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

659: walk and look thrice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

660: jump twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))))

661: look twice and walk twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

662: jump twice and run left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0)))))

663: turn left twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

664: walk and walk thrice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

665: look after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LOOK $0)))

666: run right and run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

667: run after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

668: look thrice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

670: walk twice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

671: jump thrice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

672: jump twice and jump twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

673: run left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

674: run right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0)))))

675: look thrice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

677: run opposite left after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

678: jump twice and look twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

679: run twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

680: run opposite right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

681: run twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

682: turn left twice and run twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

683: run right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))))

684: walk and jump thrice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

685: turn opposite left and run twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

686: turn right twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

687: run left twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

688: run right and jump twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

689: walk after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_WALK $0)))

690: look opposite left after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

691: walk right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

693: walk thrice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

694: look opposite right after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

695: walk twice and jump left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0)))))

697: jump opposite right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_RUN $0))))

698: look left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

700: look twice and jump left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0)))))

701: walk opposite right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_RUN $0))))

702: look and run opposite right
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

703: look right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0)))))

704: look twice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

705: run opposite left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

706: run right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0)))))

708: run opposite left and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_JUMP $0))))

710: walk twice and look left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))))

711: walk twice and walk right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

712: walk left and walk twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

713: turn left and walk thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

714: look right and jump twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

715: jump twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))))

716: look and run opposite left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

717: jump right and jump twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

718: look twice after look left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

719: look thrice and turn right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN $0)))

720: run opposite right after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

721: jump left and walk twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))))

722: look left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))))

723: run and jump opposite left
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

725: run left and jump left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0)))))

727: turn left and look thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

728: walk twice and look right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0)))))

729: run opposite right and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_LOOK $0))))

731: turn right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN $0)))

732: look opposite right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_RUN $0))))

733: jump left and look twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

734: jump left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

735: run after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_RUN $0))))

737: jump twice and jump left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

739: walk left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0)))))

740: jump thrice and turn left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN $0)))

743: jump thrice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

744: look twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

749: jump twice after jump left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

751: run and look opposite right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

752: walk twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))))

754: walk thrice and turn right
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN $0)))

755: run and look opposite left
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

756: jump left and jump twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

758: jump right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0)))))

761: look left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

762: look right and run right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0)))))

764: walk left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))))

765: turn right and jump thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

767: run right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0)))))

768: jump twice and jump right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

769: jump twice and look right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0)))))

770: look right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

771: look thrice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

774: turn right and walk thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

776: look twice and look left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

777: look after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LOOK $0))))

778: turn left and jump thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

779: run after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_RUN $0))))

781: walk twice and walk left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

783: walk twice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

784: jump thrice and turn right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN $0)))

785: jump thrice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

787: look opposite left and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_RUN $0))))

788: jump left and run left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0)))))

790: run opposite left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LOOK $0))))

793: look left and look twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

795: walk right and walk twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

801: look twice and walk left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))))

802: jump twice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

803: run right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0)))))

806: walk and run opposite right
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

808: look twice after look right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

811: walk thrice and turn left
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN $0)))

812: look twice and jump right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0)))))

813: turn right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN $0)))

814: walk right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0)))))

817: turn left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN $0)))

818: look twice and look right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

819: walk twice after walk left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

821: jump right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

822: turn right and look thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

823: look right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0)))))

824: jump twice and walk left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0)))))

825: run and walk opposite right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

829: turn left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN $0)))

831: jump right and run right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0)))))

833: look left and walk twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

835: walk right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

836: run opposite right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_JUMP $0))))

838: jump left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0)))))

839: run opposite right and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_WALK $0))))

840: run and jump opposite right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

843: look right and look twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

845: look thrice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

848: look right and walk twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

850: look twice and walk right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0)))))

852: walk twice after walk right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

854: look thrice and turn left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN $0)))

858: jump and run opposite right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

859: look after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_LOOK $0))))

861: turn left after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN $0)))

865: jump right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

866: jump opposite left and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_RUN $0))))

868: run right and look right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0)))))

870: jump and run opposite left
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

871: walk left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))))

872: turn right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN $0)))

873: walk left and look twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

874: jump twice and look left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0)))))

877: jump twice after jump right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

880: walk thrice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

881: walk left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

882: turn right twice and run right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

883: turn opposite left and jump twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

884: run opposite right after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

885: look after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

886: look and look opposite left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

887: walk right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

888: jump opposite right and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_LOOK $0))))

889: turn right and run opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

890: run left after turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

892: jump and jump opposite left
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

893: run and turn right thrice
0.00	(lambda (SCAN_RUN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

894: jump after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_JUMP $0))))

895: jump opposite right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

896: jump and walk opposite right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

897: walk twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

898: walk after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_WALK $0))))

900: turn opposite right and look twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

902: jump opposite right and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_WALK $0))))

903: walk twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

905: walk right and walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

906: turn left twice and look twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

907: walk left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

908: walk left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0)))))

909: walk opposite right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_JUMP $0))))

911: run after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

913: jump twice and turn opposite right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

915: jump right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

917: look right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0)))))

920: walk opposite left and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

921: walk left and look left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))))

922: jump right after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

924: look twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

925: look opposite left and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_WALK $0))))

926: walk after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_WALK $0))))

927: jump opposite left after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

928: walk opposite right and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

930: look and look opposite right
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

932: walk right twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

933: jump twice and turn right twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

934: run thrice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

935: turn right thrice after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

936: walk opposite left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_LOOK $0))))

937: turn right twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

938: jump right and walk right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0)))))

939: jump right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0)))))

940: walk and jump opposite right
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

941: run thrice and run left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (SCAN_RUN $0))))

942: run left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

943: jump left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

944: turn opposite left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

946: turn left twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

947: look opposite right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_JUMP $0))))

948: jump opposite right after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

949: walk opposite left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

951: run thrice and jump twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP (SCAN_JUMP $0))))

952: look and jump opposite left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

953: run opposite left after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

954: look right twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

955: look left and walk left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))))

956: walk right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0)))))

958: turn left twice and walk twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

959: walk right and walk left
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

960: turn opposite left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

961: look twice and turn left twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

962: walk left and walk right
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

964: look left twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

965: walk after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_WALK $0))))

966: turn opposite right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

967: turn left twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

968: jump after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

969: turn opposite right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

970: jump opposite right after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

972: look after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_LOOK $0))))

973: walk and look opposite left
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

977: turn opposite left after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

979: look right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0)))))

980: run right after turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

981: look twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

982: walk twice and turn opposite right
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

983: turn opposite right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

984: turn opposite right after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

986: run thrice and run right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (SCAN_RUN $0))))

987: turn opposite left and walk twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

988: turn opposite right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

989: look left and look right
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

990: look twice and turn opposite right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

991: jump twice and run thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

992: run thrice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

993: jump left and jump right
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

994: walk twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

995: turn opposite left after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

996: jump right after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

998: jump twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1000: look after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1001: jump and look opposite right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1002: turn left and run opposite right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

1003: jump twice and turn left twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1004: look opposite right after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1005: jump right and jump left
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

1006: turn left twice and jump twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1008: look and walk opposite left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1009: run thrice and look twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LOOK (SCAN_LOOK $0))))

1010: look twice and turn right twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1011: jump after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_JUMP $0))))

1012: run right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1013: jump right twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

1016: look and jump opposite right
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1019: look right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

1020: walk right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0)))))

1021: run left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1022: look after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_LOOK $0))))

1024: look right after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

1025: jump twice and turn opposite left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1026: run opposite left and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN $0))))

1027: run opposite left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1028: walk twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

1029: run right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1030: jump left after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

1031: jump left twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

1032: run left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_RUN $0))))

1033: walk and walk opposite left
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1034: look opposite right and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1035: turn right after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RTURN $0))))

1036: run opposite left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RTURN $0))))

1037: turn right and run opposite left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1038: run opposite right and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN $0))))

1039: jump opposite left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_LOOK $0))))

1040: turn left twice and run left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1041: turn right twice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1042: turn left after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN $0))))

1043: look right and look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

1045: turn right thrice and run
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

1046: jump left and look left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0)))))

1049: look left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

1050: turn left twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1051: turn right twice and look twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1053: look left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))))

1054: walk left and walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

1057: look after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_LOOK $0))))

1058: walk twice and run thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1059: jump twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1060: turn right twice and walk twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

1061: run left after turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1062: walk twice and turn opposite left
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1065: walk right after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0)))))

1066: walk opposite left after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1067: look twice and run thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1068: turn left thrice and run
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1069: walk and walk opposite right
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1070: look opposite left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1071: jump and look opposite left
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1072: look opposite right after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1073: run thrice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1074: turn left thrice after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1075: run thrice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1076: turn opposite right and run right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

1077: run right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (SCAN_RUN $0))))

1078: turn opposite left and look twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1079: run right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_RUN $0))))

1080: run left and run thrice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1081: look twice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LOOK (SCAN_LOOK $0))))

1082: look opposite left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1083: run left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1084: look right and look left
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

1085: run opposite right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_LTURN $0))))

1086: look twice and turn opposite left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1087: walk opposite right after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1088: walk left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))))

1089: turn left after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_LTURN $0))))

1090: jump opposite left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1091: run opposite right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

1092: jump after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_JUMP $0))))

1093: look left after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

1096: walk right and look right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0)))))

1097: look twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1098: turn left twice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1099: walk after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

1100: jump twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1101: run right and run thrice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1102: run right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1104: walk after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

1105: look opposite left and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_JUMP $0))))

1108: look left and look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

1109: jump right and look right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0)))))

1110: walk twice and turn left twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1111: jump opposite right after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1113: look left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0)))))

1114: walk left twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

1115: walk twice and turn right twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1117: turn right after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN $0))))

1118: jump left and jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

1119: jump after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_JUMP $0))))

1120: turn opposite left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1122: run left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (SCAN_RUN $0))))

1123: turn left and run opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1124: look opposite left after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1126: jump and jump opposite right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1127: turn right twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1128: turn opposite right and jump twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1129: jump twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1131: run after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1132: jump after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1134: jump left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0)))))

1135: turn opposite left and run left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1136: jump left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0)))))

1137: turn opposite right and walk twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

1138: turn opposite right and run left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_RUN $0))))

1139: walk opposite left after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1141: turn opposite left and run right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_RUN $0))))

1142: walk opposite right after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1143: turn right twice and jump twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1144: jump opposite left and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1145: jump twice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP (SCAN_JUMP $0))))

1146: run and turn left thrice
0.00	(lambda (SCAN_RUN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1148: look left and jump left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0)))))

1149: look opposite left after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1150: turn right twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1151: run thrice and walk twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_WALK (SCAN_WALK $0))))

1152: look right and walk right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0)))))

1153: jump opposite left after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1154: look twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1155: run right after turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

1156: look left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_LOOK $0))))

1158: turn opposite left and look right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_LOOK $0))))

1159: turn right thrice after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1161: turn left twice and look right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_LOOK $0))))

1162: walk opposite right and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_RTURN $0))))

1163: run twice and walk thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1164: walk left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_WALK $0))))

1165: turn left twice and jump left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1166: look right after turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1167: jump thrice and run twice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RUN (SCAN_RUN $0))))

1168: turn left and jump opposite right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1169: turn left after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_LTURN $0))))

1170: turn opposite right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1171: walk left and turn right twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1172: turn right twice and jump left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_JUMP $0))))

1173: run twice and look thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1174: look left after turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1175: jump left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1176: turn right twice and look left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_LOOK $0))))

1177: turn left twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1178: jump left after turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1179: turn opposite left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1180: walk left after turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1182: look opposite left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_RTURN $0))))

1183: look and turn right thrice
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1184: look opposite left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1185: jump right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1186: jump left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1188: look right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1189: turn right twice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1190: walk right after turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1191: look after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1192: walk left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1193: jump opposite right after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1194: look thrice and run twice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RUN (SCAN_RUN $0))))

1195: jump opposite right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_LTURN $0))))

1196: walk right and turn left twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1197: turn left after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LTURN $0))))

1198: turn opposite left after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1199: look opposite right after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1200: look opposite right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LTURN $0))))

1202: look left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_LOOK $0))))

1204: walk left after turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1206: turn left twice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1207: turn right twice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1208: turn opposite right and walk right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1210: turn right and walk opposite left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1211: turn opposite right after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1212: walk opposite right after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1213: run twice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RUN (SCAN_RUN $0))))

1214: turn left after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_LTURN $0))))

1215: look right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_LOOK $0))))

1216: turn opposite left after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1217: run twice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RUN (SCAN_RUN $0))))

1218: turn opposite right and jump left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_JUMP $0))))

1219: turn left twice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1220: turn opposite left and look left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1222: walk opposite right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_LTURN $0))))

1224: turn left after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_LTURN $0))))

1225: look left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1226: turn left thrice after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1227: turn left and look opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1228: turn left and walk opposite right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1229: jump thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1230: look left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1231: turn opposite left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1232: look right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_LOOK $0))))

1233: turn right thrice and walk
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1234: turn right twice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1235: turn right and jump opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1237: look opposite right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1238: look left and turn right twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1239: turn right and walk opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1242: jump left after turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1243: turn opposite left and jump right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_JUMP $0))))

1244: turn right twice and look right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1245: jump opposite right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1246: turn left thrice after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1247: turn opposite right after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1248: run twice and jump thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1249: turn opposite left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1251: turn left twice and walk left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1252: turn opposite right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1253: walk right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_WALK $0))))

1254: turn left twice and walk right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_WALK $0))))

1255: turn left twice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1256: walk opposite left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_RTURN $0))))

1257: turn opposite right after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1258: turn opposite left and walk right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_WALK $0))))

1259: turn right thrice and look
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1260: turn right twice and walk left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_WALK $0))))

1261: jump opposite left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_RTURN $0))))

1262: walk after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1263: turn left and jump opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1265: turn right thrice after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1267: look after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1268: turn right and look opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1269: turn opposite right and jump right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1270: jump opposite left and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_LTURN $0))))

1271: walk after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1272: turn right thrice and jump
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1273: look right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1275: walk and turn right thrice
0.00	(lambda (SCAN_WALK (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1276: look opposite right and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_RTURN $0))))

1277: walk opposite left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1280: look left after turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1281: turn left and walk opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1282: look opposite left after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1283: jump right after turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1285: walk opposite left after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1286: look opposite left and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LTURN $0))))

1287: turn right thrice after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1288: look right after turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1289: walk and turn left thrice
0.00	(lambda (SCAN_WALK (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1290: look right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1291: turn opposite right and look left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_LOOK $0))))

1293: turn right after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_RTURN $0))))

1294: look right and turn left twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1295: jump left and turn right twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1296: walk left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1299: jump after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1300: jump right after turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1301: walk left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_WALK $0))))

1303: jump right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_JUMP $0))))

1304: jump and turn right thrice
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1305: turn left after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_LTURN $0))))

1306: turn right after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_RTURN $0))))

1307: jump opposite left after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1308: turn left thrice and look
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1309: jump right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1310: turn right after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_RTURN $0))))

1311: turn opposite left after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1312: turn opposite left and jump left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1313: turn right twice and walk right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1314: turn right and jump opposite left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1315: walk right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1316: jump opposite left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1317: turn left twice and look left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1318: walk left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1319: walk opposite left and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_LTURN $0))))

1320: walk right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1321: turn right twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1322: turn left after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LTURN $0))))

1323: walk right after turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1324: look left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1325: turn opposite right and walk left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_WALK $0))))

1326: walk thrice and run twice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RUN (SCAN_RUN $0))))

1327: look and turn left thrice
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1328: turn left thrice and walk
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1329: turn left and look opposite right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1330: jump left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_JUMP $0))))

1331: turn right after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_RTURN $0))))

1333: walk opposite right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1334: jump left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1336: jump right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1337: turn left thrice and jump
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1338: turn left thrice after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1340: jump and turn left thrice
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1341: turn right after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_RTURN $0))))

1342: turn right twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1343: look thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1344: turn right after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_RTURN $0))))

1345: turn right and look opposite left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1346: turn opposite right after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1347: jump after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1348: walk right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1349: jump opposite right and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_RTURN $0))))

1350: turn right twice and jump right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1351: walk right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_WALK $0))))

1353: jump left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_JUMP $0))))

1354: turn opposite left and walk left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1355: turn right twice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1356: turn left twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1359: turn opposite right and look right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1360: turn right twice and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1361: turn opposite left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1362: turn right after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

1363: run thrice and turn right twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1364: turn opposite left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1365: run opposite left and run twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1366: turn right twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1367: turn right twice and run thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1368: run twice and run opposite right
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))))

1369: turn left after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

1370: turn left twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1371: turn left thrice and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1372: turn opposite right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1373: turn left twice and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1374: turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1375: turn opposite right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1376: run thrice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1377: turn opposite left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1378: turn opposite right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1380: run opposite left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))))

1381: turn right and turn left thrice
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1382: turn opposite right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1384: turn opposite left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1385: turn left twice and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1386: turn left twice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1387: turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1388: turn right twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1389: turn opposite right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1390: turn right twice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1391: turn right thrice and turn left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

1392: turn opposite left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1393: turn opposite left and run thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1395: run twice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1396: turn opposite left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1397: turn right twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1398: turn opposite right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1399: turn opposite right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1400: run opposite right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))))

1401: run thrice and turn opposite left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1402: run twice and run opposite left
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))))

1403: turn opposite right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1404: run opposite right and run twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1405: turn left thrice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1407: turn right thrice and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1408: turn opposite left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1411: run thrice and run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1412: turn left twice and run thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1413: turn left thrice and turn right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

1415: turn opposite right and run thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1416: turn right twice and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1417: turn right twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1418: turn opposite right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1419: run thrice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1420: turn right and turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1421: turn opposite left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1422: turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1423: turn left twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1424: turn left twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1426: run thrice and turn left twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1427: run twice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1428: turn right after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1429: turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1430: turn left twice and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1431: turn right twice and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1432: turn right thrice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1433: run thrice and turn opposite right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1434: turn left twice and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1435: turn left and turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1436: turn left thrice after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1437: run thrice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1438: run thrice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1439: turn left twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1440: turn right twice and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1441: turn right thrice after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1442: turn left and turn right thrice
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1443: run thrice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1444: turn left after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1445: turn opposite left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1451: look thrice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1455: jump thrice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1458: look twice and look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1463: look thrice and look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1469: walk thrice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1471: walk thrice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1475: jump twice after jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1478: jump twice and jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1479: look thrice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1482: walk twice and walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1488: look thrice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1494: walk thrice and walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1510: walk twice after walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1512: look twice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LOOK (SCAN_LOOK $0))))

1522: jump twice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_JUMP (SCAN_JUMP $0))))

1530: look twice after look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1531: walk twice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_WALK (SCAN_WALK $0))))

1534: look twice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LOOK (SCAN_LOOK $0))))

1549: jump thrice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1553: jump thrice and jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1555: run opposite right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))))

1558: turn left thrice and run twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0)))))

1561: walk thrice and walk right
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN (SCAN_WALK $0))))

1562: run right twice after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

1564: turn right thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

1569: jump thrice and jump left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN (SCAN_JUMP $0))))

1573: run twice and turn left thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

1574: jump left and jump thrice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1575: run twice after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0)))))

1576: walk right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN (SCAN_WALK $0))))

1586: run right twice and turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))))

1590: walk thrice and walk left
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN (SCAN_WALK $0))))

1591: turn left thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

1594: look right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN (SCAN_LOOK $0))))

1596: run twice after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0)))))

1597: jump thrice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1603: walk thrice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1606: run right and run opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))))

1607: walk right and walk thrice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1612: turn right after run right twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))))

1614: look left and look thrice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1618: run left twice and turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))))

1626: walk left after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN (SCAN_WALK $0))))

1631: look thrice and look left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN (SCAN_LOOK $0))))

1636: turn left after run left twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))))

1642: run twice and turn right thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

1645: turn right and run right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

1648: jump right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN (SCAN_JUMP $0))))

1650: jump left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN (SCAN_JUMP $0))))

1658: run left after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

1661: walk thrice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1666: walk left and walk thrice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1676: run left twice after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

1677: look thrice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1680: turn right thrice and run twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0)))))

1682: run right after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

1684: look right and look thrice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1687: look thrice and look right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN (SCAN_LOOK $0))))

1689: jump thrice and jump right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN (SCAN_JUMP $0))))

1691: jump right and jump thrice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1692: turn left and run left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

1694: jump thrice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1698: look left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN (SCAN_LOOK $0))))

1700: look thrice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1707: run opposite right and run right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

1709: run opposite left after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))))

1716: jump thrice and run thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1718: walk twice and walk opposite left
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))))

1722: look opposite right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))))

1733: jump thrice and turn opposite right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1735: jump twice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1743: turn opposite left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1744: look after look left twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))))

1750: turn left twice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1752: jump and jump right twice
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))))

1754: jump right twice and jump
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))))

1757: walk thrice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1759: jump opposite left and jump twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1760: look thrice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1761: look twice and look opposite right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))))

1763: jump twice and jump opposite right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))))

1764: walk thrice and turn opposite left
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1769: look twice after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1771: look opposite left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))))

1779: walk twice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1780: walk thrice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1783: look thrice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1784: jump twice and jump opposite left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))))

1786: walk thrice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1790: turn left twice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1793: turn opposite right and jump thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1796: jump thrice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1803: look thrice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1806: turn opposite left and walk thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1807: look thrice and turn right twice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1812: turn right twice and look thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1818: turn opposite right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1820: jump opposite right and jump twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1829: jump thrice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1834: turn opposite left and look thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1835: jump opposite right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))))

1838: walk thrice and turn right twice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1846: turn right twice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1850: look twice and look opposite left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))))

1852: turn opposite left and jump thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1854: jump thrice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1863: run thrice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1864: look left twice after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))))

1868: look opposite left and look twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1871: turn right twice and jump thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1876: walk right twice and walk
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))))

1884: jump opposite left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))))

1885: look thrice and turn left twice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1887: walk opposite right and walk twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1891: look twice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1892: look thrice and turn opposite right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1893: jump thrice and turn right twice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1894: walk twice and walk opposite right
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))))

1898: walk thrice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1900: turn right twice and walk thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1908: walk and walk right twice
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))))

1914: walk opposite left and walk twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1919: jump thrice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1920: turn opposite right and walk thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1922: look thrice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1924: turn right twice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1931: walk opposite left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))))

1939: turn opposite right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1940: turn opposite right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1944: turn left twice and jump thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1946: walk twice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1951: look opposite right and look twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1953: look thrice and turn opposite left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1955: walk opposite right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))))

1957: walk and walk left twice
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))))

1960: jump twice after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1962: run thrice and jump thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1963: walk thrice and turn left twice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1964: jump thrice and turn left twice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1970: turn opposite left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1976: turn right twice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1978: turn opposite left after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1983: turn opposite right and look thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1989: jump thrice and turn opposite left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1993: turn left twice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1994: turn left twice and look thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1998: turn left twice and walk thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2001: walk thrice and turn opposite right
-0.10	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
-2.34	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN (SCAN_RTURN $0))))

2008: jump thrice after turn opposite left
-0.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
-2.37	(lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2019: turn left twice and run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2020: run opposite left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2026: run opposite left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2031: run opposite left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2033: run opposite right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2036: turn opposite left twice and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2038: run thrice after run opposite left
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RUN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2042: run opposite left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2048: run opposite right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2050: run and turn opposite left twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2051: turn right twice and run opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2053: run after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2057: turn opposite right and run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2063: turn opposite right after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2066: run opposite right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2072: run opposite right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2078: turn opposite right twice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2079: run opposite left and run thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RUN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2080: run opposite right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2085: turn right twice and run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2086: run thrice and run opposite left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2091: run opposite left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2097: run opposite right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2099: turn around right after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2101: turn opposite left after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2106: run after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2125: run thrice and run opposite right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2146: run opposite left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2165: turn right twice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2173: run and turn opposite right twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2176: turn opposite right and run opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2181: turn left twice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2182: run after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2185: run opposite left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2189: turn right twice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2192: run opposite left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2193: turn opposite left twice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2197: run opposite right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2198: run opposite left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2204: turn around right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2211: run and turn around right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2214: run and turn around left
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2228: run thrice after run opposite right
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RUN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2230: run right after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2240: turn opposite left and run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2242: turn left twice and run opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2244: turn around left and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2257: turn opposite left and run opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2258: turn opposite right after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2262: run left after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2265: run opposite right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2272: run after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2277: turn right thrice and run right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2281: turn around left after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2283: turn opposite right twice and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2293: turn left thrice and run left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2296: run opposite right and run thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RUN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2298: run opposite right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2299: turn left twice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2305: turn opposite left after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2312: run thrice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2313: look opposite right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2314: turn around right and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2315: jump opposite right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2317: look and turn opposite left twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2318: walk right after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2319: walk opposite right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2320: turn opposite right twice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2321: turn opposite right twice and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2322: turn left twice and look opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2323: walk opposite left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2324: walk opposite left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2325: jump right after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2326: turn around left after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2327: turn left twice and jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2328: turn opposite left and jump opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2329: turn around left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2330: turn opposite left after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2331: turn opposite left after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2333: walk opposite right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2334: walk left after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2335: jump opposite right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2336: turn right thrice and look right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2337: turn opposite left after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2338: run thrice and walk opposite left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2340: turn right twice and walk opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2341: turn left twice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2342: walk opposite left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2343: look opposite left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2344: look and turn around right
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2345: turn left twice after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2346: turn opposite right and look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2347: jump after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2348: jump opposite right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2349: turn opposite right and walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2350: jump opposite right and run thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2351: walk opposite right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2352: jump opposite right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2354: turn around right after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2355: jump opposite right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2356: turn opposite right after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2358: jump opposite right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2359: turn left twice and walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2361: walk opposite right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2362: jump opposite left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2363: walk opposite left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2364: look opposite left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2366: walk opposite left and run thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2368: look opposite right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2369: turn around left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2370: walk opposite left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2371: walk opposite left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2372: jump opposite left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2373: run thrice and jump opposite right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2374: turn around left and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2375: turn left twice and walk opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2376: turn right twice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2377: turn left twice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2378: jump opposite left and run thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2379: jump opposite right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2380: jump opposite left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2381: turn right twice after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2382: turn opposite left and look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2383: turn right twice after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2384: look and turn opposite right twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2386: turn opposite right and jump opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2388: look opposite left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2389: turn opposite left twice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2390: turn around right after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2391: look opposite left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2392: turn opposite left after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2393: walk opposite right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2394: walk and turn opposite left twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2395: look opposite right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2396: look opposite left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2397: walk opposite left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2398: turn opposite left twice and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2399: turn opposite left after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2400: walk opposite left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2401: turn opposite left twice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2402: look opposite left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2405: turn right twice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2407: walk opposite right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2408: turn right twice and walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2409: jump and turn around left
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2410: look opposite right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2411: jump opposite left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2412: turn opposite right after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2413: look after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2414: turn opposite right twice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2415: run thrice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2416: walk after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2417: jump after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2418: jump and turn around right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2419: turn right twice and jump opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2420: walk and turn opposite right twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2421: look opposite left and run thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2422: turn left twice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2423: jump after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2424: turn opposite right after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2425: turn opposite left twice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2428: look opposite right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2430: turn opposite left and walk opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2431: turn opposite right and walk opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2432: turn opposite right and look opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2433: turn right thrice and walk right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2434: turn opposite right after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2435: turn around right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2436: walk opposite right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2437: turn left twice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2438: turn opposite left and jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2439: turn opposite right after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2440: jump opposite left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2441: turn left twice and jump opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2442: look opposite right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2443: jump after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2444: look after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2446: look after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2447: turn left thrice and walk left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2448: walk and turn around right
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2449: look opposite right and run thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2450: run thrice and jump opposite left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2452: turn around right after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2453: look opposite left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2454: walk opposite right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2455: run thrice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2457: turn left thrice and jump left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2458: turn around right and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2459: jump and turn opposite left twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2460: run thrice and look opposite left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2461: jump opposite left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2462: turn opposite left after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2463: jump and turn opposite right twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2464: turn opposite right and jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2465: turn opposite right twice and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2466: turn left twice and look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2467: turn right thrice and jump right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2469: turn opposite left twice and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2470: turn opposite right after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2471: look opposite right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2472: walk after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2473: run thrice and look opposite right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2474: run thrice after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2475: turn opposite left and walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2476: look opposite right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2478: look opposite left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2479: turn right twice and look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2481: walk opposite right and run thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2482: walk after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2485: walk opposite left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2486: turn right twice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2487: walk after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2488: turn around left after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2489: look opposite left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2491: walk and turn around left
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2492: look left after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2493: look right after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2494: run thrice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2495: jump opposite left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2496: jump left after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2497: turn right twice and jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2498: turn opposite left twice and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2499: turn left thrice and look left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2500: look and turn around left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2501: jump opposite left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2502: turn right twice and look opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2503: turn opposite right twice and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2504: turn left twice after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2506: look opposite right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2507: turn right twice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2508: turn opposite right twice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2509: jump opposite right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2510: jump opposite left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2512: turn opposite left and look opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2513: run thrice and walk opposite right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2514: run thrice after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2517: jump opposite right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2518: turn around left and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2521: look after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2522: walk opposite right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2526: turn right thrice after turn right twice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2527: turn left thrice after turn left twice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2528: walk thrice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2529: turn around left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

2531: turn opposite right twice and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

2533: run thrice after turn right thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2535: turn around left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2536: turn right thrice after turn left twice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2539: run thrice after turn left thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2540: turn around right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2541: turn opposite right twice and turn right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2542: turn left thrice after turn opposite left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2543: turn left after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

2544: turn left after turn around left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2545: jump thrice and jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2546: look thrice and jump thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2549: look thrice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2550: look thrice and look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2551: turn opposite left after turn right thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2552: turn right and turn around left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2557: turn right and turn opposite left twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2559: turn around left and turn left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2561: turn around right after turn right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2564: turn left and turn around right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2566: turn left and turn around left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2568: turn opposite right after turn right thrice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2570: walk thrice and jump thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2571: turn left thrice and run thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2573: turn right twice and turn left thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2574: turn right after turn opposite right twice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2576: turn left and turn opposite right twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2577: turn left after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

2578: turn left thrice and turn opposite right
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2579: jump thrice and walk thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2585: jump thrice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2586: turn left thrice after run thrice
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2587: turn opposite right twice after turn right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2590: turn opposite right twice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2593: turn right and turn opposite right twice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2594: turn right thrice after turn opposite right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2595: turn right after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

2597: turn left twice and turn left thrice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2598: turn opposite right after turn left thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2600: turn opposite left twice after turn left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2601: turn right after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

2605: jump thrice and look thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2607: run thrice and turn right thrice
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2608: turn opposite left twice and turn left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2609: turn opposite left after turn left thrice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2610: turn opposite left and turn right thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2611: turn opposite right and turn right thrice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2612: walk thrice and look thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2615: turn opposite left twice and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

2617: turn left thrice after turn opposite right
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2618: turn right thrice and run thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2620: walk thrice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2621: turn around right and turn right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2623: turn right thrice after run thrice
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2624: turn right thrice and turn opposite left
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2625: turn right thrice and turn right twice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2627: turn right and turn around right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2629: turn left thrice after turn right twice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2631: turn left thrice and turn left twice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2632: turn opposite left twice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2634: turn left twice after turn right thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2635: jump thrice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2636: turn right thrice and turn opposite right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2640: turn left twice after turn left thrice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2641: turn right twice after turn left thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2642: walk thrice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2643: turn opposite right and turn left thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2644: walk thrice and walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2647: turn right thrice after turn opposite left
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2648: turn right twice and turn right thrice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2649: turn right thrice and turn left twice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2651: turn left thrice and turn right twice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2652: turn left and turn opposite left twice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2657: turn right after turn around right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2660: turn around left after turn left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2662: look thrice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2664: turn left twice and turn right thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2666: turn left thrice and turn opposite left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2667: look thrice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2670: turn right twice after turn right thrice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2673: turn around right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

2674: look thrice and walk thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2677: run thrice and turn left thrice
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2678: jump thrice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2680: turn opposite left and turn left thrice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2681: turn left after turn opposite left twice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2684: look thrice and run opposite right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2690: run opposite right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2692: run opposite left and look thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2693: run opposite left and jump thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2694: run opposite right and walk thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2695: walk thrice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2698: jump thrice and run opposite right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2699: run opposite left and walk thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2701: jump thrice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2702: run opposite right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2705: jump thrice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2710: look thrice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2711: run opposite left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2713: run opposite right and look thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2714: walk thrice and run opposite right
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2716: walk thrice and run opposite left
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2718: run opposite left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2722: look thrice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2730: jump thrice and run opposite left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2734: run opposite left after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2739: walk thrice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2741: look thrice and run opposite left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2745: run opposite right and jump thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2748: run opposite right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2755: look opposite right and walk thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2760: look opposite left and look thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LOOK $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2770: jump opposite right and look thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2776: jump opposite left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2780: jump thrice after jump opposite right
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_JUMP $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2783: walk thrice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2784: jump thrice and jump opposite right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2789: walk opposite left and jump thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2798: jump thrice after jump opposite left
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_JUMP $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2807: jump opposite left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2813: look opposite right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2814: walk opposite right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2820: look opposite right and jump thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2826: look thrice after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2827: look opposite left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2834: look thrice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2838: walk opposite left and look thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2842: look opposite left and jump thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2843: walk thrice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2848: look thrice after look opposite right
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LOOK $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2850: look thrice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2864: walk opposite right and jump thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2865: look thrice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2873: jump thrice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2881: look thrice and walk opposite left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2885: jump thrice and look opposite left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2886: look thrice and jump opposite left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2887: jump thrice and jump opposite left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2893: look opposite right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2894: look thrice and look opposite left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2898: jump opposite right and walk thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2900: look opposite left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2902: jump thrice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2909: walk thrice and look opposite right
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2914: jump thrice and walk opposite left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2917: look thrice after look opposite left
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LOOK $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2925: jump thrice after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2937: jump opposite right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2943: look thrice and jump opposite right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2944: look opposite right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2945: jump thrice and look opposite right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2946: walk opposite right and look thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2949: look opposite right and look thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LOOK $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2958: look thrice and look opposite right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2965: jump thrice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2970: jump opposite left and look thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2975: walk opposite right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2985: look thrice and walk opposite right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2986: jump opposite left and jump thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_JUMP $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2988: walk thrice and jump opposite right
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2993: jump thrice and walk opposite right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2996: walk opposite left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2999: walk opposite left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

3004: jump opposite right and jump thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_JUMP $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

3005: jump opposite right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

3010: jump opposite right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

3729: turn opposite left after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3732: turn left twice after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3733: turn around left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3734: turn around right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3735: turn right thrice and turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3736: turn opposite left and turn opposite right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3737: turn opposite left twice and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3738: turn around left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3739: turn around right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3740: turn opposite left twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3742: turn around right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3743: turn around left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3744: turn left thrice after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3745: turn opposite left after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3746: turn opposite right after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3747: turn around left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3749: turn right twice after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3750: turn right twice after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3752: turn opposite left after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3753: turn right twice and turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3755: turn opposite left twice and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3758: turn left twice and turn around right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3767: turn left twice after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3768: turn opposite right twice and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3769: turn right twice and turn around left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3770: turn around right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3771: turn opposite right twice and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3774: turn around left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3775: turn right twice and turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3777: turn around right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3780: turn opposite right twice and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3782: turn opposite left twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3784: turn opposite right twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3787: turn around left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3788: turn around left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3789: turn opposite right after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3793: turn opposite right twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3795: turn left twice after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3796: turn right twice after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3798: turn opposite right after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3800: turn left twice and turn opposite right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3802: turn left thrice and turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3804: turn left twice and turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3805: turn opposite right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3807: turn opposite right twice and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3809: turn opposite left twice and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3811: turn opposite right and turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3813: turn opposite left twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3816: turn opposite right and turn around left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3817: turn opposite left after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3820: turn around left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3821: turn opposite right twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3823: turn left twice after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3824: turn right thrice after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3825: turn opposite left and turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3826: turn opposite right and turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3828: turn right twice and turn opposite left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3831: turn opposite right after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3832: turn around right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3834: turn opposite left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3838: turn opposite right and turn opposite left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3839: turn opposite left and turn around right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3840: turn around right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3841: turn opposite left and turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3847: turn opposite left twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3848: turn opposite left twice and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3849: turn right twice after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3850: turn around right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3853: turn opposite right twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3855: turn left twice and turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

6435: turn opposite left twice and turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

6436: turn left twice and turn opposite left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

6438: turn around left after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

6439: turn around right and turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

6447: turn opposite right twice and turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

6455: turn opposite left thrice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

6473: turn opposite left and turn opposite left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

6483: turn left twice after turn opposite left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

6489: turn opposite right twice after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

6494: turn opposite right after turn opposite right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

6495: turn opposite right thrice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

6503: turn right twice and turn opposite right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

6508: turn around left and turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

6509: turn around left after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

6517: turn opposite left thrice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

6551: turn opposite left thrice and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

6552: turn opposite right thrice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

6553: turn opposite right thrice and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

6555: turn opposite right twice after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

6565: turn around right and turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

6568: turn opposite left twice after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

6569: turn opposite left thrice and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

6570: turn opposite left twice and turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

6573: turn right twice after turn opposite right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

6577: turn around right after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

6580: turn around right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

6584: turn around left and turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

6591: turn opposite left after turn opposite left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

6595: turn opposite left twice after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

6598: turn around right after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

6612: turn opposite right thrice and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

6617: turn opposite right and turn opposite right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

6621: turn opposite right twice and turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

6622: turn around left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

Compression message saved to: compressionMessages/2020-11-27T20:38:06.441166
Compression backend will run for most 20 iterations
Total number of candidates: 71402
Constructed version spaces and coalesced candidates in 14.2607s.
Trimmed down the beam, have only 300 best candidates (M)
Rewrote topK in 36.6746s.
Initial score: -16843.661840
 (M)New frontiers length 300 Scored candidates (M) in 17.2378s.
Improved score to -16826.508907 (dScore=17.152932) w/ new primitive (M)
	#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) : tstr -> tstr
rewrote all of the frontiers (M) in 7.84945s.
Completed one step of memory consolidation in 1.46069m.
New primitive is used 17 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))
Total number of candidates: 70636
Constructed version spaces and coalesced candidates in 13.3527s.
Trimmed down the beam, have only 300 best candidates (M)
Rewrote topK in 35.3845s.
Initial score: -16826.508907
 (M)New frontiers length 300 Scored candidates (M) in 18.3874s.
Improved score to -16810.727824 (dScore=15.781084) w/ new primitive (M)
	#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) : tstr -> tstr
rewrote all of the frontiers (M) in 7.90288s.
Completed one step of memory consolidation in 1.44878m.
New primitive is used 17 times in the best programs in each of the frontiers.
Here is where it is used:
  (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))
  (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))
Total number of candidates: 69871
Constructed version spaces and coalesced candidates in 13.3315s.
Trimmed down the beam, have only 300 best candidates (M)
Rewrote topK in 35.5519s.
Initial score: -16810.727824
 (M)New frontiers length 300 Scored candidates (M) in 19.3125s.
No improvement possible. (M) 
Completed one step of memory consolidation in 1.32408m.
completed ocaml compression in 4.23551m.
Finished consolidation.
Induced a grammar in 255.3 seconds
Grammar after iteration 4:
-1.324049	t0	$_
-2.451724	tstr -> tstr	SCAN_RUN
-2.477325	tstr -> tstr	SCAN_LOOK
-2.480572	tstr -> tstr	SCAN_JUMP
-2.518688	tstr -> tstr	SCAN_WALK
-2.644371	tstr -> tstr	SCAN_RTURN
-2.667629	tstr -> tstr	SCAN_LTURN
-2.180817	tstr -> tstr	#(lambda (SCAN_RTURN (SCAN_RTURN $0)))
-2.197828	tstr -> tstr	#(lambda (SCAN_LTURN (SCAN_LTURN $0)))
-3.858769	tstr -> tstr	#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))
-3.884914	tstr -> tstr	#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))
-3.898248	tstr -> tstr	#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))
-4.042382	tstr -> tstr	#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))
-5.052047	tstr -> tstr	#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))
-5.052047	tstr -> tstr	#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))
Currently using this much memory: 351727616
ecIterator count 3
Currently using this much memory: 351727616
Currently using this much memory: 351727616
Using a waking task batch of size: 2000
Disabling parallelism on the Python side because we only have one job.
If you are using ocaml, there could still be parallelism.
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 0. |finished| = 1.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.564693.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 0. |finished| = 0.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 3.000000 <= MDL < 4.500000. Timeout 4.044025.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 0. |finished| = 8.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 4.500000 <= MDL < 6.000000. Timeout 3.152471.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 0. |finished| = 8.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 6.000000 <= MDL < 7.500000. Timeout 2.690768.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 204. |finished| = 6.)
(python) Launching tstr -> tstr (2000 tasks) w/ 20 CPUs. 7.500000 <= MDL < 9.000000. Timeout 1.534868.
	(ocaml: 20 CPUs. shatter: 200. |fringe| = 206. |finished| = 0.)
We enumerated this many programs, for each task:
	
Generative model enumeration results:
HIT 9484: turn around left twice after turn right twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9485: turn opposite left after turn around right twice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9487: turn opposite right and turn around right twice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9488: turn around right twice and turn opposite right w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9489: turn opposite right thrice after turn around right w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9499: turn left twice and turn around left twice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9507: turn opposite left thrice after turn around left w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9515: turn opposite left twice and turn opposite left thrice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9523: turn around left twice and turn right twice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9527: turn around left after turn opposite left thrice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9530: turn opposite right twice after turn opposite right thrice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9532: turn around left twice and turn opposite right w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9536: turn opposite left twice after turn opposite left thrice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9538: turn around left twice and turn left twice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9539: turn around right twice and turn opposite left w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9542: turn opposite left thrice and turn around left w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9543: turn left twice after turn around left twice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9544: turn opposite right thrice and turn around right w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9546: turn opposite right after turn around right twice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9547: turn opposite left thrice and turn opposite left twice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9553: turn opposite right after turn around left twice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9558: turn left twice and turn around right twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9559: turn around right twice and turn right twice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9560: turn opposite left thrice after turn opposite left twice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9567: turn opposite left and turn around right twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9570: turn right twice after turn around right twice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9575: turn opposite right twice and turn opposite right thrice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9576: turn opposite right thrice and turn opposite right twice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9578: turn around left and turn opposite left thrice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9587: turn around left twice after turn opposite left w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9594: turn opposite right thrice after turn opposite right twice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9600: turn opposite left after turn around left twice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9603: turn around left twice after turn left twice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9611: turn opposite right and turn around left twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9616: turn opposite left and turn around left twice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9617: turn around right and turn opposite right thrice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9619: turn around right twice after turn right twice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9620: turn around right twice after turn opposite left w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9623: turn around left twice after turn opposite right w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9626: turn right twice after turn around left twice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9634: turn right twice and turn around left twice w/ (lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9637: turn around right after turn opposite right thrice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9639: turn around right twice after turn left twice w/ (lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9641: turn left twice after turn around right twice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9645: turn around right twice and turn left twice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9648: turn around right twice after turn opposite right w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
HIT 9655: turn around left twice and turn opposite left w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -8.740676 ; log likelihood = 0.000000
HIT 9656: turn right twice and turn around right twice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -8.723665 ; log likelihood = 0.000000
Hits 48/2000 tasks
Average description length of a program solving a task: 8.732170 nats
Generative model average:  4 sec.	median: 4 	max: 4 	standard deviation 0
Currently using this much memory: 358330368
Frontiers discovered top down: 48
Total frontiers: 1973
Using an ensemble size of 1. Note that we will only store and test on the best recognition model.
Currently using this much memory: 358330368
(ID=0): Training a recognition model from 1973 frontiers, 0% Helmholtz, feature extractor ScanFeatures.
(ID=0): Got 0 Helmholtz frontiers - random Helmholtz training? : True
(ID=0): Contextual? False
(ID=0): Bias optimal? False
(ID=0): Aux loss? False (n.b. we train a 'auxiliary' classifier anyway - this controls if gradients propagate back to the future extractor)
(ID=0):  Epoch 1 Loss 6.591169387509964
(ID=0):  	vs MDL (w/o neural net) 8.725715036130257
(ID=0):  	1973 cumulative gradient steps. 454.103566 steps/sec
(ID=0):  	14-way auxiliary classification loss 0.3906798495883212
(ID=0):   Trained recognition model in 61.839967012405396 seconds
Currently using this much memory: 357183488
Trained an ensemble of 1 recognition models, now enumerating.
Enumerating from recognizer 0 of 1
Evaluated recognition model in 0.9 seconds
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 5.000000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.833104.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.608200.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.499166.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.730154.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.394191.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.284213.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.177563.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.959699.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 4.080585.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.863039.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.759429.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.655016.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.550680.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.448212.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.341002.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.234189.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.127379.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 3.019786.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.914329.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.806712.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814760.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816413.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816108.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814945.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821696.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821847.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821671.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821526.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822387.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822810.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823452.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823946.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822889.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821612.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822952.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825823.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.820756.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815881.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814989.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809151.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809696.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.810390.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811965.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.812115.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.812493.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811826.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809397.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.808499.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.808091.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.807532.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.806534.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.804851.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809594.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811789.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809776.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818819.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821909.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823194.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823195.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.820770.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816588.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816071.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815365.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814731.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815249.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.820228.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818831.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818869.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.819250.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.752076.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.687252.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.623005.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.556977.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.546421.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.545605.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.545929.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.549364.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.548643.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.547431.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.552788.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.549893.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.468037.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.404430.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.339783.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.281904.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.280511.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.280618.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.279374.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.340872.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.404173.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.469424.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.535187.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.554099.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.554410.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.554452.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.550558.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.548388.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.546367.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.546474.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.489233.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.543616.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.610240.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.671545.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.735050.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.736594.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.716418.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.637333.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.572062.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.507568.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.478580.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.478662.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.479206.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.479448.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.479263.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.476635.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.480231.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.479443.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.478815.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.526927.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.551409.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.551087.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.551917.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.552801.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.554106.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.554860.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.645768.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.712184.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.777225.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.810218.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.810881.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811188.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811645.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811087.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815113.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.820468.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823190.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.824465.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817322.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.812848.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814084.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814103.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.813978.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814428.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814571.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814243.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814628.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.812141.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815072.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815234.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815262.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815323.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815755.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815237.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816476.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817009.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821231.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.824627.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.826089.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822498.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.820061.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816471.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.813560.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811893.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.810133.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809041.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.808826.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811465.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.810238.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809895.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.810129.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.808912.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809202.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809138.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809021.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.807902.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809170.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.813428.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816519.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818661.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818076.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817936.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.813089.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815397.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816085.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816052.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815910.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816908.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.813110.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809248.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.808985.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809021.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.808811.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.808843.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809176.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.810932.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811255.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811183.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816062.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.819962.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822119.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822374.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815754.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.810588.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.737768.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.671076.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.587672.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.525679.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.475008.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.473713.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.473338.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.472934.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.472534.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.471437.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.470510.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.469288.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.468891.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.468746.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.467626.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.461353.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.462914.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.464222.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.467329.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.531373.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.595587.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.681009.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.743888.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.806664.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.808095.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.808645.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809551.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809335.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.805720.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.804832.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.805575.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.806542.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.807412.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.808316.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817277.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821101.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822914.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818710.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811050.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.808310.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.807699.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.807679.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811964.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809629.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809803.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809615.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.810993.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815417.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817613.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817461.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817357.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816907.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816653.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816515.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816684.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817114.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822352.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.829031.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.829319.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.827627.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825151.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823920.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.824122.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.824057.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823895.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823637.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822375.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822473.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821604.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822570.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823599.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823465.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821158.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.813758.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.813910.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.813492.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.813590.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816227.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821025.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821459.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821186.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.812396.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.808943.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.808562.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.808239.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.808327.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.808062.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.808307.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.807752.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.806766.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.806315.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.810658.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814010.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814457.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.812838.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811941.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.812160.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811965.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817492.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.819158.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.824975.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825773.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.820879.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815295.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.812737.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811879.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.812292.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.810661.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.810815.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.810252.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809024.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809872.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811010.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.812986.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814452.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814403.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814030.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.813134.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809881.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.809518.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814728.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817806.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821009.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817867.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.813324.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811927.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816377.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814655.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815635.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818931.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816462.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815968.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815534.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815033.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815564.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815830.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818587.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816840.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816793.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816540.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822235.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.826023.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.830787.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.830181.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825000.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821193.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818231.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815255.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815888.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816282.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815838.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816839.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816913.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814029.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.813676.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816829.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.810521.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.806118.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.806232.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.806113.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.806551.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.807154.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.812382.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815644.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815384.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814759.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815320.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811589.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811306.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811555.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.811502.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.810952.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.813989.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.812780.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.812923.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815461.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822174.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821939.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822271.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822517.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822999.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822674.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822115.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825640.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.830270.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.829041.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.828263.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823091.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.819638.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.819784.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.820548.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821856.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821393.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821465.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822453.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823214.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823339.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823676.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822886.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823313.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823517.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823436.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823517.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823762.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.830793.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.833372.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.837004.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.837011.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.833757.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.830281.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.824472.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.824834.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823172.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823687.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822685.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822371.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821979.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822218.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.820456.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.820314.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.820712.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.820706.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818017.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817493.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817472.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816985.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821330.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823401.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822873.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825303.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821510.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817847.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817300.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817405.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817729.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817414.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817663.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818841.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815964.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815716.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815357.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.819054.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816647.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816966.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816800.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817874.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818066.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.820863.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825063.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825049.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825643.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821736.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818265.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815223.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.813954.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814273.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.813671.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818620.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816837.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816908.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816845.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818017.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817432.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817623.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817754.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818506.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817307.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815081.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816192.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.820215.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825137.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.830481.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.832631.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.827762.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825587.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825589.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825093.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825680.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825997.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.826592.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.826147.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.826207.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.826400.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.826565.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825998.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.826717.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.831574.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.830516.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.830414.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.830758.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.831758.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.833161.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.837517.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.837183.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.831360.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.829155.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.826258.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825105.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825163.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.826656.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.826436.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.826471.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.826455.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.826758.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.826784.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.827283.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.826504.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.826483.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825697.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825595.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.824906.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.825438.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.831055.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.834875.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.834449.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.834616.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.826108.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.823606.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822641.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822613.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822046.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816989.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816358.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815318.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815291.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815571.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.815469.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816550.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816416.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814186.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.813797.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.814192.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.813843.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.819333.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.820152.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.824873.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.824847.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.820343.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817147.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.816238.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.822450.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821016.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821636.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821546.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821239.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.819088.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818550.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818660.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.819560.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818318.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.817871.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818366.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.818684.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.819457.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.821829.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 2.827606.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.663172.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.438334.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.322807.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.546376.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.207227.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 2.096475.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.986736.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.768868.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.893354.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.674363.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.570939.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.468810.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.364810.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.262677.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.155099.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 1.048424.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.941578.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (9 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.834059.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.728053.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.618005.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.630359.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.639998.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.644171.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.643471.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.639620.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.640443.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.566940.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.500302.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.500687.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.569290.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.631430.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.642951.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.641696.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.644374.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.645094.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.647686.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.644735.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.652251.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.648030.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.642834.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.641853.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.646988.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.646089.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.647107.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.647792.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.578336.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.509456.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.535293.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.603843.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.605825.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.584413.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.500236.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.530202.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.596275.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.657042.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.691901.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.690692.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.696302.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.695116.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.695446.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.700168.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.705923.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.709476.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.710841.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.704243.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.700185.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.701683.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.701595.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.701824.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.702286.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.703172.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.703457.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.707708.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.707471.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.714042.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.716200.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.705890.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.698632.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.696643.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.695153.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.696051.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.696454.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.700789.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.704142.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.705737.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.701860.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.700054.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.696301.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.693879.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.691351.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.688031.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.687062.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.691441.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.692494.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.691993.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.702169.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.709048.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.711717.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.706108.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.699846.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.696797.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.694813.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.695234.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.698975.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.702662.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.704948.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.704832.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.704918.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.701334.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.703256.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.703873.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.703713.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.702774.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.703640.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.699347.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.695962.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.695445.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.699862.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.706835.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.711406.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.701247.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.698869.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.695351.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.692297.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.696990.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.700407.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.702496.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.704118.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.697512.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.692601.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.620285.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.553472.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.566262.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.630162.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.693213.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.695120.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.697119.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.698529.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.699582.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.697804.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.701549.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.701235.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.705877.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.713520.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (7 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.722774.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.728133.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.731321.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.725747.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.718253.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.710455.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.712487.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.709962.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.709959.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.714644.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.712657.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.712789.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.709080.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.710176.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.714357.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.716138.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.715604.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.715365.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.715017.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.712569.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.718431.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.725154.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.732245.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.737831.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.742041.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.737873.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.733355.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.729828.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.728494.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.728166.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.725566.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.728324.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.728462.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.727098.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.727210.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.727110.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.728087.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.729265.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.733266.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.729928.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.722822.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.721201.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.724987.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (6 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.730308.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.729965.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.738629.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.667493.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.600126.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.528803.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.538456.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.602563.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.670455.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.730340.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.743753.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.736278.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.733633.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.732928.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.732593.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.731324.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.739143.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.737409.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.736493.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.737474.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.739044.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.741326.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.743188.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.743683.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.743664.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.743931.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.746817.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.749470.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.758096.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.759730.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.761558.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.753179.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.747800.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.741289.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.745549.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.743618.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.744572.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.745426.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.742441.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.741844.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.741023.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.740571.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.740757.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.741259.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.741623.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.742495.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (5 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.737998.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.737471.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.742490.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.753961.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.762371.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.770454.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.768669.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.760726.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.752656.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.747273.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.748977.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.747909.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.747547.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.747987.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.749475.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.748619.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.745060.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.745105.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.745932.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.743598.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.736893.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.736573.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.736675.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.736583.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.737120.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.744402.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.754143.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.758328.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.758778.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.753008.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.745238.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.741804.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.739253.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.738829.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.738137.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.742778.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.741191.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.742942.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.741596.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.749337.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.749451.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.750564.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.747819.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.748354.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.748636.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.747138.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.750706.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.756549.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.762059.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.765483.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.763689.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.759744.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.754927.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.752681.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.751278.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.750061.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.750456.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.757498.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.758053.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.758920.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.758647.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.762926.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.761007.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.761410.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.761209.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.760094.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.760424.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.766707.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.765121.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.768546.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.774951.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.774617.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.774177.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.769459.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.764069.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.755923.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.750921.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.747376.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.746495.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.744771.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.744662.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.742889.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.742405.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.743546.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.744304.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.741928.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.741469.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.744961.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.744364.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.748509.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.750194.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.749933.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.752608.
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.751876.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.752797.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.756991.
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.755235.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.751314.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.749129.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.745604.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.746006.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.742696.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.742242.
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.741712.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.745338.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.742668.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.743087.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.743425.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.743425.
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.743876.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.745972.
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.750470.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.750386.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.753404.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.750062.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.750963.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.753547.
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.756295.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.760679.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.755435.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.754138.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.749696.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.747411.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.747377.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.748717.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.748165.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.747394.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.748549.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.749556.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.748580.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.743998.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.745040.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.748890.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.753955.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.759270.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.761703.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.755730.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.749459.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.753888.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.759560.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.763378.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.764971.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.759951.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.751157.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.740547.
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.737675.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.735558.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.732064.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.657377.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.603779.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.538150.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.548839.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.579679.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.580925.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.581223.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.582190.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.587952.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.592325.
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.593132.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.593559.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.585971.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.602836.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.662177.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.720702.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.737224.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.673968.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.613286.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.594034.
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.594647.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.593539.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.593955.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.596036.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.596486.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.595254.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.595706.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.597757.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.599041.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.605941.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.607525.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.612584.
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.613271.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (8 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.606033.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.606060.
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.627598.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.693146.
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.746251.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.770751.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (4 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.767908.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.771919.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.768007.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.766874.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.767273.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.768372.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.766707.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.765941.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.766089.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.766326.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.767044.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (2 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.769160.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 0.775242.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
(python) Launching tstr -> tstr (3 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 0.613135.
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
	(ocaml: 1 CPUs. shatter: 1. |fringe| = 1. |finished| = 0.)
We enumerated this many programs, for each task:
	 [31, 11, 8, 9, 7, 9, 8, 9, 13, 13, 10, 10, 9, 8, 9, 10, 9, 9, 9, 10, 10, 11, 9, 9, 8, 8, 8, 11, 8, 8, 9, 7, 9, 8, 8, 3, 3, 3, 9, 2, 2, 1, 9, 3, 4, 3, 3, 10, 7, 8, 10, 11, 8, 9, 2, 3, 7, 3, 3, 3, 1, 2, 1, 2, 3, 8, 1, 3, 3, 3, 3, 8, 1, 31, 9, 3, 9, 8, 4, 8, 8, 8, 3, 12, 12, 1, 8, 9, 9, 11, 9, 10, 2, 10, 1, 11, 2, 8, 13, 8, 10, 2, 11, 9, 11, 11, 31, 7, 9, 9, 10, 8, 9, 8, 7, 7, 9, 3, 3, 2, 2, 3, 3, 2, 8, 3, 9, 3, 4, 2, 2, 1, 4, 3, 2, 3, 2, 3, 4, 3, 2, 3, 3, 2, 2, 7, 2, 3, 2, 4, 3, 1, 2, 3, 2, 3, 3, 7, 3, 3, 3, 8, 3, 8, 2, 4, 2, 7, 9, 2, 2, 1, 4, 4, 7, 3, 9, 2, 9, 8, 2, 2, 3, 8, 2, 3, 4, 8, 3, 4, 2, 2, 2, 2, 3, 2, 1, 3, 4, 2, 8, 4, 2, 3, 10, 8, 2, 3, 2, 3, 3, 2, 4, 9, 6, 9, 8, 2, 4, 2, 2, 3, 11, 3, 9, 2, 7, 11, 7, 3, 8, 1, 3, 8, 9, 3, 9, 8, 8, 9, 7, 4, 9, 2, 3, 2, 6, 3, 9, 2, 2, 10, 3, 3, 2, 10, 9, 9, 9, 3, 8, 3, 8, 8, 11, 8, 1, 2, 8, 7, 8, 8, 2, 8, 4, 8, 8, 11, 4, 2, 8, 2, 9, 3, 9, 2, 9, 1, 2, 4, 2, 2, 8, 7, 2, 7, 9, 10, 8, 4, 8, 8, 7, 3, 8, 8, 10, 4, 3, 3, 1, 2, 7, 6, 3, 8, 2, 7, 3, 8, 3, 2, 8, 8, 2, 9, 3, 3, 11, 2, 8, 3, 3, 4, 2, 2, 7, 9, 2, 2, 8, 2, 7, 8, 7, 7, 8, 2, 7, 8, 7, 3, 7, 4, 7, 1, 8, 3, 8, 9, 1, 6, 8, 3, 8, 3, 2, 4, 4, 1, 2, 7, 7, 3, 7, 1, 10, 1, 4, 1, 9, 8, 8, 10, 9, 2, 8, 9, 3, 3, 11, 1, 3, 7, 8, 9, 8, 9, 3, 9, 3, 4, 3, 8, 2, 4, 8, 2, 3, 3, 9, 3, 7, 3, 1, 9, 9, 8, 2, 8, 3, 4, 9, 9, 9, 2, 8, 8, 9, 2, 2, 2, 11, 11, 8, 8, 8, 2, 3, 3, 3, 9, 4, 8, 8, 10, 9, 12, 7, 12, 12, 11, 9, 10, 12, 11, 8, 9, 9, 9, 7, 10, 10, 11, 10, 10, 12, 12, 8, 9, 3, 9, 10, 10, 10, 2, 10, 8, 10, 8, 6, 8, 8, 12, 10, 3, 8, 8, 7, 9, 13, 9, 8, 13, 9, 12, 9, 12, 7, 9, 7, 12, 3, 3, 4, 8, 9, 8, 2, 2, 3, 13, 10, 2, 3, 7, 2, 7, 10, 8, 2, 8, 10, 3, 10, 10, 13, 9, 4, 13, 2, 3, 3, 3, 2, 2, 2, 2, 3, 12, 2, 3, 2, 3, 9, 11, 12, 7, 12, 9, 13, 9, 8, 12, 3, 2, 3, 3, 9, 6, 13, 9, 9, 10, 12, 3, 10, 9, 12, 2, 9, 10, 11, 7, 12, 9, 8, 7, 8, 3, 10, 2, 2, 7, 9, 9, 11, 12, 10, 10, 11, 11, 2, 2, 8, 12, 7, 2, 3, 10, 3, 13, 10, 2, 8, 3, 10, 11, 10, 9, 10, 12, 10, 9, 10, 3, 10, 2, 12, 3, 9, 12, 12, 2, 12, 10, 8, 9, 3, 10, 9, 10, 12, 9, 3, 9, 12, 10, 8, 12, 9, 11, 2, 3, 2, 7, 7, 11, 9, 9, 2, 7, 12, 2, 12, 2, 3, 8, 4, 13, 9, 10, 10, 8, 7, 6, 9, 7, 7, 8, 12, 13, 10, 9, 10, 3, 7, 8, 3, 12, 10, 8, 3, 7, 3, 8, 11, 8, 2, 12, 11, 2, 11, 10, 11, 11, 8, 8, 11, 9, 11, 10, 14, 11, 7, 10, 2, 12, 10, 11, 9, 10, 8, 12, 3, 6, 2, 7, 9, 8, 9, 11, 3, 8, 12, 9, 9, 12, 9, 7, 3, 11, 10, 12, 11, 10, 12, 10, 10, 9, 9, 12, 11, 12, 12, 9, 7, 10, 7, 2, 10, 2, 8, 7, 8, 12, 8, 2, 7, 10, 11, 8, 11, 12, 2, 2, 8, 9, 3, 12, 7, 9, 12, 2, 13, 8, 9, 12, 11, 3, 9, 10, 9, 10, 10, 14, 11, 7, 10, 10, 11, 7, 7, 10, 12, 12, 9, 8, 12, 8, 10, 11, 13, 8, 11, 7, 10, 9, 10, 2, 10, 8, 10, 10, 2, 10, 9, 12, 2, 2, 2, 10, 2, 12, 13, 8, 9, 8, 14, 4, 9, 2, 9, 10, 9, 10, 10, 7, 11, 9, 9, 2, 2, 12, 2, 2, 9, 9, 8, 14, 9, 7, 10, 9, 2, 8, 12, 13, 12, 8, 8, 6, 3, 2, 2, 1, 3, 3, 2, 3, 3, 1, 3, 2, 2, 3, 3, 2, 2, 11, 6, 5, 5, 8, 9, 9, 10, 2, 10, 5, 8, 9, 10, 8, 10, 9, 5, 8, 5, 5, 2, 8, 11, 11, 5, 9, 10, 2, 10, 2, 3, 8, 10, 9, 8, 6, 6, 6, 11, 11, 9, 1, 11, 6, 6, 10, 2, 10, 6, 11, 9, 6, 9, 8, 5, 8, 2, 10, 10, 6, 10, 10, 10, 10, 10, 3, 8, 11, 8, 8, 10, 6, 9, 6, 9, 9, 11, 9, 9, 2, 8, 8, 11, 8, 5, 10, 1, 2, 10, 8, 10, 10, 6, 11, 3, 10, 11, 10, 10, 2, 9, 6, 8, 10, 1, 5, 10, 6, 3, 2, 9, 8, 1, 8, 10, 10, 8, 2, 10, 2, 10, 10, 5, 8, 1, 10, 10, 2, 11, 8, 2, 3, 5, 6, 11, 5, 1, 9, 10, 10, 10, 6, 5, 3, 8, 5, 9, 3, 10, 5, 8, 10, 9, 9, 10, 11, 9, 10, 8, 6, 10, 9, 6, 3, 3, 10, 3, 11, 10, 10, 2, 6, 10, 10, 10, 10, 12, 9, 10, 2, 3, 12, 7, 6, 11, 11, 10, 9, 12, 9, 12, 11, 2, 4, 10, 9, 6, 12, 10, 12, 10, 8, 9, 10, 9, 5, 10, 9, 7, 6, 9, 10, 10, 12, 10, 10, 2, 8, 8, 12, 10, 10, 11, 10, 10, 11, 6, 9, 12, 6, 10, 5, 6, 5, 10, 12, 10, 9, 11, 12, 9, 7, 9, 8, 9, 11, 9, 7, 8, 11, 12, 10, 6, 12, 8, 5, 12, 11, 6, 3, 10, 8, 8, 5, 10, 5, 9, 10, 9, 10, 12, 11, 6, 8, 8, 11, 9, 10, 7, 11, 8, 8, 12, 2, 10, 11, 6, 10, 10, 8, 11, 11, 11, 3, 10, 12, 8, 8, 9, 8, 2, 9, 3, 5, 7, 12, 11, 12, 12, 11, 8, 12, 10, 7, 10, 11, 11, 9, 10, 6, 9, 3, 9, 8, 11, 10, 11, 7, 9, 10, 11, 12, 8, 12, 6, 10, 10, 8, 8, 11, 9, 8, 9, 11, 10, 2, 12, 10, 11, 12, 11, 12, 11, 10, 11, 12, 12, 8, 10, 8, 8, 2, 12, 6, 2, 9, 6, 8, 10, 8, 7, 11, 6, 7, 12, 11, 9, 12, 9, 3, 12, 12, 5, 8, 11, 7, 12, 9, 12, 12, 8, 10, 9, 8, 9, 4, 10, 9, 10, 10, 6, 12, 10, 11, 10, 10, 12, 7, 10, 8, 11, 8, 6, 8, 6, 6, 8, 9, 5, 6, 12, 8, 6, 12, 6, 10, 4, 2, 6, 6, 12, 10, 8, 6, 6, 7, 6, 6, 5, 9, 2, 12, 11, 6, 6, 8, 5, 12, 12, 10, 8, 7, 5, 8, 6, 9, 10, 12, 7, 6, 6, 7, 7, 6, 6, 7, 10, 8, 12, 6, 6, 8, 6, 7, 7, 6, 7, 7, 8, 6, 12, 6, 10, 6, 6, 8, 8, 7, 11, 12, 5, 7, 6, 6, 9, 6, 8, 6, 7, 8, 6, 3, 6, 6, 6, 11, 12, 6, 5, 7, 6, 2, 7, 11, 3, 7, 7, 10, 7, 10, 10, 9, 6, 6, 8, 6, 3, 2, 7, 12, 6, 6, 8, 7, 7, 7, 7, 7, 8, 2, 8, 5, 5, 7, 10, 7, 9, 6, 3, 7, 9, 10, 7, 11, 7, 12, 4, 6, 2, 7, 7, 6, 6, 7, 7, 3, 6, 5, 8, 8, 12, 10, 8, 12, 6, 6, 10, 12, 6, 10, 7, 12, 9, 12, 7, 8, 7, 6, 3, 11, 12, 6, 5, 8, 7, 5, 8, 12, 6, 6, 7, 6, 5, 6, 7, 9, 9, 11, 11, 11, 9, 8, 9, 5, 7, 11, 5, 5, 9, 3, 10, 10, 9, 9, 10, 11, 12, 15, 10, 1, 3, 10, 11, 5, 7, 11, 10, 11, 8, 7, 3, 10, 7, 3, 10, 10, 5, 15, 5, 2, 7, 8, 9, 10, 2, 12, 11, 8, 3, 9, 10, 8, 11, 12, 11, 3, 11, 11, 10, 3, 10, 9, 2, 9, 10, 11, 9, 12, 3, 9, 11, 9, 10, 10, 1, 10, 7, 9, 5, 1, 9, 5, 1, 10, 5, 8, 8, 10, 11, 9, 8, 9, 2, 10, 8, 5, 9, 15, 8, 8, 10, 2, 9, 10, 7, 1, 9, 5, 11, 8, 15, 5, 9, 12, 7, 11, 10, 8, 7, 10, 9, 9, 9, 10, 10, 9, 15, 11, 5, 9, 9, 8, 10, 9, 5, 8, 7, 9, 8, 10, 10, 13, 9, 10, 3, 10, 9, 11, 8, 7, 1, 7, 10, 5, 5, 3, 9, 9, 11, 8, 10, 10, 8, 12, 8, 15, 9, 2, 10, 9, 2, 11, 1, 2, 7, 1, 10, 12, 10, 10, 8, 5, 10, 8, 7, 12, 8, 10, 8, 6, 5, 2, 2, 5, 1, 2, 7, 3, 1, 3, 3, 1, 4, 6, 3, 7, 7, 1, 2, 7, 2, 3, 2, 3, 4, 2, 10, 3, 3, 2, 3, 2, 13, 6, 1, 10, 10, 10, 5, 8, 1, 10, 6, 2, 12, 11, 6, 10, 5, 3, 5, 10, 8, 2, 10, 5, 3, 2, 9, 11, 10, 3, 10, 10, 12, 7, 10, 10, 9, 8, 3, 11, 12, 12, 10, 8, 1, 11, 7, 6, 10, 2, 6, 10, 7, 7, 7, 10, 7, 3, 2, 6, 11, 3, 12, 10, 5, 4, 10, 8, 2, 10, 10, 10, 8, 10, 3, 2, 10, 7, 10, 10, 7, 10, 8, 3, 10, 1, 6, 2, 7, 6, 2, 1, 6, 2, 9, 1, 7, 8, 9, 12, 2, 10, 6, 10, 2, 6, 10, 7, 10, 12, 2, 7, 10, 7, 7, 1, 2, 8, 10, 10, 3, 2, 10, 6, 7, 10, 10, 10, 12, 5, 2, 1, 8, 8, 6, 6, 10, 10, 2, 7, 3, 2, 3, 7, 3, 4, 10, 10, 10, 2, 12, 5, 3, 6, 11, 2, 12, 10, 6, 7, 6, 1, 8, 6, 7, 10, 8, 8, 9, 12, 3, 7, 11, 7, 7, 7, 2, 9, 2, 8, 7, 6, 7, 8, 10, 9, 6, 10, 7, 13, 2, 8, 1, 2, 2, 10, 10, 10, 8, 7, 10, 6, 8, 10, 7, 10, 10, 3, 5, 1, 10, 7, 8, 5, 9, 10, 6, 11, 10, 1, 10, 9, 2, 9, 2, 11, 2, 6, 8, 7, 7, 8, 8, 7, 7, 10, 8, 11, 7, 7, 9, 9, 7, 9, 8, 7, 7, 8, 6, 7, 7, 7, 6, 6, 11, 6, 11, 3, 7, 8, 8, 9, 10, 6, 7, 10, 6, 7, 7, 11, 11, 10, 6, 11, 3, 7, 8, 10, 8, 12, 8, 8, 9, 7, 8, 11, 10, 11]
Recognizer 0 solved 30/20910 tasks; total tasks solved is now 30.
Best recognizer: 0.
Currently using this much memory: 362016768
Recognition model enumeration results for the best recognizer.
HIT 9487: turn opposite right and turn around right twice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -3.399819 ; log likelihood = 0.000000
HIT 9488: turn around right twice and turn opposite right w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -3.399819 ; log likelihood = 0.000000
HIT 9489: turn opposite right thrice after turn around right w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -3.421178 ; log likelihood = 0.000000
HIT 9507: turn opposite left thrice after turn around left w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -3.342507 ; log likelihood = 0.000000
HIT 9515: turn opposite left twice and turn opposite left thrice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -3.508526 ; log likelihood = 0.000000
HIT 9527: turn around left after turn opposite left thrice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -3.342507 ; log likelihood = 0.000000
HIT 9530: turn opposite right twice after turn opposite right thrice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -3.642026 ; log likelihood = 0.000000
HIT 9536: turn opposite left twice after turn opposite left thrice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -3.518490 ; log likelihood = 0.000000
HIT 9542: turn opposite left thrice and turn around left w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -3.344409 ; log likelihood = 0.000000
HIT 9543: turn left twice after turn around left twice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -3.732519 ; log likelihood = 0.000000
HIT 9544: turn opposite right thrice and turn around right w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -3.415791 ; log likelihood = 0.000000
HIT 9546: turn opposite right after turn around right twice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -3.409789 ; log likelihood = 0.000000
HIT 9547: turn opposite left thrice and turn opposite left twice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -3.508526 ; log likelihood = 0.000000
HIT 9559: turn around right twice and turn right twice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -3.957156 ; log likelihood = 0.000000
HIT 9560: turn opposite left thrice after turn opposite left twice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -3.518490 ; log likelihood = 0.000000
HIT 9570: turn right twice after turn around right twice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -3.973776 ; log likelihood = 0.000000
HIT 9575: turn opposite right twice and turn opposite right thrice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -3.647433 ; log likelihood = 0.000000
HIT 9576: turn opposite right thrice and turn opposite right twice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -3.647433 ; log likelihood = 0.000000
HIT 9578: turn around left and turn opposite left thrice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -3.344409 ; log likelihood = 0.000000
HIT 9587: turn around left twice after turn opposite left w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -3.341346 ; log likelihood = 0.000000
HIT 9594: turn opposite right thrice after turn opposite right twice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -3.642026 ; log likelihood = 0.000000
HIT 9600: turn opposite left after turn around left twice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -3.341346 ; log likelihood = 0.000000
HIT 9603: turn around left twice after turn left twice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -3.732519 ; log likelihood = 0.000000
HIT 9616: turn opposite left and turn around left twice w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -3.344323 ; log likelihood = 0.000000
HIT 9617: turn around right and turn opposite right thrice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -3.415791 ; log likelihood = 0.000000
HIT 9619: turn around right twice after turn right twice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -3.973776 ; log likelihood = 0.000000
HIT 9637: turn around right after turn opposite right thrice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -3.421178 ; log likelihood = 0.000000
HIT 9648: turn around right twice after turn opposite right w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -3.409789 ; log likelihood = 0.000000
HIT 9655: turn around left twice and turn opposite left w/ (lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))) ; log prior = -3.344323 ; log likelihood = 0.000000
HIT 9656: turn right twice and turn around right twice w/ (lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))) ; log prior = -3.957156 ; log likelihood = 0.000000
Hits 30/2000 tasks
Average description length of a program solving a task: 3.533273 nats
Recognition model average:  4 sec.	median: 4 	max: 4 	standard deviation 0
Cumulative results for the full ensemble of 1 recognizers: 
Frontiers discovered bottom up: 30
Total frontiers: 1973
Average search time:  4 sec.	median: 4 	max: 4 	standard deviation 0
48 / 2000 total hit tasks
              bottom miss  bottom hit  
top miss         1952           0      
top hit           18           30      
Currently using this much memory: 362016768
Showing the top 5 programs in each frontier being sent to the compressor:
0: run
0.00	(lambda (SCAN_RUN $0))

1: look
0.00	(lambda (SCAN_LOOK $0))

2: jump
0.00	(lambda (SCAN_JUMP $0))

3: walk
0.00	(lambda (SCAN_WALK $0))

4: turn right
0.00	(lambda (SCAN_RTURN $0))

5: turn left
0.00	(lambda (SCAN_LTURN $0))

6: run after run
0.00	(lambda (SCAN_RUN (SCAN_RUN $0)))

7: run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN $0)))

8: run and run
0.00	(lambda (SCAN_RUN (SCAN_RUN $0)))

9: walk and run
0.00	(lambda (SCAN_WALK (SCAN_RUN $0)))

10: run and walk
0.00	(lambda (SCAN_RUN (SCAN_WALK $0)))

11: run and jump
0.00	(lambda (SCAN_RUN (SCAN_JUMP $0)))

12: jump and run
0.00	(lambda (SCAN_JUMP (SCAN_RUN $0)))

13: run after jump
0.00	(lambda (SCAN_JUMP (SCAN_RUN $0)))

14: look and run
0.00	(lambda (SCAN_LOOK (SCAN_RUN $0)))

15: run after look
0.00	(lambda (SCAN_LOOK (SCAN_RUN $0)))

16: run after walk
0.00	(lambda (SCAN_WALK (SCAN_RUN $0)))

17: walk after run
0.00	(lambda (SCAN_RUN (SCAN_WALK $0)))

18: run and look
0.00	(lambda (SCAN_RUN (SCAN_LOOK $0)))

19: jump after run
0.00	(lambda (SCAN_RUN (SCAN_JUMP $0)))

20: look after run
0.00	(lambda (SCAN_RUN (SCAN_LOOK $0)))

21: turn right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN $0)))

22: look after jump
0.00	(lambda (SCAN_JUMP (SCAN_LOOK $0)))

23: run after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN $0)))

24: walk after look
0.00	(lambda (SCAN_LOOK (SCAN_WALK $0)))

25: jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP $0)))

26: walk after jump
0.00	(lambda (SCAN_JUMP (SCAN_WALK $0)))

27: walk and jump
0.00	(lambda (SCAN_WALK (SCAN_JUMP $0)))

28: look after look
0.00	(lambda (SCAN_LOOK (SCAN_LOOK $0)))

29: run and turn left
0.00	(lambda (SCAN_RUN (SCAN_LTURN $0)))

30: jump after walk
0.00	(lambda (SCAN_WALK (SCAN_JUMP $0)))

31: jump after look
0.00	(lambda (SCAN_LOOK (SCAN_JUMP $0)))

32: turn right and run
0.00	(lambda (SCAN_RTURN (SCAN_RUN $0)))

33: jump after jump
0.00	(lambda (SCAN_JUMP (SCAN_JUMP $0)))

34: walk after walk
0.00	(lambda (SCAN_WALK (SCAN_WALK $0)))

35: run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN $0)))

36: look after walk
0.00	(lambda (SCAN_WALK (SCAN_LOOK $0)))

37: jump and jump
0.00	(lambda (SCAN_JUMP (SCAN_JUMP $0)))

38: turn left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN $0)))

39: look and jump
0.00	(lambda (SCAN_LOOK (SCAN_JUMP $0)))

40: walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK $0)))

41: run and turn right
0.00	(lambda (SCAN_RUN (SCAN_RTURN $0)))

42: turn left and run
0.00	(lambda (SCAN_LTURN (SCAN_RUN $0)))

43: look and walk
0.00	(lambda (SCAN_LOOK (SCAN_WALK $0)))

44: look and look
0.00	(lambda (SCAN_LOOK (SCAN_LOOK $0)))

45: run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN $0)))

46: jump and look
0.00	(lambda (SCAN_JUMP (SCAN_LOOK $0)))

47: jump and walk
0.00	(lambda (SCAN_JUMP (SCAN_WALK $0)))

48: run after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN $0)))

49: look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK $0)))

50: walk and walk
0.00	(lambda (SCAN_WALK (SCAN_WALK $0)))

51: walk and look
0.00	(lambda (SCAN_WALK (SCAN_LOOK $0)))

52: jump and turn left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN $0)))

53: look and turn right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN $0)))

54: turn right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN $0)))

55: jump after turn left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP $0)))

56: jump and turn right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN $0)))

57: look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK $0)))

58: walk after turn left
0.00	(lambda (SCAN_LTURN (SCAN_WALK $0)))

59: look and turn left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN $0)))

60: look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK $0)))

61: turn left and walk
0.00	(lambda (SCAN_LTURN (SCAN_WALK $0)))

62: turn left and jump
0.00	(lambda (SCAN_LTURN (SCAN_JUMP $0)))

63: jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP $0)))

64: turn right and look
0.00	(lambda (SCAN_RTURN (SCAN_LOOK $0)))

65: look after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK $0)))

66: turn right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN $0)))

67: walk and turn right
0.00	(lambda (SCAN_WALK (SCAN_RTURN $0)))

68: jump after turn right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP $0)))

69: walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK $0)))

70: walk after turn right
0.00	(lambda (SCAN_RTURN (SCAN_WALK $0)))

71: walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK $0)))

72: turn right and jump
0.00	(lambda (SCAN_RTURN (SCAN_JUMP $0)))

73: turn left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN $0)))

74: turn right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN $0)))

75: turn left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN $0)))

76: turn left and look
0.00	(lambda (SCAN_LTURN (SCAN_LOOK $0)))

77: jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP $0)))

78: look after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK $0)))

79: turn left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN $0)))

80: turn right and walk
0.00	(lambda (SCAN_RTURN (SCAN_WALK $0)))

81: walk and turn left
0.00	(lambda (SCAN_WALK (SCAN_LTURN $0)))

82: turn right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN $0)))

83: run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))

84: run twice after run
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))

85: turn left after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))

86: turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))

87: run after run twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))

88: turn left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN $0)))

89: turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))

90: run twice and run
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))

91: turn right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN $0)))

92: turn right and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))

93: turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))

94: turn left and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))

95: turn left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN $0)))

96: turn right after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))

97: run and run twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))

98: turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))

99: run twice after jump
0.00	(lambda (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0))))

100: look and run twice
0.00	(lambda (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0))))

101: jump after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP $0))))

102: walk after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK $0))))

103: run twice and look
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK $0))))

104: run twice and walk
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK $0))))

105: run twice after walk
0.00	(lambda (SCAN_WALK (SCAN_RUN (SCAN_RUN $0))))

106: run twice after look
0.00	(lambda (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0))))

107: look after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK $0))))

108: walk and run twice
0.00	(lambda (SCAN_WALK (SCAN_RUN (SCAN_RUN $0))))

109: jump and run twice
0.00	(lambda (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0))))

110: run twice and jump
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP $0))))

111: run and jump twice
0.00	(lambda (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0))))

112: turn right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))

113: run right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))

114: run twice and turn right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN $0))))

115: run and run right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0))))

116: run after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN $0))))

117: run twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))

118: turn left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN $0))))

119: run after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN $0))))

120: walk twice and run
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN $0))))

121: run and run left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0))))

122: run twice and turn left
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN $0))))

123: look twice and run
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN $0))))

124: run and look twice
0.00	(lambda (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0))))

125: look twice after run
0.00	(lambda (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0))))

126: jump twice after run
0.00	(lambda (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0))))

127: walk twice after run
0.00	(lambda (SCAN_RUN (SCAN_WALK (SCAN_WALK $0))))

128: turn right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN $0))))

129: run right and run
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))

130: run and walk twice
0.00	(lambda (SCAN_RUN (SCAN_WALK (SCAN_WALK $0))))

131: run after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))

132: turn left and run twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))

133: run left and run
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RUN $0))))

134: run twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))

135: run after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RUN $0))))

136: run left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0))))

137: run after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN $0))))

138: jump twice and run
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN $0))))

139: run and look right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0))))

140: walk after walk twice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))

141: walk twice and jump
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP $0))))

142: look twice and look
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))

143: walk right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0))))

144: jump right and run
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN $0))))

145: run after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN $0))))

146: jump left and run
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN $0))))

147: look twice and jump
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP $0))))

148: look after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK $0))))

149: run after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RUN $0))))

150: walk twice after jump
0.00	(lambda (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0))))

151: run left and look
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LOOK $0))))

152: jump and jump twice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))

153: run left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_RUN $0))))

154: walk twice after walk
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))

155: walk right and run
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN $0))))

156: jump twice after jump
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))

157: jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))

158: jump twice and walk
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK $0))))

159: run right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0))))

160: look right and run
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RUN $0))))

161: run and walk right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0))))

162: run and walk left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_WALK $0))))

163: jump after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP $0))))

164: jump and run left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0))))

165: walk after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK $0))))

166: run left and jump
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP $0))))

167: jump and walk twice
0.00	(lambda (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0))))

168: jump after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP $0))))

169: look after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LOOK $0))))

170: look twice after look
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))

171: run right and jump
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP $0))))

172: run right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0))))

173: jump after jump twice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))

174: walk after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK $0))))

175: run left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_RUN $0))))

176: walk and run left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_RUN $0))))

177: jump twice after walk
0.00	(lambda (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0))))

178: look twice after jump
0.00	(lambda (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0))))

179: look and look twice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))

180: walk after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK $0))))

181: run after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RUN $0))))

182: walk left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_WALK $0))))

183: look and run left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_RUN $0))))

184: walk left and run
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RUN $0))))

185: look twice after walk
0.00	(lambda (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0))))

186: jump and run right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0))))

187: look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))

188: look left and run
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RUN $0))))

189: jump left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0))))

190: look and walk twice
0.00	(lambda (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0))))

191: jump after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP $0))))

192: jump twice after look
0.00	(lambda (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0))))

193: look twice and walk
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK $0))))

194: look after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LOOK $0))))

195: walk and look twice
0.00	(lambda (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0))))

196: walk and walk twice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))

197: look and jump twice
0.00	(lambda (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0))))

198: jump and look twice
0.00	(lambda (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0))))

199: walk twice and look
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK $0))))

200: run and look left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LOOK $0))))

201: jump after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP $0))))

202: jump twice and jump
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))

203: run after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN $0))))

204: walk twice after look
0.00	(lambda (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0))))

205: walk after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_WALK $0))))

206: look right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0))))

207: run left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0))))

208: run and jump right
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0))))

209: walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))

210: run left and walk
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_WALK $0))))

211: jump twice and look
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK $0))))

212: look left after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_LOOK $0))))

213: look and run right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0))))

214: jump right after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0))))

215: run after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RUN $0))))

216: run right and walk
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK $0))))

217: walk and jump twice
0.00	(lambda (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0))))

218: run right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0))))

219: walk twice and walk
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))

220: look after look twice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))

221: run and jump left
0.00	(lambda (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0))))

222: run right and look
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LOOK $0))))

223: look after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK $0))))

224: walk and run right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0))))

225: run after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN $0))))

226: jump left and walk
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK $0))))

227: look right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0))))

228: run and turn opposite left
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

229: walk and jump left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0))))

230: run left after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

231: run right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RUN $0))))

232: jump left and jump
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))

233: turn opposite right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

234: look after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))

235: turn right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN $0))))

236: look after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LOOK $0))))

237: look left and jump
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP $0))))

238: look and look left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))

239: run right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LTURN $0))))

240: jump right and jump
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))

241: look after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK $0))))

242: walk after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK $0))))

243: jump twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))

244: jump and jump right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))

245: look after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK $0))))

246: look right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0))))

247: turn right and jump twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))

248: look left and look
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))

249: jump after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))

250: turn opposite left and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

251: turn left twice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

252: turn right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN $0))))

253: run left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RTURN $0))))

254: walk and walk left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))

255: jump after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP $0))))

256: jump and look left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0))))

257: run twice after run twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

258: look right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0))))

259: turn left after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LTURN $0))))

260: run right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))

261: look and walk left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0))))

262: turn right twice and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

263: walk right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))

264: look left and walk
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK $0))))

265: turn right and walk twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))

266: walk left and walk
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))

267: turn left and run right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_RUN $0))))

268: run thrice and run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

269: run twice and run twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

270: turn left twice and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

271: walk left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0))))

272: turn right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))

273: turn left after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))

274: turn right twice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

275: run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

276: jump after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP $0))))

277: jump twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))

278: jump after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP $0))))

279: run after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

280: walk after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))

281: walk twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))

282: look and look right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0))))

283: run after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

284: look and walk right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0))))

285: look right and walk
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_WALK $0))))

286: jump left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0))))

287: jump left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0))))

288: turn left and walk twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_WALK $0))))

289: look twice and turn left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN $0))))

290: jump after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))

291: walk and walk right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))

292: run and turn right twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

293: run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

294: jump left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0))))

295: walk left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))

296: look left after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))

297: run and turn opposite right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

298: turn opposite right after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

299: look twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))

300: turn right after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_RTURN $0))))

301: run right after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

302: look after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))

303: walk and look left
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0))))

304: look and jump left
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0))))

305: look right and jump
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP $0))))

306: run after run thrice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

307: look right and look
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LOOK $0))))

308: look left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0))))

309: turn left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_JUMP $0))))

310: turn right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN $0))))

311: run and run thrice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

312: turn left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN $0))))

313: turn left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN $0))))

314: turn right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))

315: walk right and look
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LOOK $0))))

316: walk left and jump
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP $0))))

317: walk twice and turn right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN $0))))

318: jump right and walk
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_WALK $0))))

319: jump and jump left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0))))

320: jump right and look
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK $0))))

321: jump and walk right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0))))

322: walk left after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0))))

323: walk twice and turn left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN $0))))

324: jump right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0))))

325: run and turn left twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

326: turn opposite left after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

327: jump and look right
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0))))

328: walk left and look
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK $0))))

329: jump and walk left
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0))))

330: walk twice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))

331: walk after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))

332: jump right after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0))))

333: walk right and jump
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_JUMP $0))))

334: walk right after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0))))

335: walk right and walk
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))

336: run left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_RUN $0))))

337: run left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))

338: jump twice and turn left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN $0))))

339: walk after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_WALK $0))))

340: jump left and look
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK $0))))

341: turn left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN $0))))

342: look twice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))

343: look and jump right
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0))))

344: look left after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0))))

345: walk right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0))))

346: turn right and run right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

347: run thrice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

348: run after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

349: walk and look right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0))))

350: look twice and turn right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN $0))))

351: walk after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_WALK $0))))

352: jump right after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))

353: turn left and run left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))

354: look after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK $0))))

355: walk after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK $0))))

356: jump after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_JUMP $0))))

357: turn left and look twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))

358: run after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))

359: turn right and run left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_RUN $0))))

360: walk and jump right
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0))))

361: jump twice and turn right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN $0))))

362: turn left and jump left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

363: turn right and jump right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

364: jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

365: turn left and walk right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0))))

366: run thrice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

367: turn opposite left and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

368: look left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN $0))))

369: jump and turn opposite left
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

370: jump after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

371: jump right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN $0))))

372: turn opposite left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

373: run thrice and look
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LOOK $0)))

374: walk and turn opposite left
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

375: jump left after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

376: walk right after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

377: look left after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

378: turn right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN $0))))

379: turn right twice and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

380: walk and turn right twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

381: turn opposite right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

382: turn left twice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

383: look and run thrice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

384: jump after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

385: walk after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

386: look right after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

387: jump right after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

388: walk and turn opposite right
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

389: walk left after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

390: turn opposite left after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

391: walk after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

392: look right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN $0))))

393: turn left and jump right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_JUMP $0))))

394: turn right and walk left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0))))

395: turn left after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN $0))))

396: turn right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN $0))))

397: turn opposite right and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

398: turn right after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN $0))))

399: jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

400: turn left after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN $0))))

401: turn left and walk left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

402: turn left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN $0))))

403: jump after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

404: turn opposite left after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

405: turn left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN $0))))

406: jump and turn left twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

407: jump left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN $0))))

408: walk right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN $0))))

409: turn opposite left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

410: look after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

411: walk left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_WALK $0))))

412: turn opposite left and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

413: jump left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0))))

414: turn right twice and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

415: look and turn opposite right
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

416: look right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0))))

417: turn right twice and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

418: look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

419: walk after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

420: jump after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))

421: look and turn left twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

422: look after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

423: turn right after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN $0))))

424: turn right twice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

425: turn right twice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

426: run thrice and walk
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_WALK $0)))

427: jump and turn opposite right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

428: look left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN $0))))

429: turn right and look right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

430: turn left twice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

431: jump and run thrice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

432: jump right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN $0))))

433: run thrice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

434: jump after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP $0)))

435: jump and turn right twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

436: turn right after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN $0))))

437: turn left after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN $0))))

438: turn right twice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

439: run thrice and jump
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP $0)))

440: walk after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_WALK $0)))

441: look right and turn left
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN $0))))

442: jump left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN $0))))

443: look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

444: turn left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN $0))))

445: walk left and turn right
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN $0))))

446: walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

447: look after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LOOK $0)))

448: look and turn right twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

449: turn right and look left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0))))

450: turn opposite right and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

451: look after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

452: turn opposite right after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

453: turn left twice and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))

454: look left after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_LOOK $0))))

455: turn opposite right after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

456: walk after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

457: look after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))

458: walk left and turn left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN $0))))

459: turn left and look left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

460: look and turn opposite left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

461: turn opposite right after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

462: turn right after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN $0))))

463: turn right and jump left
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (SCAN_JUMP $0))))

464: turn left twice and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

465: turn right and walk right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))

466: turn left twice and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))

467: walk and turn left twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

468: jump right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_JUMP $0))))

469: walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))

470: walk and run thrice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

471: turn left and look right
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_LOOK $0))))

472: walk right and turn right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN $0))))

473: run thrice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

474: walk right after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (SCAN_WALK $0))))

475: turn left twice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

476: jump twice and run twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

477: turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

478: look twice and run twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))))

479: turn left and turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

480: turn left and turn opposite right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

481: run right and run twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

482: turn right and turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

483: run thrice and turn left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN $0)))

484: turn right after turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

485: turn right twice and turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

486: run twice and walk twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

487: turn left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))

488: run thrice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

489: turn left and turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

490: run twice after run right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

491: turn left twice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

492: turn right and turn left twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

493: turn left after turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

494: turn left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN $0)))

495: run twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

496: turn right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN $0)))

497: walk twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

498: turn opposite right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))

499: turn right and run thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

500: turn right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))

501: turn right twice and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))

502: run left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

503: walk twice and run twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

504: run twice and run right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

505: turn left twice and turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

506: turn left and run thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

507: run thrice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

508: turn opposite right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

509: turn opposite left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))

510: turn right after turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

511: run twice and jump twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

512: turn left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0)))

513: turn opposite left after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

514: run twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

515: look twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))))

516: run left and run twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

517: jump twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

518: run twice after run left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

519: turn right and turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

520: turn left after turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

521: turn right twice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

522: turn opposite right and turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

523: turn right twice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

524: turn left twice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

525: turn opposite left and turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

526: turn left twice and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))

527: run right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

528: run twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))))

529: run thrice and turn right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN $0)))

530: turn opposite left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

531: run twice and look twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))))

532: run twice and run left
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

533: turn left and turn right twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

534: turn right and turn opposite left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

535: turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

536: turn opposite right after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

537: turn right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0)))

538: run twice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

539: run twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

540: run twice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

541: jump right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0)))))

542: jump thrice and run
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RUN $0)))

543: run twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

544: run and look thrice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

545: run twice and walk right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0)))))

546: jump left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0)))))

547: run and jump thrice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

548: run after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RUN $0)))

549: run twice and jump left
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0)))))

550: look thrice and run
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RUN $0)))

551: walk thrice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

552: look right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RUN (SCAN_RUN $0)))))

553: run twice and look right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0)))))

554: jump left and run twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

555: walk right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RUN (SCAN_RUN $0)))))

556: jump right and run twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RUN (SCAN_RUN $0)))))

557: run after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RUN $0)))

559: walk thrice and run
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RUN $0)))

561: run twice and jump right
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0)))))

564: look thrice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

565: walk right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0)))))

567: run and walk thrice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

568: jump thrice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

569: walk left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (SCAN_WALK $0)))))

573: run after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RUN $0)))

574: look twice and run right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0)))))

575: jump after jump thrice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

576: walk thrice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

577: walk after walk thrice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

578: run twice after run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

579: jump thrice and jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

581: run left after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

582: run right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

583: run twice and turn right twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

584: jump twice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

585: walk twice after walk twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

586: jump and walk thrice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

587: look twice and look twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

588: run twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

589: look and look thrice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

590: run twice and turn opposite left
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

592: run thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

593: walk twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

594: walk thrice and walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

595: run and run opposite left
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

596: run thrice and run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

598: look twice and jump twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

599: jump twice after jump twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

600: run twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

601: jump after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_JUMP $0)))

602: walk twice and look twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

604: run right twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

605: walk thrice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

608: walk after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_WALK $0)))

609: jump thrice and look
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LOOK $0)))

610: jump thrice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

611: look after look thrice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

612: look after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LOOK $0)))

613: look thrice and walk
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_WALK $0)))

614: walk twice and walk twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

615: walk thrice and jump
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_JUMP $0)))

616: look and jump thrice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

617: run and run opposite right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

618: walk twice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

619: walk thrice and look
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LOOK $0)))

620: turn opposite right and run twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

622: walk twice and run right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0)))))

623: run twice and turn opposite right
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

625: look thrice and look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

626: look and walk thrice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

627: jump thrice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

628: jump thrice and walk
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_WALK $0)))

629: jump twice and run right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0)))))

630: jump and jump thrice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

631: jump twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

632: run left and run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

633: run twice and run thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

634: jump and look thrice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

635: turn opposite left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

636: run opposite right after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

637: run twice and turn left twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

638: run right and walk twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

639: look twice after look twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

640: jump twice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

641: run right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0)))))

642: run left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0)))))

643: look thrice and jump
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_JUMP $0)))

644: jump after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_JUMP $0)))

645: run opposite left and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

646: walk twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))))

647: run left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_RUN $0)))))

648: run after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

649: walk thrice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

651: turn right twice and run twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

652: walk twice and jump twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))))

653: look twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

654: look thrice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

655: jump twice and walk twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))))

656: look twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

657: turn opposite right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

659: walk and look thrice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

660: jump twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))))

661: look twice and walk twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

662: jump twice and run left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0)))))

663: turn left twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

664: walk and walk thrice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

665: look after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LOOK $0)))

666: run right and run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

667: run after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

668: look thrice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

670: walk twice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_WALK (SCAN_WALK $0)))))

671: jump thrice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

672: jump twice and jump twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

673: run left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

674: run right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0)))))

675: look thrice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

677: run opposite left after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

678: jump twice and look twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

679: run twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

680: run opposite right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

681: run twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

682: turn left twice and run twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

683: run right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_LOOK (SCAN_LOOK $0)))))

684: walk and jump thrice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

685: turn opposite left and run twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0))))

686: turn right twice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

687: run left twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

688: run right and jump twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_JUMP (SCAN_JUMP $0)))))

689: walk after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_WALK $0)))

690: look opposite left after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

691: walk right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

693: walk thrice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

694: look opposite right after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

695: walk twice and jump left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0)))))

697: jump opposite right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_RUN $0))))

698: look left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

700: look twice and jump left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0)))))

701: walk opposite right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_RUN $0))))

702: look and run opposite right
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

703: look right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0)))))

704: look twice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

705: run opposite left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

706: run right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_JUMP $0)))))

708: run opposite left and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_JUMP $0))))

710: walk twice and look left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))))

711: walk twice and walk right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

712: walk left and walk twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

713: turn left and walk thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

714: look right and jump twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

715: jump twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))))

716: look and run opposite left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

717: jump right and jump twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

718: look twice after look left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

719: look thrice and turn right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN $0)))

720: run opposite right after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

721: jump left and walk twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))))

722: look left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))))

723: run and jump opposite left
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

725: run left and jump left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_JUMP $0)))))

727: turn left and look thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

728: walk twice and look right
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0)))))

729: run opposite right and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_LOOK $0))))

731: turn right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN $0)))

732: look opposite right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_RUN $0))))

733: jump left and look twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

734: jump left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

735: run after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_RUN $0))))

737: jump twice and jump left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

739: walk left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0)))))

740: jump thrice and turn left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN $0)))

743: jump thrice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

744: look twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

749: jump twice after jump left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

751: run and look opposite right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

752: walk twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_WALK (SCAN_WALK $0)))))

754: walk thrice and turn right
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN $0)))

755: run and look opposite left
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

756: jump left and jump twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

758: jump right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0)))))

761: look left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

762: look right and run right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0)))))

764: walk left and jump twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_JUMP (SCAN_JUMP $0)))))

765: turn right and jump thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

767: run right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_RUN $0)))))

768: jump twice and jump right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

769: jump twice and look right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0)))))

770: look right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

771: look thrice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

774: turn right and walk thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

776: look twice and look left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

777: look after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LOOK $0))))

778: turn left and jump thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

779: run after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_RUN $0))))

781: walk twice and walk left
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

783: walk twice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

784: jump thrice and turn right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN $0)))

785: jump thrice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

787: look opposite left and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_RUN $0))))

788: jump left and run left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_RUN $0)))))

790: run opposite left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LOOK $0))))

793: look left and look twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

795: walk right and walk twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

801: look twice and walk left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))))

802: jump twice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_JUMP (SCAN_JUMP $0)))))

803: run right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_RUN $0)))))

806: walk and run opposite right
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

808: look twice after look right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

811: walk thrice and turn left
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN $0)))

812: look twice and jump right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0)))))

813: turn right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN $0)))

814: walk right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_WALK $0)))))

817: turn left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN $0)))

818: look twice and look right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

819: walk twice after walk left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

821: jump right and look twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LOOK (SCAN_LOOK $0)))))

822: turn right and look thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

823: look right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0)))))

824: jump twice and walk left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0)))))

825: run and walk opposite right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

829: turn left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN $0)))

831: jump right and run right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_RUN $0)))))

833: look left and walk twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

835: walk right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

836: run opposite right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_JUMP $0))))

838: jump left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0)))))

839: run opposite right and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_WALK $0))))

840: run and jump opposite right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

843: look right and look twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

845: look thrice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

848: look right and walk twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_WALK (SCAN_WALK $0)))))

850: look twice and walk right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0)))))

852: walk twice after walk right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

854: look thrice and turn left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN $0)))

858: jump and run opposite right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

859: look after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_LOOK $0))))

861: turn left after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN $0)))

865: jump right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

866: jump opposite left and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_RUN $0))))

868: run right and look right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_LOOK $0)))))

870: jump and run opposite left
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

871: walk left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))))

872: turn right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN $0)))

873: walk left and look twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LOOK (SCAN_LOOK $0)))))

874: jump twice and look left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0)))))

877: jump twice after jump right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

880: walk thrice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

881: walk left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

882: turn right twice and run right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

883: turn opposite left and jump twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

884: run opposite right after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

885: look after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

886: look and look opposite left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

887: walk right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

888: jump opposite right and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_LOOK $0))))

889: turn right and run opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

890: run left after turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

892: jump and jump opposite left
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

893: run and turn right thrice
0.00	(lambda (SCAN_RUN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

894: jump after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_JUMP $0))))

895: jump opposite right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

896: jump and walk opposite right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

897: walk twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

898: walk after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_WALK $0))))

900: turn opposite right and look twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

902: jump opposite right and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_WALK $0))))

903: walk twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

905: walk right and walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

906: turn left twice and look twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

907: walk left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

908: walk left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_WALK $0)))))

909: walk opposite right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_JUMP $0))))

911: run after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

913: jump twice and turn opposite right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

915: jump right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

917: look right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_JUMP $0)))))

920: walk opposite left and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

921: walk left and look left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))))

922: jump right after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

924: look twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

925: look opposite left and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_WALK $0))))

926: walk after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_WALK $0))))

927: jump opposite left after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

928: walk opposite right and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

930: look and look opposite right
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

932: walk right twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

933: jump twice and turn right twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

934: run thrice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

935: turn right thrice after run
0.00	(lambda (SCAN_RUN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

936: walk opposite left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_LOOK $0))))

937: turn right twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

938: jump right and walk right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0)))))

939: jump right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0)))))

940: walk and jump opposite right
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

941: run thrice and run left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (SCAN_RUN $0))))

942: run left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

943: jump left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

944: turn opposite left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

946: turn left twice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

947: look opposite right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_JUMP $0))))

948: jump opposite right after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

949: walk opposite left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

951: run thrice and jump twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP (SCAN_JUMP $0))))

952: look and jump opposite left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

953: run opposite left after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

954: look right twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

955: look left and walk left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))))

956: walk right and jump right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_JUMP $0)))))

958: turn left twice and walk twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

959: walk right and walk left
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

960: turn opposite left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

961: look twice and turn left twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

962: walk left and walk right
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0)))))

964: look left twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

965: walk after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_WALK $0))))

966: turn opposite right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

967: turn left twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

968: jump after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

969: turn opposite right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

970: jump opposite right after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

972: look after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_LOOK $0))))

973: walk and look opposite left
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

977: turn opposite left after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

979: look right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0)))))

980: run right after turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

981: look twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

982: walk twice and turn opposite right
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

983: turn opposite right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

984: turn opposite right after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

986: run thrice and run right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (SCAN_RUN $0))))

987: turn opposite left and walk twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

988: turn opposite right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

989: look left and look right
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

990: look twice and turn opposite right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

991: jump twice and run thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

992: run thrice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

993: jump left and jump right
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

994: walk twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

995: turn opposite left after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

996: jump right after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

998: jump twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1000: look after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1001: jump and look opposite right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1002: turn left and run opposite right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

1003: jump twice and turn left twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1004: look opposite right after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1005: jump right and jump left
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

1006: turn left twice and jump twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1008: look and walk opposite left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1009: run thrice and look twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LOOK (SCAN_LOOK $0))))

1010: look twice and turn right twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1011: jump after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_JUMP $0))))

1012: run right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1013: jump right twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0)))))

1016: look and jump opposite right
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1019: look right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

1020: walk right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0)))))

1021: run left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1022: look after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_LOOK $0))))

1024: look right after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

1025: jump twice and turn opposite left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1026: run opposite left and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN $0))))

1027: run opposite left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1028: walk twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

1029: run right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1030: jump left after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

1031: jump left twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

1032: run left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_RUN $0))))

1033: walk and walk opposite left
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1034: look opposite right and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1035: turn right after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RTURN $0))))

1036: run opposite left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RTURN $0))))

1037: turn right and run opposite left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1038: run opposite right and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN $0))))

1039: jump opposite left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_LOOK $0))))

1040: turn left twice and run left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1041: turn right twice after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1042: turn left after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN $0))))

1043: look right and look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_LOOK $0)))))

1045: turn right thrice and run
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

1046: jump left and look left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0)))))

1049: look left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

1050: turn left twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1051: turn right twice and look twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1053: look left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_LOOK $0)))))

1054: walk left and walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

1057: look after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_LOOK $0))))

1058: walk twice and run thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1059: jump twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1060: turn right twice and walk twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

1061: run left after turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1062: walk twice and turn opposite left
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1065: walk right after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_WALK $0)))))

1066: walk opposite left after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1067: look twice and run thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1068: turn left thrice and run
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1069: walk and walk opposite right
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1070: look opposite left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1071: jump and look opposite left
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1072: look opposite right after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1073: run thrice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1074: turn left thrice after run
0.00	(lambda (SCAN_RUN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1075: run thrice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1076: turn opposite right and run right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

1077: run right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (SCAN_RUN $0))))

1078: turn opposite left and look twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1079: run right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_RUN $0))))

1080: run left and run thrice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1081: look twice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LOOK (SCAN_LOOK $0))))

1082: look opposite left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1083: run left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1084: look right and look left
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

1085: run opposite right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_LTURN $0))))

1086: look twice and turn opposite left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1087: walk opposite right after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1088: walk left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_WALK $0)))))

1089: turn left after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_LTURN $0))))

1090: jump opposite left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1091: run opposite right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

1092: jump after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_JUMP $0))))

1093: look left after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

1096: walk right and look right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_LOOK $0)))))

1097: look twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1098: turn left twice after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1099: walk after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

1100: jump twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1101: run right and run thrice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

1102: run right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1104: walk after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

1105: look opposite left and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_JUMP $0))))

1108: look left and look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0)))))

1109: jump right and look right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_LOOK $0)))))

1110: walk twice and turn left twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1111: jump opposite right after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1113: look left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_LOOK $0)))))

1114: walk left twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0)))))

1115: walk twice and turn right twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1117: turn right after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN $0))))

1118: jump left and jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (SCAN_LTURN (SCAN_JUMP $0)))))

1119: jump after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_JUMP $0))))

1120: turn opposite left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1122: run left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (SCAN_RUN $0))))

1123: turn left and run opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1124: look opposite left after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1126: jump and jump opposite right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1127: turn right twice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1128: turn opposite right and jump twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1129: jump twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1131: run after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1132: jump after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1134: jump left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0)))))

1135: turn opposite left and run left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

1136: jump left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_JUMP $0)))))

1137: turn opposite right and walk twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_WALK $0))))

1138: turn opposite right and run left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_RUN $0))))

1139: walk opposite left after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1141: turn opposite left and run right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_RUN $0))))

1142: walk opposite right after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1143: turn right twice and jump twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1144: jump opposite left and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_JUMP $0))))

1145: jump twice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_JUMP (SCAN_JUMP $0))))

1146: run and turn left thrice
0.00	(lambda (SCAN_RUN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1148: look left and jump left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_JUMP $0)))))

1149: look opposite left after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1150: turn right twice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1151: run thrice and walk twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_WALK (SCAN_WALK $0))))

1152: look right and walk right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (SCAN_RTURN (SCAN_WALK $0)))))

1153: jump opposite left after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1154: look twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LOOK $0))))

1155: run right after turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

1156: look left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_LOOK $0))))

1158: turn opposite left and look right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_LOOK $0))))

1159: turn right thrice after look
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1161: turn left twice and look right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_LOOK $0))))

1162: walk opposite right and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_RTURN $0))))

1163: run twice and walk thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1164: walk left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_WALK $0))))

1165: turn left twice and jump left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1166: look right after turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1167: jump thrice and run twice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RUN (SCAN_RUN $0))))

1168: turn left and jump opposite right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1169: turn left after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_LTURN $0))))

1170: turn opposite right after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1171: walk left and turn right twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1172: turn right twice and jump left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_JUMP $0))))

1173: run twice and look thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1174: look left after turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1175: jump left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1176: turn right twice and look left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_LOOK $0))))

1177: turn left twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1178: jump left after turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1179: turn opposite left after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1180: walk left after turn opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1182: look opposite left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_RTURN $0))))

1183: look and turn right thrice
0.00	(lambda (SCAN_LOOK (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1184: look opposite left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1185: jump right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1186: jump left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1188: look right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1189: turn right twice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1190: walk right after turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1191: look after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1192: walk left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1193: jump opposite right after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1194: look thrice and run twice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RUN (SCAN_RUN $0))))

1195: jump opposite right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_LTURN $0))))

1196: walk right and turn left twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1197: turn left after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LTURN $0))))

1198: turn opposite left after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1199: look opposite right after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1200: look opposite right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LTURN $0))))

1202: look left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_LOOK $0))))

1204: walk left after turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1206: turn left twice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1207: turn right twice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1208: turn opposite right and walk right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1210: turn right and walk opposite left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1211: turn opposite right after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1212: walk opposite right after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1213: run twice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RUN (SCAN_RUN $0))))

1214: turn left after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_LTURN $0))))

1215: look right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_LOOK $0))))

1216: turn opposite left after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1217: run twice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RUN (SCAN_RUN $0))))

1218: turn opposite right and jump left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_JUMP $0))))

1219: turn left twice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1220: turn opposite left and look left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1222: walk opposite right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_LTURN $0))))

1224: turn left after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_LTURN $0))))

1225: look left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1226: turn left thrice after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1227: turn left and look opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1228: turn left and walk opposite right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1229: jump thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1230: look left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1231: turn opposite left after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1232: look right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_LOOK $0))))

1233: turn right thrice and walk
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1234: turn right twice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1235: turn right and jump opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1237: look opposite right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1238: look left and turn right twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1239: turn right and walk opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1242: jump left after turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1243: turn opposite left and jump right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_JUMP $0))))

1244: turn right twice and look right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1245: jump opposite right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1246: turn left thrice after jump
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1247: turn opposite right after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1248: run twice and jump thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1249: turn opposite left after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1251: turn left twice and walk left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1252: turn opposite right after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1253: walk right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_WALK $0))))

1254: turn left twice and walk right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_WALK $0))))

1255: turn left twice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1256: walk opposite left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_RTURN $0))))

1257: turn opposite right after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1258: turn opposite left and walk right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_WALK $0))))

1259: turn right thrice and look
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1260: turn right twice and walk left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_WALK $0))))

1261: jump opposite left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_RTURN $0))))

1262: walk after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1263: turn left and jump opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1265: turn right thrice after walk
0.00	(lambda (SCAN_WALK (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1267: look after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1268: turn right and look opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1269: turn opposite right and jump right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1270: jump opposite left and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_LTURN $0))))

1271: walk after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1272: turn right thrice and jump
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1273: look right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1275: walk and turn right thrice
0.00	(lambda (SCAN_WALK (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1276: look opposite right and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_RTURN $0))))

1277: walk opposite left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1280: look left after turn left twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1281: turn left and walk opposite left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1282: look opposite left after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1283: jump right after turn opposite right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1285: walk opposite left after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1286: look opposite left and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_LTURN $0))))

1287: turn right thrice after jump
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1288: look right after turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1289: walk and turn left thrice
0.00	(lambda (SCAN_WALK (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1290: look right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1291: turn opposite right and look left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_LOOK $0))))

1293: turn right after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_RTURN $0))))

1294: look right and turn left twice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1295: jump left and turn right twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1296: walk left and turn opposite left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1299: jump after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1300: jump right after turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1301: walk left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_WALK $0))))

1303: jump right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_JUMP $0))))

1304: jump and turn right thrice
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1305: turn left after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_LTURN $0))))

1306: turn right after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_RTURN $0))))

1307: jump opposite left after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1308: turn left thrice and look
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1309: jump right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1310: turn right after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_RTURN $0))))

1311: turn opposite left after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1312: turn opposite left and jump left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1313: turn right twice and walk right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1314: turn right and jump opposite left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1315: walk right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1316: jump opposite left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1317: turn left twice and look left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1318: walk left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1319: walk opposite left and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (SCAN_LTURN $0))))

1320: walk right and turn opposite left
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1321: turn right twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1322: turn left after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (SCAN_LTURN $0))))

1323: walk right after turn right twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1324: look left and turn opposite right
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1325: turn opposite right and walk left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_WALK $0))))

1326: walk thrice and run twice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RUN (SCAN_RUN $0))))

1327: look and turn left thrice
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1328: turn left thrice and walk
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1329: turn left and look opposite right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1330: jump left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_JUMP $0))))

1331: turn right after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (SCAN_RTURN $0))))

1333: walk opposite right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

1334: jump left and turn left twice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1336: jump right and turn opposite right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1337: turn left thrice and jump
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

1338: turn left thrice after walk
0.00	(lambda (SCAN_WALK (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1340: jump and turn left thrice
0.00	(lambda (SCAN_JUMP (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1341: turn right after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (SCAN_RTURN $0))))

1342: turn right twice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1343: look thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1344: turn right after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (SCAN_RTURN $0))))

1345: turn right and look opposite left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

1346: turn opposite right after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1347: jump after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1348: walk right and turn right twice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1349: jump opposite right and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (SCAN_RTURN $0))))

1350: turn right twice and jump right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

1351: walk right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (SCAN_WALK $0))))

1353: jump left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (SCAN_JUMP $0))))

1354: turn opposite left and walk left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

1355: turn right twice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1356: turn left twice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1359: turn opposite right and look right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

1360: turn right twice and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1361: turn opposite left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1362: turn right after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

1363: run thrice and turn right twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1364: turn opposite left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1365: run opposite left and run twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1366: turn right twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1367: turn right twice and run thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1368: run twice and run opposite right
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))))

1369: turn left after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

1370: turn left twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1371: turn left thrice and turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1372: turn opposite right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1373: turn left twice and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1374: turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1375: turn opposite right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1376: run thrice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1377: turn opposite left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1378: turn opposite right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1380: run opposite left after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))))

1381: turn right and turn left thrice
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1382: turn opposite right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1384: turn opposite left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1385: turn left twice and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1386: turn left twice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1387: turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1388: turn right twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1389: turn opposite right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1390: turn right twice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1391: turn right thrice and turn left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

1392: turn opposite left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1393: turn opposite left and run thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1395: run twice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1396: turn opposite left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1397: turn right twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1398: turn opposite right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1399: turn opposite right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1400: run opposite right after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))))

1401: run thrice and turn opposite left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1402: run twice and run opposite left
0.00	(lambda (SCAN_RUN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))))

1403: turn opposite right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1404: run opposite right and run twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1405: turn left thrice after turn right
0.00	(lambda (SCAN_RTURN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

1407: turn right thrice and turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1408: turn opposite left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1411: run thrice and run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1412: turn left twice and run thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1413: turn left thrice and turn right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

1415: turn opposite right and run thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1416: turn right twice and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1417: turn right twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1418: turn opposite right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1419: run thrice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1420: turn right and turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1421: turn opposite left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1422: turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1423: turn left twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1424: turn left twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1426: run thrice and turn left twice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1427: run twice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1428: turn right after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1429: turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1430: turn left twice and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1431: turn right twice and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1432: turn right thrice after turn left
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1433: run thrice and turn opposite right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1434: turn left twice and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1435: turn left and turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1436: turn left thrice after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1437: run thrice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1438: run thrice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1439: turn left twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1440: turn right twice and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1441: turn right thrice after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1442: turn left and turn right thrice
0.00	(lambda (SCAN_LTURN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

1443: run thrice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1444: turn left after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1445: turn opposite left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1451: look thrice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1455: jump thrice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1458: look twice and look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1463: look thrice and look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1469: walk thrice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1471: walk thrice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1475: jump twice after jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1478: jump twice and jump thrice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1479: look thrice after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1482: walk twice and walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1488: look thrice after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1494: walk thrice and walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1510: walk twice after walk thrice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1512: look twice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LOOK (SCAN_LOOK $0))))

1522: jump twice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_JUMP (SCAN_JUMP $0))))

1530: look twice after look thrice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1531: walk twice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_WALK (SCAN_WALK $0))))

1534: look twice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LOOK (SCAN_LOOK $0))))

1549: jump thrice after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1553: jump thrice and jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1555: run opposite right after run right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))))

1558: turn left thrice and run twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0)))))

1561: walk thrice and walk right
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN (SCAN_WALK $0))))

1562: run right twice after turn right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

1564: turn right thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

1569: jump thrice and jump left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN (SCAN_JUMP $0))))

1573: run twice and turn left thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

1574: jump left and jump thrice
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1575: run twice after turn left thrice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_RUN $0)))))

1576: walk right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN (SCAN_WALK $0))))

1586: run right twice and turn right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))))

1590: walk thrice and walk left
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN (SCAN_WALK $0))))

1591: turn left thrice after run twice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))

1594: look right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN (SCAN_LOOK $0))))

1596: run twice after turn right thrice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0)))))

1597: jump thrice after jump left
0.00	(lambda (SCAN_LTURN (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1603: walk thrice after walk left
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1606: run right and run opposite right
0.00	(lambda (SCAN_RTURN (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0)))))

1607: walk right and walk thrice
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1612: turn right after run right twice
0.00	(lambda (SCAN_RTURN (SCAN_RUN (SCAN_RTURN (SCAN_RUN (SCAN_RTURN $0))))))

1614: look left and look thrice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1618: run left twice and turn left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))))

1626: walk left after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_LTURN (SCAN_WALK $0))))

1631: look thrice and look left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN (SCAN_LOOK $0))))

1636: turn left after run left twice
0.00	(lambda (SCAN_LTURN (SCAN_RUN (SCAN_LTURN (SCAN_RUN (SCAN_LTURN $0))))))

1642: run twice and turn right thrice
0.00	(lambda (SCAN_RUN (SCAN_RUN (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))

1645: turn right and run right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

1648: jump right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN (SCAN_JUMP $0))))

1650: jump left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_LTURN (SCAN_JUMP $0))))

1658: run left after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

1661: walk thrice after walk right
0.00	(lambda (SCAN_RTURN (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1666: walk left and walk thrice
0.00	(lambda (SCAN_LTURN (SCAN_WALK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

1676: run left twice after turn left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

1677: look thrice after look right
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1680: turn right thrice and run twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RUN $0)))))

1682: run right after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

1684: look right and look thrice
0.00	(lambda (SCAN_RTURN (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1687: look thrice and look right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_RTURN (SCAN_LOOK $0))))

1689: jump thrice and jump right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_RTURN (SCAN_JUMP $0))))

1691: jump right and jump thrice
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1692: turn left and run left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (SCAN_LTURN (SCAN_RUN $0)))))

1694: jump thrice after jump right
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

1698: look left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LTURN (SCAN_LOOK $0))))

1700: look thrice after look left
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

1707: run opposite right and run right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (SCAN_RTURN (SCAN_RUN $0)))))

1709: run opposite left after run left
0.00	(lambda (SCAN_LTURN (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0)))))

1716: jump thrice and run thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1718: walk twice and walk opposite left
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))))

1722: look opposite right after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))))

1733: jump thrice and turn opposite right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1735: jump twice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1743: turn opposite left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1744: look after look left twice
0.00	(lambda (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK (SCAN_LOOK $0))))))

1750: turn left twice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1752: jump and jump right twice
0.00	(lambda (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP $0))))))

1754: jump right twice and jump
0.00	(lambda (SCAN_RTURN (SCAN_JUMP (SCAN_RTURN (SCAN_JUMP (SCAN_JUMP $0))))))

1757: walk thrice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1759: jump opposite left and jump twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1760: look thrice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1761: look twice and look opposite right
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0)))))

1763: jump twice and jump opposite right
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))))

1764: walk thrice and turn opposite left
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1769: look twice after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1771: look opposite left after look twice
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))))

1779: walk twice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1780: walk thrice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1783: look thrice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1784: jump twice and jump opposite left
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))))

1786: walk thrice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1790: turn left twice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1793: turn opposite right and jump thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1796: jump thrice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1803: look thrice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1806: turn opposite left and walk thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1807: look thrice and turn right twice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1812: turn right twice and look thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1818: turn opposite right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1820: jump opposite right and jump twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1829: jump thrice after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1834: turn opposite left and look thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1835: jump opposite right after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0)))))

1838: walk thrice and turn right twice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1846: turn right twice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1850: look twice and look opposite left
0.00	(lambda (SCAN_LOOK (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0)))))

1852: turn opposite left and jump thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1854: jump thrice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1863: run thrice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0)))

1864: look left twice after look
0.00	(lambda (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK (SCAN_LTURN (SCAN_LOOK $0))))))

1868: look opposite left and look twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1871: turn right twice and jump thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1876: walk right twice and walk
0.00	(lambda (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK (SCAN_WALK $0))))))

1884: jump opposite left after jump twice
0.00	(lambda (SCAN_JUMP (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0)))))

1885: look thrice and turn left twice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1887: walk opposite right and walk twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1891: look twice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1892: look thrice and turn opposite right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1893: jump thrice and turn right twice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1894: walk twice and walk opposite right
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))))

1898: walk thrice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1900: turn right twice and walk thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1908: walk and walk right twice
0.00	(lambda (SCAN_WALK (SCAN_RTURN (SCAN_WALK (SCAN_RTURN (SCAN_WALK $0))))))

1914: walk opposite left and walk twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1919: jump thrice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1920: turn opposite right and walk thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1922: look thrice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1924: turn right twice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1931: walk opposite left after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0)))))

1939: turn opposite right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1940: turn opposite right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1944: turn left twice and jump thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1946: walk twice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

1951: look opposite right and look twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1953: look thrice and turn opposite left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1955: walk opposite right after walk twice
0.00	(lambda (SCAN_WALK (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0)))))

1957: walk and walk left twice
0.00	(lambda (SCAN_WALK (SCAN_LTURN (SCAN_WALK (SCAN_LTURN (SCAN_WALK $0))))))

1960: jump twice after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1962: run thrice and jump thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

1963: walk thrice and turn left twice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1964: jump thrice and turn left twice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1970: turn opposite left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1976: turn right twice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

1978: turn opposite left after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1983: turn opposite right and look thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1989: jump thrice and turn opposite left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1993: turn left twice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

1994: turn left twice and look thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

1998: turn left twice and walk thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2001: walk thrice and turn opposite right
-0.04	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
-3.20	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (SCAN_RTURN (SCAN_RTURN $0))))

2008: jump thrice after turn opposite left
-0.04	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))
-3.23	(lambda (SCAN_LTURN (SCAN_LTURN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2019: turn left twice and run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2020: run opposite left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2026: run opposite left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2031: run opposite left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2033: run opposite right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2036: turn opposite left twice and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2038: run thrice after run opposite left
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RUN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2042: run opposite left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2048: run opposite right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2050: run and turn opposite left twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2051: turn right twice and run opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2053: run after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2057: turn opposite right and run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2063: turn opposite right after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2066: run opposite right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2072: run opposite right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2078: turn opposite right twice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2079: run opposite left and run thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RUN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2080: run opposite right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2085: turn right twice and run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2086: run thrice and run opposite left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2091: run opposite left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2097: run opposite right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2099: turn around right after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2101: turn opposite left after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2106: run after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2125: run thrice and run opposite right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2146: run opposite left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2165: turn right twice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2173: run and turn opposite right twice
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2176: turn opposite right and run opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2181: turn left twice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2182: run after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2185: run opposite left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2189: turn right twice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2192: run opposite left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2193: turn opposite left twice after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2197: run opposite right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2198: run opposite left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2204: turn around right and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2211: run and turn around right
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2214: run and turn around left
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2228: run thrice after run opposite right
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RUN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2230: run right after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2240: turn opposite left and run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2242: turn left twice and run opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2244: turn around left and run
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2257: turn opposite left and run opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2258: turn opposite right after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2262: run left after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2265: run opposite right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2272: run after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2277: turn right thrice and run right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2281: turn around left after run
0.00	(lambda (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2283: turn opposite right twice and run
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2293: turn left thrice and run left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2296: run opposite right and run thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RUN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2298: run opposite right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2299: turn left twice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2305: turn opposite left after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2312: run thrice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2313: look opposite right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2314: turn around right and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2315: jump opposite right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2317: look and turn opposite left twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2318: walk right after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2319: walk opposite right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2320: turn opposite right twice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2321: turn opposite right twice and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2322: turn left twice and look opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2323: walk opposite left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2324: walk opposite left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2325: jump right after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2326: turn around left after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2327: turn left twice and jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2328: turn opposite left and jump opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2329: turn around left after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2330: turn opposite left after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2331: turn opposite left after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2333: walk opposite right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2334: walk left after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2335: jump opposite right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2336: turn right thrice and look right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2337: turn opposite left after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2338: run thrice and walk opposite left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2340: turn right twice and walk opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2341: turn left twice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2342: walk opposite left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2343: look opposite left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2344: look and turn around right
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2345: turn left twice after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2346: turn opposite right and look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2347: jump after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2348: jump opposite right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2349: turn opposite right and walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2350: jump opposite right and run thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2351: walk opposite right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2352: jump opposite right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2354: turn around right after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2355: jump opposite right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2356: turn opposite right after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2358: jump opposite right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2359: turn left twice and walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2361: walk opposite right after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2362: jump opposite left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2363: walk opposite left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2364: look opposite left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2366: walk opposite left and run thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2368: look opposite right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2369: turn around left and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2370: walk opposite left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2371: walk opposite left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2372: jump opposite left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2373: run thrice and jump opposite right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2374: turn around left and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2375: turn left twice and walk opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2376: turn right twice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2377: turn left twice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2378: jump opposite left and run thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2379: jump opposite right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2380: jump opposite left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2381: turn right twice after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2382: turn opposite left and look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2383: turn right twice after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2384: look and turn opposite right twice
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2386: turn opposite right and jump opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2388: look opposite left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2389: turn opposite left twice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2390: turn around right after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2391: look opposite left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2392: turn opposite left after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2393: walk opposite right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2394: walk and turn opposite left twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2395: look opposite right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2396: look opposite left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2397: walk opposite left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2398: turn opposite left twice and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2399: turn opposite left after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2400: walk opposite left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2401: turn opposite left twice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2402: look opposite left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2405: turn right twice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2407: walk opposite right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2408: turn right twice and walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2409: jump and turn around left
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2410: look opposite right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2411: jump opposite left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2412: turn opposite right after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2413: look after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2414: turn opposite right twice after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2415: run thrice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2416: walk after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2417: jump after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2418: jump and turn around right
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2419: turn right twice and jump opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2420: walk and turn opposite right twice
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2421: look opposite left and run thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2422: turn left twice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2423: jump after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2424: turn opposite right after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2425: turn opposite left twice after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2428: look opposite right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2430: turn opposite left and walk opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2431: turn opposite right and walk opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2432: turn opposite right and look opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2433: turn right thrice and walk right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2434: turn opposite right after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2435: turn around right and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2436: walk opposite right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2437: turn left twice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2438: turn opposite left and jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2439: turn opposite right after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2440: jump opposite left after run thrice
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2441: turn left twice and jump opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2442: look opposite right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2443: jump after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2444: look after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2446: look after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2447: turn left thrice and walk left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2448: walk and turn around right
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2449: look opposite right and run thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2450: run thrice and jump opposite left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2452: turn around right after look
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2453: look opposite left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2454: walk opposite right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2455: run thrice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2457: turn left thrice and jump left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2458: turn around right and look
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2459: jump and turn opposite left twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2460: run thrice and look opposite left
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2461: jump opposite left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2462: turn opposite left after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2463: jump and turn opposite right twice
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2464: turn opposite right and jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2465: turn opposite right twice and jump
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2466: turn left twice and look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2467: turn right thrice and jump right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2469: turn opposite left twice and look
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2470: turn opposite right after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2471: look opposite right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2472: walk after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2473: run thrice and look opposite right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2474: run thrice after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2475: turn opposite left and walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2476: look opposite right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2478: look opposite left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2479: turn right twice and look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2481: walk opposite right and run thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2482: walk after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2485: walk opposite left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2486: turn right twice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2487: walk after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2488: turn around left after jump
0.00	(lambda (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2489: look opposite left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2491: walk and turn around left
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2492: look left after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2493: look right after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2494: run thrice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2495: jump opposite left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2496: jump left after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2497: turn right twice and jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2498: turn opposite left twice and walk
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2499: turn left thrice and look left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2500: look and turn around left
0.00	(lambda (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2501: jump opposite left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2502: turn right twice and look opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2503: turn opposite right twice and walk
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2504: turn left twice after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2506: look opposite right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2507: turn right twice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2508: turn opposite right twice after walk
0.00	(lambda (SCAN_WALK (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2509: jump opposite right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2510: jump opposite left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2512: turn opposite left and look opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2513: run thrice and walk opposite right
0.00	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2514: run thrice after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2517: jump opposite right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2518: turn around left and jump
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2521: look after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2522: walk opposite right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2526: turn right thrice after turn right twice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2527: turn left thrice after turn left twice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2528: walk thrice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2529: turn around left and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

2531: turn opposite right twice and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

2533: run thrice after turn right thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2535: turn around left after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2536: turn right thrice after turn left twice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2539: run thrice after turn left thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2540: turn around right after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2541: turn opposite right twice and turn right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2542: turn left thrice after turn opposite left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2543: turn left after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

2544: turn left after turn around left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2545: jump thrice and jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2546: look thrice and jump thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2549: look thrice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2550: look thrice and look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2551: turn opposite left after turn right thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2552: turn right and turn around left
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2557: turn right and turn opposite left twice
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2559: turn around left and turn left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2561: turn around right after turn right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2564: turn left and turn around right
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2566: turn left and turn around left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2568: turn opposite right after turn right thrice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2570: walk thrice and jump thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2571: turn left thrice and run thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2573: turn right twice and turn left thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2574: turn right after turn opposite right twice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2576: turn left and turn opposite right twice
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2577: turn left after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

2578: turn left thrice and turn opposite right
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2579: jump thrice and walk thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2585: jump thrice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2586: turn left thrice after run thrice
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2587: turn opposite right twice after turn right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2590: turn opposite right twice after turn left
0.00	(lambda (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2593: turn right and turn opposite right twice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2594: turn right thrice after turn opposite right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2595: turn right after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

2597: turn left twice and turn left thrice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2598: turn opposite right after turn left thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2600: turn opposite left twice after turn left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2601: turn right after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

2605: jump thrice and look thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2607: run thrice and turn right thrice
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2608: turn opposite left twice and turn left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2609: turn opposite left after turn left thrice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2610: turn opposite left and turn right thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2611: turn opposite right and turn right thrice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2612: walk thrice and look thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2615: turn opposite left twice and turn right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN $0))))

2617: turn left thrice after turn opposite right
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2618: turn right thrice and run thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) $0))))

2620: walk thrice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2621: turn around right and turn right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2623: turn right thrice after run thrice
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2624: turn right thrice and turn opposite left
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2625: turn right thrice and turn right twice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2627: turn right and turn around right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2629: turn left thrice after turn right twice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2631: turn left thrice and turn left twice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2632: turn opposite left twice after turn right
0.00	(lambda (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2634: turn left twice after turn right thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2635: jump thrice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2636: turn right thrice and turn opposite right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2640: turn left twice after turn left thrice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2641: turn right twice after turn left thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2642: walk thrice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2643: turn opposite right and turn left thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2644: walk thrice and walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2647: turn right thrice after turn opposite left
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2648: turn right twice and turn right thrice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2649: turn right thrice and turn left twice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-0.69	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2651: turn left thrice and turn right twice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-0.69	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2652: turn left and turn opposite left twice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2657: turn right after turn around right
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2660: turn around left after turn left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2662: look thrice after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2664: turn left twice and turn right thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2666: turn left thrice and turn opposite left
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2667: look thrice after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0)))

2670: turn right twice after turn right thrice
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN $0))))
-1.10	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))
-1.10	(lambda (SCAN_RTURN (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

2673: turn around right and turn left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LTURN $0))))

2674: look thrice and walk thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0)))

2677: run thrice and turn left thrice
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-0.69	(lambda (#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0)))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2678: jump thrice after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0)))

2680: turn opposite left and turn left thrice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2681: turn left after turn opposite left twice
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN $0))))
-1.10	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))
-1.10	(lambda (SCAN_LTURN (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

2684: look thrice and run opposite right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2690: run opposite right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2692: run opposite left and look thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2693: run opposite left and jump thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2694: run opposite right and walk thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2695: walk thrice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2698: jump thrice and run opposite right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2699: run opposite left and walk thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2701: jump thrice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2702: run opposite right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2705: jump thrice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2710: look thrice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2711: run opposite left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2713: run opposite right and look thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2714: walk thrice and run opposite right
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2716: walk thrice and run opposite left
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2718: run opposite left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2722: look thrice after run opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2730: jump thrice and run opposite left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2734: run opposite left after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2739: walk thrice after run opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2741: look thrice and run opposite left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_RUN $0))))

2745: run opposite right and jump thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2748: run opposite right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_RUN $0))))

2755: look opposite right and walk thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2760: look opposite left and look thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LOOK $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2770: jump opposite right and look thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2776: jump opposite left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2780: jump thrice after jump opposite right
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_JUMP $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2783: walk thrice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2784: jump thrice and jump opposite right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2789: walk opposite left and jump thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2798: jump thrice after jump opposite left
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_JUMP $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2807: jump opposite left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2813: look opposite right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2814: walk opposite right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2820: look opposite right and jump thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2826: look thrice after jump opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2827: look opposite left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2834: look thrice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2838: walk opposite left and look thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2842: look opposite left and jump thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2843: walk thrice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2848: look thrice after look opposite right
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LOOK $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2850: look thrice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2864: walk opposite right and jump thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2865: look thrice after jump opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2873: jump thrice after look opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2881: look thrice and walk opposite left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2885: jump thrice and look opposite left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2886: look thrice and jump opposite left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2887: jump thrice and jump opposite left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP $0))))

2893: look opposite right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2894: look thrice and look opposite left
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2898: jump opposite right and walk thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) $0))))

2900: look opposite left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK $0))))

2902: jump thrice after walk opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2909: walk thrice and look opposite right
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2914: jump thrice and walk opposite left
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2917: look thrice after look opposite left
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LOOK $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2925: jump thrice after look opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_LOOK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2937: jump opposite right after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2943: look thrice and jump opposite right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2944: look opposite right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2945: jump thrice and look opposite right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2946: walk opposite right and look thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2949: look opposite right and look thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (SCAN_LOOK $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2958: look thrice and look opposite right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_LOOK $0))))

2965: jump thrice after walk opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2970: jump opposite left and look thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) $0))))

2975: walk opposite right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2985: look thrice and walk opposite right
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2986: jump opposite left and jump thrice
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_JUMP $0))))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

2988: walk thrice and jump opposite right
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

2993: jump thrice and walk opposite right
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_WALK $0))))

2996: walk opposite left after look thrice
0.00	(lambda (#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

2999: walk opposite left after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (SCAN_WALK $0))))

3004: jump opposite right and jump thrice
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (SCAN_JUMP $0))))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) $0))))

3005: jump opposite right after walk thrice
0.00	(lambda (#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

3010: jump opposite right after jump thrice
0.00	(lambda (#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0)))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (SCAN_JUMP $0))))

3729: turn opposite left after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3732: turn left twice after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3733: turn around left and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3734: turn around right and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3735: turn right thrice and turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3736: turn opposite left and turn opposite right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3737: turn opposite left twice and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3738: turn around left and turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3739: turn around right and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3740: turn opposite left twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3742: turn around right after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3743: turn around left after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3744: turn left thrice after turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3745: turn opposite left after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3746: turn opposite right after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3747: turn around left after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3749: turn right twice after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3750: turn right twice after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3752: turn opposite left after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3753: turn right twice and turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3755: turn opposite left twice and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3758: turn left twice and turn around right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3767: turn left twice after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3768: turn opposite right twice and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3769: turn right twice and turn around left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3770: turn around right after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3771: turn opposite right twice and turn left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3774: turn around left and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3775: turn right twice and turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3777: turn around right after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3780: turn opposite right twice and turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3782: turn opposite left twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3784: turn opposite right twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3787: turn around left after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3788: turn around left after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3789: turn opposite right after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3793: turn opposite right twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3795: turn left twice after turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3796: turn right twice after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3798: turn opposite right after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3800: turn left twice and turn opposite right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3802: turn left thrice and turn left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3804: turn left twice and turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3805: turn opposite right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3807: turn opposite right twice and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3809: turn opposite left twice and turn right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3811: turn opposite right and turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3813: turn opposite left twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3816: turn opposite right and turn around left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3817: turn opposite left after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3820: turn around left and turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3821: turn opposite right twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3823: turn left twice after turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3824: turn right thrice after turn right thrice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3825: turn opposite left and turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3826: turn opposite right and turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3828: turn right twice and turn opposite left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3831: turn opposite right after turn around right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3832: turn around right and turn opposite left
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3834: turn opposite left thrice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3838: turn opposite right and turn opposite left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3839: turn opposite left and turn around right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3840: turn around right after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3841: turn opposite left and turn opposite left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3847: turn opposite left twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

3848: turn opposite left twice and turn opposite right
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3849: turn right twice after turn opposite right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3850: turn around right and turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3853: turn opposite right twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))

3855: turn left twice and turn around left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))

6435: turn opposite left twice and turn opposite left twice
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))

6436: turn left twice and turn opposite left thrice
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))

6438: turn around left after turn around left
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))

6439: turn around right and turn around right
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))

6447: turn opposite right twice and turn opposite right twice
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))

6455: turn opposite left thrice after turn left twice
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))

6473: turn opposite left and turn opposite left thrice
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))

6483: turn left twice after turn opposite left thrice
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))

6489: turn opposite right twice after turn opposite right twice
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))

6494: turn opposite right after turn opposite right thrice
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))

6495: turn opposite right thrice after turn opposite right
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))

6503: turn right twice and turn opposite right thrice
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))

6508: turn around left and turn opposite left twice
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))

6509: turn around left after turn opposite left twice
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))

6517: turn opposite left thrice after turn opposite left
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))

6551: turn opposite left thrice and turn left twice
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))

6552: turn opposite right thrice after turn right twice
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))

6553: turn opposite right thrice and turn right twice
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))

6555: turn opposite right twice after turn around right
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))

6565: turn around right and turn opposite right twice
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))

6568: turn opposite left twice after turn around left
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))

6569: turn opposite left thrice and turn opposite left
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))

6570: turn opposite left twice and turn around left
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))

6573: turn right twice after turn opposite right thrice
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))

6577: turn around right after turn opposite right twice
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))

6580: turn around right twice
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))

6584: turn around left and turn around left
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))

6591: turn opposite left after turn opposite left thrice
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))

6595: turn opposite left twice after turn opposite left twice
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))

6598: turn around right after turn around right
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))

6612: turn opposite right thrice and turn opposite right
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))

6617: turn opposite right and turn opposite right thrice
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))

6621: turn opposite right twice and turn around right
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0))

6622: turn around left twice
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0))

9484: turn around left twice after turn right twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0)))

9485: turn opposite left after turn around right twice
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

9487: turn opposite right and turn around right twice
-0.69	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0)))

9488: turn around right twice and turn opposite right
-0.69	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0)))

9489: turn opposite right thrice after turn around right
-0.69	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0)))

9499: turn left twice and turn around left twice
-0.69	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0)))

9507: turn opposite left thrice after turn around left
-0.69	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0)))

9515: turn opposite left twice and turn opposite left thrice
-0.69	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0)))

9523: turn around left twice and turn right twice
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

9527: turn around left after turn opposite left thrice
-0.69	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0)))

9530: turn opposite right twice after turn opposite right thrice
-0.69	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0)))

9532: turn around left twice and turn opposite right
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

9536: turn opposite left twice after turn opposite left thrice
-0.69	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0)))

9538: turn around left twice and turn left twice
-0.69	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0)))

9539: turn around right twice and turn opposite left
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

9542: turn opposite left thrice and turn around left
-0.69	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0)))

9543: turn left twice after turn around left twice
-0.70	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
-0.70	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0)))
-4.61	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))))

9544: turn opposite right thrice and turn around right
-0.69	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0)))

9546: turn opposite right after turn around right twice
-0.69	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0)))

9547: turn opposite left thrice and turn opposite left twice
-0.69	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0)))

9553: turn opposite right after turn around left twice
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

9558: turn left twice and turn around right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0)))

9559: turn around right twice and turn right twice
-0.70	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
-0.70	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0)))
-4.54	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))))

9560: turn opposite left thrice after turn opposite left twice
-0.69	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0)))

9567: turn opposite left and turn around right twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0)))

9570: turn right twice after turn around right twice
-0.70	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
-0.70	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0)))
-4.54	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))))

9575: turn opposite right twice and turn opposite right thrice
-0.69	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0)))

9576: turn opposite right thrice and turn opposite right twice
-0.69	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0)))

9578: turn around left and turn opposite left thrice
-0.69	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0)))

9587: turn around left twice after turn opposite left
-0.69	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0)))

9594: turn opposite right thrice after turn opposite right twice
-0.69	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0)))

9600: turn opposite left after turn around left twice
-0.69	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0)))

9603: turn around left twice after turn left twice
-0.70	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
-0.70	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0)))
-4.61	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))))

9611: turn opposite right and turn around left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0)))

9616: turn opposite left and turn around left twice
-0.69	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0)))

9617: turn around right and turn opposite right thrice
-0.69	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0)))

9619: turn around right twice after turn right twice
-0.70	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
-0.70	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0)))
-4.54	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))))

9620: turn around right twice after turn opposite left
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0)))

9623: turn around left twice after turn opposite right
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0)))

9626: turn right twice after turn around left twice
0.00	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))

9634: turn right twice and turn around left twice
0.00	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0)))

9637: turn around right after turn opposite right thrice
-0.69	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0)))

9639: turn around right twice after turn left twice
0.00	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0)))

9641: turn left twice after turn around right twice
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

9645: turn around right twice and turn left twice
0.00	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))

9648: turn around right twice after turn opposite right
-0.69	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0)))

9655: turn around left twice and turn opposite left
-0.69	(lambda (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))
-0.69	(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0))))) $0)))

9656: turn right twice and turn around right twice
-0.70	(lambda (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))
-0.70	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))) $0)))
-4.54	(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0))))))

Compression message saved to: compressionMessages/2020-11-27T20:46:18.171020
Compression backend will run for most 20 iterations
Total number of candidates: 72065
Constructed version spaces and coalesced candidates in 13.3745s.
Trimmed down the beam, have only 300 best candidates (M)
Rewrote topK in 34.8564s.
Initial score: -17238.276288
 (M)New frontiers length 300 Scored candidates (M) in 19.8888s.
No improvement possible. (M) 
Completed one step of memory consolidation in 1.32654m.
completed ocaml compression in 1.32654m.
Finished consolidation.
Induced a grammar in 80.8 seconds
Grammar after iteration 5:
-1.324049	t0	$_
-2.451724	tstr -> tstr	SCAN_RUN
-2.477325	tstr -> tstr	SCAN_LOOK
-2.480572	tstr -> tstr	SCAN_JUMP
-2.518688	tstr -> tstr	SCAN_WALK
-2.644371	tstr -> tstr	SCAN_RTURN
-2.667629	tstr -> tstr	SCAN_LTURN
-2.180817	tstr -> tstr	#(lambda (SCAN_RTURN (SCAN_RTURN $0)))
-2.197828	tstr -> tstr	#(lambda (SCAN_LTURN (SCAN_LTURN $0)))
-3.858769	tstr -> tstr	#(lambda (SCAN_RUN (SCAN_RUN (SCAN_RUN $0))))
-3.884914	tstr -> tstr	#(lambda (SCAN_JUMP (SCAN_JUMP (SCAN_JUMP $0))))
-3.898248	tstr -> tstr	#(lambda (SCAN_LOOK (SCAN_LOOK (SCAN_LOOK $0))))
-4.042382	tstr -> tstr	#(lambda (SCAN_WALK (SCAN_WALK (SCAN_WALK $0))))
-5.052047	tstr -> tstr	#(lambda (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) (#(lambda (SCAN_RTURN (SCAN_RTURN $0))) $0)))))
-5.052047	tstr -> tstr	#(lambda (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) (#(lambda (SCAN_LTURN (SCAN_LTURN $0))) $0)))))
Currently using this much memory: 370225152
ecIterator count 4
