CUDA is available?: False
using cuda?: False
Running EC on polestar @ 2020-12-04 02:12:53.843582 with 1 CPUs and parameters:
	 noConsolidation  =  True
	 iterations  =  1
	 enumerationTimeout  =  50
	 useRecognitionModel  =  False
	 topk_use_only_likelihood  =  False
	 pseudoCounts  =  30.0
	 aic  =  0.0
	 structurePenalty  =  0.0
	 arity  =  4
	 taskReranker  =  unsolved
	 storeTaskMetrics  =  True
	 rewriteTaskMetrics  =  False
	 maximumFrontier  =  10
	 solver  =  python
	 topK  =  1
	 evaluationTimeout  =  1.0
	 cuda  =  False

Currently using this much memory: 138809344
Currently using this much memory: 138809344
Using a waking task batch of size: 1
Disabling parallelism on the Python side because we only have one job.
If you are using ocaml, there could still be parallelism.
(python) Launching input -> tout (1 tasks) w/ 1 CPUs. 0.000000 <= MDL < 1.500000. Timeout 50.000000.
totalNumberOfPrograms: 0, 	time: 0.0003142356872558594
(python) Launching input -> tout (1 tasks) w/ 1 CPUs. 1.500000 <= MDL < 3.000000. Timeout 49.993345.
totalNumberOfPrograms: 0, 	time: 0.0008893013000488281
(python) Launching input -> tout (1 tasks) w/ 1 CPUs. 3.000000 <= MDL < 4.500000. Timeout 49.990764.
program generated: (lambda (translate (left $0 turn)))
program generated: (lambda (translate (left $0 twice)))
program generated: (lambda (translate (left $0 thrice)))
program generated: (lambda (translate (left $0 around)))
program generated: (lambda (translate (left $0 and)))
program generated: (lambda (translate (left $0 after)))
program generated: (lambda (translate (left $0 opposite)))
program generated: (lambda (translate (right $0 turn)))
program generated: (lambda (translate (right $0 twice)))
program generated: (lambda (translate (right $0 thrice)))
program generated: (lambda (translate (right $0 around)))
program generated: (lambda (translate (right $0 and)))
program generated: (lambda (translate (right $0 after)))
program generated: (lambda (translate (right $0 opposite)))
totalNumberOfPrograms: 14, 	time: 0.00784754753112793
(python) Launching input -> tout (1 tasks) w/ 1 CPUs. 4.500000 <= MDL < 6.000000. Timeout 49.980777.
totalNumberOfPrograms: 0, 	time: 0.017893075942993164
(python) Launching input -> tout (1 tasks) w/ 1 CPUs. 6.000000 <= MDL < 7.500000. Timeout 49.960825.
program generated: (lambda (apply_fn (lambda $0) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda $0) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda $0) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda $0) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda $0) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda $0) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda $0) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda $0) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda $0) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda $0) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda $0) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda $0) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda $0) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda $0) (translate (right $0 opposite))))
totalNumberOfPrograms: 14, 	time: 0.061676025390625
(python) Launching input -> tout (1 tasks) w/ 1 CPUs. 7.500000 <= MDL < 9.000000. Timeout 49.897354.
program generated: (lambda (concat (translate (left $0 turn)) (translate (left $0 turn))))
program generated: (lambda (concat (translate (left $0 turn)) (translate (left $0 twice))))
program generated: (lambda (concat (translate (left $0 turn)) (translate (left $0 thrice))))
program generated: (lambda (concat (translate (left $0 turn)) (translate (left $0 around))))
program generated: (lambda (concat (translate (left $0 turn)) (translate (left $0 and))))
program generated: (lambda (concat (translate (left $0 turn)) (translate (left $0 after))))
program generated: (lambda (concat (translate (left $0 turn)) (translate (left $0 opposite))))
program generated: (lambda (concat (translate (left $0 turn)) (translate (right $0 turn))))
program generated: (lambda (concat (translate (left $0 turn)) (translate (right $0 twice))))
program generated: (lambda (concat (translate (left $0 turn)) (translate (right $0 thrice))))
program generated: (lambda (concat (translate (left $0 turn)) (translate (right $0 around))))
program generated: (lambda (concat (translate (left $0 turn)) (translate (right $0 and))))
program generated: (lambda (concat (translate (left $0 turn)) (translate (right $0 after))))
program generated: (lambda (concat (translate (left $0 turn)) (translate (right $0 opposite))))
program generated: (lambda (concat (translate (left $0 twice)) (translate (left $0 turn))))
program generated: (lambda (concat (translate (left $0 twice)) (translate (left $0 twice))))
program generated: (lambda (concat (translate (left $0 twice)) (translate (left $0 thrice))))
program generated: (lambda (concat (translate (left $0 twice)) (translate (left $0 around))))
program generated: (lambda (concat (translate (left $0 twice)) (translate (left $0 and))))
program generated: (lambda (concat (translate (left $0 twice)) (translate (left $0 after))))
program generated: (lambda (concat (translate (left $0 twice)) (translate (left $0 opposite))))
program generated: (lambda (concat (translate (left $0 twice)) (translate (right $0 turn))))
program generated: (lambda (concat (translate (left $0 twice)) (translate (right $0 twice))))
program generated: (lambda (concat (translate (left $0 twice)) (translate (right $0 thrice))))
program generated: (lambda (concat (translate (left $0 twice)) (translate (right $0 around))))
program generated: (lambda (concat (translate (left $0 twice)) (translate (right $0 and))))
program generated: (lambda (concat (translate (left $0 twice)) (translate (right $0 after))))
program generated: (lambda (concat (translate (left $0 twice)) (translate (right $0 opposite))))
program generated: (lambda (concat (translate (left $0 thrice)) (translate (left $0 turn))))
program generated: (lambda (concat (translate (left $0 thrice)) (translate (left $0 twice))))
program generated: (lambda (concat (translate (left $0 thrice)) (translate (left $0 thrice))))
program generated: (lambda (concat (translate (left $0 thrice)) (translate (left $0 around))))
program generated: (lambda (concat (translate (left $0 thrice)) (translate (left $0 and))))
program generated: (lambda (concat (translate (left $0 thrice)) (translate (left $0 after))))
program generated: (lambda (concat (translate (left $0 thrice)) (translate (left $0 opposite))))
program generated: (lambda (concat (translate (left $0 thrice)) (translate (right $0 turn))))
program generated: (lambda (concat (translate (left $0 thrice)) (translate (right $0 twice))))
program generated: (lambda (concat (translate (left $0 thrice)) (translate (right $0 thrice))))
program generated: (lambda (concat (translate (left $0 thrice)) (translate (right $0 around))))
program generated: (lambda (concat (translate (left $0 thrice)) (translate (right $0 and))))
program generated: (lambda (concat (translate (left $0 thrice)) (translate (right $0 after))))
program generated: (lambda (concat (translate (left $0 thrice)) (translate (right $0 opposite))))
program generated: (lambda (concat (translate (left $0 around)) (translate (left $0 turn))))
program generated: (lambda (concat (translate (left $0 around)) (translate (left $0 twice))))
program generated: (lambda (concat (translate (left $0 around)) (translate (left $0 thrice))))
program generated: (lambda (concat (translate (left $0 around)) (translate (left $0 around))))
program generated: (lambda (concat (translate (left $0 around)) (translate (left $0 and))))
program generated: (lambda (concat (translate (left $0 around)) (translate (left $0 after))))
program generated: (lambda (concat (translate (left $0 around)) (translate (left $0 opposite))))
program generated: (lambda (concat (translate (left $0 around)) (translate (right $0 turn))))
program generated: (lambda (concat (translate (left $0 around)) (translate (right $0 twice))))
program generated: (lambda (concat (translate (left $0 around)) (translate (right $0 thrice))))
program generated: (lambda (concat (translate (left $0 around)) (translate (right $0 around))))
program generated: (lambda (concat (translate (left $0 around)) (translate (right $0 and))))
program generated: (lambda (concat (translate (left $0 around)) (translate (right $0 after))))
program generated: (lambda (concat (translate (left $0 around)) (translate (right $0 opposite))))
program generated: (lambda (concat (translate (left $0 and)) (translate (left $0 turn))))
program generated: (lambda (concat (translate (left $0 and)) (translate (left $0 twice))))
program generated: (lambda (concat (translate (left $0 and)) (translate (left $0 thrice))))
program generated: (lambda (concat (translate (left $0 and)) (translate (left $0 around))))
program generated: (lambda (concat (translate (left $0 and)) (translate (left $0 and))))
program generated: (lambda (concat (translate (left $0 and)) (translate (left $0 after))))
program generated: (lambda (concat (translate (left $0 and)) (translate (left $0 opposite))))
program generated: (lambda (concat (translate (left $0 and)) (translate (right $0 turn))))
program generated: (lambda (concat (translate (left $0 and)) (translate (right $0 twice))))
program generated: (lambda (concat (translate (left $0 and)) (translate (right $0 thrice))))
program generated: (lambda (concat (translate (left $0 and)) (translate (right $0 around))))
program generated: (lambda (concat (translate (left $0 and)) (translate (right $0 and))))
program generated: (lambda (concat (translate (left $0 and)) (translate (right $0 after))))
program generated: (lambda (concat (translate (left $0 and)) (translate (right $0 opposite))))
program generated: (lambda (concat (translate (left $0 after)) (translate (left $0 turn))))
program generated: (lambda (concat (translate (left $0 after)) (translate (left $0 twice))))
program generated: (lambda (concat (translate (left $0 after)) (translate (left $0 thrice))))
program generated: (lambda (concat (translate (left $0 after)) (translate (left $0 around))))
program generated: (lambda (concat (translate (left $0 after)) (translate (left $0 and))))
program generated: (lambda (concat (translate (left $0 after)) (translate (left $0 after))))
program generated: (lambda (concat (translate (left $0 after)) (translate (left $0 opposite))))
program generated: (lambda (concat (translate (left $0 after)) (translate (right $0 turn))))
program generated: (lambda (concat (translate (left $0 after)) (translate (right $0 twice))))
program generated: (lambda (concat (translate (left $0 after)) (translate (right $0 thrice))))
program generated: (lambda (concat (translate (left $0 after)) (translate (right $0 around))))
program generated: (lambda (concat (translate (left $0 after)) (translate (right $0 and))))
program generated: (lambda (concat (translate (left $0 after)) (translate (right $0 after))))
program generated: (lambda (concat (translate (left $0 after)) (translate (right $0 opposite))))
program generated: (lambda (concat (translate (left $0 opposite)) (translate (left $0 turn))))
program generated: (lambda (concat (translate (left $0 opposite)) (translate (left $0 twice))))
program generated: (lambda (concat (translate (left $0 opposite)) (translate (left $0 thrice))))
program generated: (lambda (concat (translate (left $0 opposite)) (translate (left $0 around))))
program generated: (lambda (concat (translate (left $0 opposite)) (translate (left $0 and))))
program generated: (lambda (concat (translate (left $0 opposite)) (translate (left $0 after))))
program generated: (lambda (concat (translate (left $0 opposite)) (translate (left $0 opposite))))
program generated: (lambda (concat (translate (left $0 opposite)) (translate (right $0 turn))))
program generated: (lambda (concat (translate (left $0 opposite)) (translate (right $0 twice))))
program generated: (lambda (concat (translate (left $0 opposite)) (translate (right $0 thrice))))
program generated: (lambda (concat (translate (left $0 opposite)) (translate (right $0 around))))
program generated: (lambda (concat (translate (left $0 opposite)) (translate (right $0 and))))
program generated: (lambda (concat (translate (left $0 opposite)) (translate (right $0 after))))
program generated: (lambda (concat (translate (left $0 opposite)) (translate (right $0 opposite))))
program generated: (lambda (concat (translate (right $0 turn)) (translate (left $0 turn))))
program generated: (lambda (concat (translate (right $0 turn)) (translate (left $0 twice))))
program generated: (lambda (concat (translate (right $0 turn)) (translate (left $0 thrice))))
program generated: (lambda (concat (translate (right $0 turn)) (translate (left $0 around))))
program generated: (lambda (concat (translate (right $0 turn)) (translate (left $0 and))))
program generated: (lambda (concat (translate (right $0 turn)) (translate (left $0 after))))
program generated: (lambda (concat (translate (right $0 turn)) (translate (left $0 opposite))))
program generated: (lambda (concat (translate (right $0 turn)) (translate (right $0 turn))))
program generated: (lambda (concat (translate (right $0 turn)) (translate (right $0 twice))))
program generated: (lambda (concat (translate (right $0 turn)) (translate (right $0 thrice))))
program generated: (lambda (concat (translate (right $0 turn)) (translate (right $0 around))))
program generated: (lambda (concat (translate (right $0 turn)) (translate (right $0 and))))
program generated: (lambda (concat (translate (right $0 turn)) (translate (right $0 after))))
program generated: (lambda (concat (translate (right $0 turn)) (translate (right $0 opposite))))
program generated: (lambda (concat (translate (right $0 twice)) (translate (left $0 turn))))
program generated: (lambda (concat (translate (right $0 twice)) (translate (left $0 twice))))
program generated: (lambda (concat (translate (right $0 twice)) (translate (left $0 thrice))))
program generated: (lambda (concat (translate (right $0 twice)) (translate (left $0 around))))
program generated: (lambda (concat (translate (right $0 twice)) (translate (left $0 and))))
program generated: (lambda (concat (translate (right $0 twice)) (translate (left $0 after))))
program generated: (lambda (concat (translate (right $0 twice)) (translate (left $0 opposite))))
program generated: (lambda (concat (translate (right $0 twice)) (translate (right $0 turn))))
program generated: (lambda (concat (translate (right $0 twice)) (translate (right $0 twice))))
program generated: (lambda (concat (translate (right $0 twice)) (translate (right $0 thrice))))
program generated: (lambda (concat (translate (right $0 twice)) (translate (right $0 around))))
program generated: (lambda (concat (translate (right $0 twice)) (translate (right $0 and))))
program generated: (lambda (concat (translate (right $0 twice)) (translate (right $0 after))))
program generated: (lambda (concat (translate (right $0 twice)) (translate (right $0 opposite))))
program generated: (lambda (concat (translate (right $0 thrice)) (translate (left $0 turn))))
program generated: (lambda (concat (translate (right $0 thrice)) (translate (left $0 twice))))
program generated: (lambda (concat (translate (right $0 thrice)) (translate (left $0 thrice))))
program generated: (lambda (concat (translate (right $0 thrice)) (translate (left $0 around))))
program generated: (lambda (concat (translate (right $0 thrice)) (translate (left $0 and))))
program generated: (lambda (concat (translate (right $0 thrice)) (translate (left $0 after))))
program generated: (lambda (concat (translate (right $0 thrice)) (translate (left $0 opposite))))
program generated: (lambda (concat (translate (right $0 thrice)) (translate (right $0 turn))))
program generated: (lambda (concat (translate (right $0 thrice)) (translate (right $0 twice))))
program generated: (lambda (concat (translate (right $0 thrice)) (translate (right $0 thrice))))
program generated: (lambda (concat (translate (right $0 thrice)) (translate (right $0 around))))
program generated: (lambda (concat (translate (right $0 thrice)) (translate (right $0 and))))
program generated: (lambda (concat (translate (right $0 thrice)) (translate (right $0 after))))
program generated: (lambda (concat (translate (right $0 thrice)) (translate (right $0 opposite))))
program generated: (lambda (concat (translate (right $0 around)) (translate (left $0 turn))))
program generated: (lambda (concat (translate (right $0 around)) (translate (left $0 twice))))
program generated: (lambda (concat (translate (right $0 around)) (translate (left $0 thrice))))
program generated: (lambda (concat (translate (right $0 around)) (translate (left $0 around))))
program generated: (lambda (concat (translate (right $0 around)) (translate (left $0 and))))
program generated: (lambda (concat (translate (right $0 around)) (translate (left $0 after))))
program generated: (lambda (concat (translate (right $0 around)) (translate (left $0 opposite))))
program generated: (lambda (concat (translate (right $0 around)) (translate (right $0 turn))))
program generated: (lambda (concat (translate (right $0 around)) (translate (right $0 twice))))
program generated: (lambda (concat (translate (right $0 around)) (translate (right $0 thrice))))
program generated: (lambda (concat (translate (right $0 around)) (translate (right $0 around))))
program generated: (lambda (concat (translate (right $0 around)) (translate (right $0 and))))
program generated: (lambda (concat (translate (right $0 around)) (translate (right $0 after))))
program generated: (lambda (concat (translate (right $0 around)) (translate (right $0 opposite))))
program generated: (lambda (concat (translate (right $0 and)) (translate (left $0 turn))))
program generated: (lambda (concat (translate (right $0 and)) (translate (left $0 twice))))
program generated: (lambda (concat (translate (right $0 and)) (translate (left $0 thrice))))
program generated: (lambda (concat (translate (right $0 and)) (translate (left $0 around))))
program generated: (lambda (concat (translate (right $0 and)) (translate (left $0 and))))
program generated: (lambda (concat (translate (right $0 and)) (translate (left $0 after))))
program generated: (lambda (concat (translate (right $0 and)) (translate (left $0 opposite))))
program generated: (lambda (concat (translate (right $0 and)) (translate (right $0 turn))))
program generated: (lambda (concat (translate (right $0 and)) (translate (right $0 twice))))
program generated: (lambda (concat (translate (right $0 and)) (translate (right $0 thrice))))
program generated: (lambda (concat (translate (right $0 and)) (translate (right $0 around))))
program generated: (lambda (concat (translate (right $0 and)) (translate (right $0 and))))
program generated: (lambda (concat (translate (right $0 and)) (translate (right $0 after))))
program generated: (lambda (concat (translate (right $0 and)) (translate (right $0 opposite))))
program generated: (lambda (concat (translate (right $0 after)) (translate (left $0 turn))))
program generated: (lambda (concat (translate (right $0 after)) (translate (left $0 twice))))
program generated: (lambda (concat (translate (right $0 after)) (translate (left $0 thrice))))
program generated: (lambda (concat (translate (right $0 after)) (translate (left $0 around))))
program generated: (lambda (concat (translate (right $0 after)) (translate (left $0 and))))
program generated: (lambda (concat (translate (right $0 after)) (translate (left $0 after))))
program generated: (lambda (concat (translate (right $0 after)) (translate (left $0 opposite))))
program generated: (lambda (concat (translate (right $0 after)) (translate (right $0 turn))))
program generated: (lambda (concat (translate (right $0 after)) (translate (right $0 twice))))
program generated: (lambda (concat (translate (right $0 after)) (translate (right $0 thrice))))
program generated: (lambda (concat (translate (right $0 after)) (translate (right $0 around))))
program generated: (lambda (concat (translate (right $0 after)) (translate (right $0 and))))
program generated: (lambda (concat (translate (right $0 after)) (translate (right $0 after))))
program generated: (lambda (concat (translate (right $0 after)) (translate (right $0 opposite))))
program generated: (lambda (concat (translate (right $0 opposite)) (translate (left $0 turn))))
program generated: (lambda (concat (translate (right $0 opposite)) (translate (left $0 twice))))
program generated: (lambda (concat (translate (right $0 opposite)) (translate (left $0 thrice))))
program generated: (lambda (concat (translate (right $0 opposite)) (translate (left $0 around))))
program generated: (lambda (concat (translate (right $0 opposite)) (translate (left $0 and))))
program generated: (lambda (concat (translate (right $0 opposite)) (translate (left $0 after))))
program generated: (lambda (concat (translate (right $0 opposite)) (translate (left $0 opposite))))
program generated: (lambda (concat (translate (right $0 opposite)) (translate (right $0 turn))))
program generated: (lambda (concat (translate (right $0 opposite)) (translate (right $0 twice))))
program generated: (lambda (concat (translate (right $0 opposite)) (translate (right $0 thrice))))
program generated: (lambda (concat (translate (right $0 opposite)) (translate (right $0 around))))
program generated: (lambda (concat (translate (right $0 opposite)) (translate (right $0 and))))
program generated: (lambda (concat (translate (right $0 opposite)) (translate (right $0 after))))
program generated: (lambda (concat (translate (right $0 opposite)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 opposite)))))
totalNumberOfPrograms: 420, 	time: 0.2864952087402344
(python) Launching input -> tout (1 tasks) w/ 1 CPUs. 9.000000 <= MDL < 10.500000. Timeout 49.608953.
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 opposite))))
totalNumberOfPrograms: 28, 	time: 0.8019275665283203
(python) Launching input -> tout (1 tasks) w/ 1 CPUs. 10.500000 <= MDL < 12.000000. Timeout 48.805605.
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda $0) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 turn))) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 twice))) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 thrice))) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 around))) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 and))) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 after))) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (left $1 opposite))) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 turn))) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 twice))) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 thrice))) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 around))) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 and))) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 after))) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda (translate (right $1 opposite))) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 turn)) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 turn)) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 turn)) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 turn)) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 turn)) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 turn)) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 turn)) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 turn)) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 turn)) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 turn)) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 turn)) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 turn)) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 turn)) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 turn)) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 twice)) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 twice)) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 twice)) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 twice)) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 twice)) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 twice)) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 twice)) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 twice)) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 twice)) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 twice)) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 twice)) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 twice)) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 twice)) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 twice)) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 thrice)) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 thrice)) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 thrice)) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 thrice)) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 thrice)) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 thrice)) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 thrice)) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 thrice)) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 thrice)) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 thrice)) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 thrice)) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 thrice)) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 thrice)) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 thrice)) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 around)) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 around)) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 around)) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 around)) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 around)) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 around)) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 around)) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 around)) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 around)) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 around)) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 around)) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 around)) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 around)) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 around)) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 and)) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 and)) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 and)) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 and)) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 and)) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 and)) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 and)) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 and)) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 and)) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 and)) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 and)) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 and)) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 and)) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 and)) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 after)) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 after)) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 after)) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 after)) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 after)) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 after)) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 after)) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 after)) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 after)) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 after)) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 after)) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 after)) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 after)) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 after)) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 opposite)) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 opposite)) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 opposite)) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 opposite)) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 opposite)) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 opposite)) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 opposite)) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 opposite)) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 opposite)) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 opposite)) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 opposite)) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 opposite)) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 opposite)) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (left $1 opposite)) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 turn)) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 turn)) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 turn)) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 turn)) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 turn)) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 turn)) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 turn)) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 turn)) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 turn)) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 turn)) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 turn)) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 turn)) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 turn)) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 turn)) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 twice)) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 twice)) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 twice)) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 twice)) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 twice)) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 twice)) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 twice)) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 twice)) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 twice)) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 twice)) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 twice)) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 twice)) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 twice)) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 twice)) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 thrice)) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 thrice)) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 thrice)) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 thrice)) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 thrice)) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 thrice)) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 thrice)) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 thrice)) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 thrice)) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 thrice)) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 thrice)) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 thrice)) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 thrice)) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 thrice)) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 around)) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 around)) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 around)) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 around)) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 around)) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 around)) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 around)) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 around)) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 around)) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 around)) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 around)) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 around)) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 around)) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 around)) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 and)) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 and)) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 and)) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 and)) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 and)) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 and)) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 and)) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 and)) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 and)) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 and)) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 and)) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 and)) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 and)) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 and)) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 after)) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 after)) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 after)) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 after)) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 after)) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 after)) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 after)) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 after)) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 after)) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 after)) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 after)) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 after)) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 after)) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 after)) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 opposite)) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 opposite)) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 opposite)) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 opposite)) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 opposite)) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 opposite)) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 opposite)) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 opposite)) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 opposite)) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 opposite)) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 opposite)) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 opposite)) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 opposite)) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat (translate (right $1 opposite)) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (concat $0 $0) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (concat $0 $0) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (concat $0 $0) $0)) (translate (left $0 thrice))))
Solved task thrice with program (lambda (apply_fn (lambda (concat (concat $0 $0) $0)) (translate (left $0 thrice))))
dt: 3.695143461227417
program generated: (lambda (apply_fn (lambda (concat (concat $0 $0) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat (concat $0 $0) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat (concat $0 $0) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat (concat $0 $0) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (concat $0 $0) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (concat $0 $0) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (concat $0 $0) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (concat $0 $0) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat (concat $0 $0) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat (concat $0 $0) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat (concat $0 $0) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 turn)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 turn)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 turn)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 turn)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 turn)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 turn)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 turn)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 turn)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 turn)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 turn)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 turn)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 turn)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 turn)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 turn)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 twice)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 twice)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 twice)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 twice)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 twice)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 twice)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 twice)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 twice)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 twice)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 twice)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 twice)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 twice)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 twice)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 twice)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 thrice)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 thrice)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 thrice)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 thrice)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 thrice)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 thrice)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 thrice)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 thrice)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 thrice)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 thrice)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 thrice)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 thrice)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 thrice)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 thrice)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 around)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 around)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 around)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 around)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 around)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 around)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 around)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 around)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 around)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 around)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 around)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 around)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 around)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 around)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 and)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 and)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 and)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 and)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 and)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 and)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 and)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 and)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 and)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 and)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 and)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 and)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 and)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 and)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 after)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 after)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 after)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 after)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 after)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 after)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 after)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 after)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 after)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 after)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 after)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 after)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 after)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 after)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 opposite)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 opposite)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 opposite)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 opposite)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 opposite)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 opposite)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 opposite)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 opposite)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 opposite)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 opposite)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 opposite)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 opposite)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 opposite)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (left $1 opposite)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 turn)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 turn)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 turn)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 turn)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 turn)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 turn)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 turn)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 turn)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 turn)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 turn)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 turn)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 turn)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 turn)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 turn)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 twice)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 twice)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 twice)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 twice)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 twice)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 twice)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 twice)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 twice)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 twice)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 twice)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 twice)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 twice)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 twice)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 twice)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 thrice)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 thrice)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 thrice)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 thrice)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 thrice)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 thrice)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 thrice)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 thrice)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 thrice)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 thrice)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 thrice)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 thrice)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 thrice)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 thrice)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 around)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 around)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 around)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 around)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 around)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 around)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 around)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 around)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 around)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 around)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 around)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 around)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 around)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 around)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 and)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 and)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 and)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 and)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 and)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 and)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 and)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 and)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 and)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 and)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 and)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 and)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 and)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 and)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 after)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 after)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 after)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 after)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 after)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 after)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 after)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 after)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 after)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 after)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 after)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 after)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 after)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 after)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 opposite)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 opposite)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 opposite)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 opposite)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 opposite)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 opposite)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 opposite)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 opposite)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 opposite)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 opposite)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 opposite)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 opposite)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 opposite)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (translate (right $1 opposite)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (concat $0 $0))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (concat $0 $0))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (concat $0 $0))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (concat $0 $0))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (concat $0 $0))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (concat $0 $0))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (concat $0 $0))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (concat $0 $0))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (concat $0 $0))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (concat $0 $0))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (concat $0 $0))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (concat $0 $0))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (concat $0 $0))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (concat $0 $0))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda (concat $0 $0)) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 turn))) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 turn))) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 turn))) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 turn))) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 turn))) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 turn))) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 turn))) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 turn))) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 turn))) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 turn))) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 turn))) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 turn))) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 turn))) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 turn))) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 twice))) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 twice))) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 twice))) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 twice))) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 twice))) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 twice))) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 twice))) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 twice))) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 twice))) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 twice))) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 twice))) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 twice))) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 twice))) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 twice))) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 thrice))) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 thrice))) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 thrice))) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 thrice))) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 thrice))) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 thrice))) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 thrice))) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 thrice))) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 thrice))) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 thrice))) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 thrice))) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 thrice))) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 thrice))) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 thrice))) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 around))) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 around))) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 around))) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 around))) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 around))) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 around))) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 around))) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 around))) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 around))) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 around))) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 around))) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 around))) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 around))) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 around))) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 and))) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 and))) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 and))) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 and))) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 and))) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 and))) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 and))) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 and))) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 and))) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 and))) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 and))) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 and))) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 and))) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 and))) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 after))) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 after))) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 after))) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 after))) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 after))) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 after))) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 after))) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 after))) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 after))) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 after))) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 after))) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 after))) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 after))) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 after))) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 opposite))) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 opposite))) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 opposite))) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 opposite))) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 opposite))) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 opposite))) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 opposite))) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 opposite))) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 opposite))) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 opposite))) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 opposite))) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 opposite))) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 opposite))) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (left $2 opposite))) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 turn))) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 turn))) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 turn))) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 turn))) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 turn))) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 turn))) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 turn))) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 turn))) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 turn))) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 turn))) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 turn))) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 turn))) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 turn))) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 turn))) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 twice))) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 twice))) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 twice))) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 twice))) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 twice))) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 twice))) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 twice))) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 twice))) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 twice))) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 twice))) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 twice))) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 twice))) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 twice))) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 twice))) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 thrice))) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 thrice))) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 thrice))) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 thrice))) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 thrice))) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 thrice))) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 thrice))) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 thrice))) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 thrice))) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 thrice))) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 thrice))) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 thrice))) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 thrice))) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 thrice))) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 around))) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 around))) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 around))) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 around))) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 around))) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 around))) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 around))) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 around))) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 around))) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 around))) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 around))) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 around))) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 around))) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 around))) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 and))) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 and))) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 and))) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 and))) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 and))) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 and))) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 and))) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 and))) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 and))) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 and))) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 and))) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 and))) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 and))) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 and))) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 after))) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 after))) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 after))) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 after))) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 after))) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 after))) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 after))) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 after))) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 after))) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 after))) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 after))) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 after))) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 after))) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 after))) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 opposite))) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 opposite))) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 opposite))) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 opposite))) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 opposite))) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 opposite))) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 opposite))) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 opposite))) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 opposite))) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 opposite))) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 opposite))) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 opposite))) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 opposite))) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (translate (right $2 opposite))) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 turn)) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 turn)) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 turn)) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 turn)) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 turn)) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 turn)) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 twice)) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 twice)) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 twice)) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 twice)) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 twice)) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 twice)) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 around)) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 around)) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 around)) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 around)) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 around)) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 around)) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 around)) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 around)) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 around)) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 around)) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 and)) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 and)) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 and)) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 and)) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 and)) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 and)) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 and)) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 and)) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 and)) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 and)) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 after)) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 after)) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 after)) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 after)) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 after)) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 after)) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 after)) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 after)) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 after)) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 after)) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (left $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 turn)) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 turn)) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 turn)) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 turn)) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 turn)) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 turn)) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 twice)) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 twice)) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 twice)) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 twice)) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 twice)) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 twice)) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 around)) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 around)) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 around)) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 around)) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 around)) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 around)) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 around)) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 around)) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 around)) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 around)) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 and)) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 and)) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 and)) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 and)) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 and)) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 and)) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 and)) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 and)) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 and)) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 and)) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 after)) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 after)) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 after)) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 after)) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 after)) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 after)) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 after)) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 after)) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 after)) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 after)) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (concat (translate (right $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (concat $0 $0)) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (concat $0 $0)) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (concat $0 $0)) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (concat $0 $0)) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (concat $0 $0)) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (concat $0 $0)) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 turn))))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 twice))))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 thrice))))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 around))))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 and))))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 after))))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 opposite))))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 turn))))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 twice))))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 thrice))))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 around))))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 and))))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 after))))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 opposite))))))
totalNumberOfPrograms: 1638, 	time: 3.6069693565368652
(python) Launching input -> tout (1 tasks) w/ 1 CPUs. 12.000000 <= MDL < 13.500000. Timeout 45.194959.
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (left $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (concat (translate (right $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (left $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (concat (translate (right $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 thrice)) (translate (left $0 thrice)))))
Solved task thrice with program (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 thrice)) (translate (left $0 thrice)))))
dt: 5.129822731018066
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (left $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (concat (translate (right $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (left $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (concat (translate (right $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (left $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (concat (translate (right $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (left $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (concat (translate (right $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (left $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (concat (translate (right $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (left $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (concat (translate (right $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (left $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (concat (translate (right $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (left $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (concat (translate (right $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (left $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (concat (translate (right $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (left $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (concat (translate (right $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (left $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (concat (translate (right $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (left $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 turn)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 turn)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 turn)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 turn)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 turn)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 turn)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 turn)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 turn)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 turn)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 turn)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 turn)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 turn)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 turn)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 turn)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 twice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 twice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 twice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 twice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 twice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 twice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 twice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 twice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 twice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 twice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 twice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 twice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 twice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 twice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 thrice)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 thrice)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 thrice)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 thrice)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 thrice)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 thrice)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 thrice)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 thrice)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 thrice)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 thrice)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 thrice)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 thrice)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 thrice)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 thrice)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 around)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 around)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 around)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 around)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 around)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 around)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 around)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 around)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 around)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 around)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 around)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 around)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 around)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 around)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 and)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 and)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 and)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 and)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 and)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 and)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 and)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 and)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 and)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 and)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 and)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 and)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 and)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 and)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 after)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 after)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 after)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 after)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 after)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 after)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 after)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 after)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 after)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 after)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 after)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 after)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 after)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 after)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 opposite)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 opposite)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 opposite)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 opposite)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 opposite)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 opposite)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 opposite)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 opposite)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 opposite)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 opposite)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 opposite)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 opposite)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 opposite)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (concat (translate (right $0 opposite)) (translate (right $0 opposite)))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 turn)) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 twice)) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 thrice)) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 around)) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 and)) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 after)) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (left $0 opposite)) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 turn)) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 twice)) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 thrice)) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 around)) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 and)) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 after)) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (concat (translate (right $0 opposite)) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $0) $0) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $0) $0) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $0) $0) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $0) $0) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $0) $0) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $0) $0) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $0) $0) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $0) $0) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $0) $0) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $0) $0) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $0) $0) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $0) $0) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $0) $0) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $0) $0) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $1) $0) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $1) $0) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $1) $0) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $1) $0) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $1) $0) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $1) $0) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $1) $0) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $1) $0) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $1) $0) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $1) $0) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $1) $0) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $1) $0) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $1) $0) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat (apply_fn (lambda $1) $0) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $0) $0))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $0) $0))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $0) $0))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $0) $0))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $0) $0))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $0) $0))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $0) $0))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $0) $0))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $0) $0))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $0) $0))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $0) $0))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $0) $0))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $0) $0))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $0) $0))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $1) $0))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $1) $0))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $1) $0))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $1) $0))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $1) $0))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $1) $0))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $1) $0))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $1) $0))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $1) $0))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $1) $0))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $1) $0))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $1) $0))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $1) $0))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (concat $0 (apply_fn (lambda $1) $0))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $0)) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $0)) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $0)) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $0)) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $0)) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $0)) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $0)) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $0)) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $0)) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $0)) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $0)) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $0)) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $0)) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $0)) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $1)) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $1)) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $1)) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $1)) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $1)) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $1)) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $1)) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $1)) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $1)) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $1)) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $1)) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $1)) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $1)) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $0 $1)) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $0)) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $0)) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $0)) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $0)) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $0)) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $0)) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $0)) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $0)) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $0)) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $0)) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $0)) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $0)) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $0)) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $0)) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $1)) $0)) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $1)) $0)) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $1)) $0)) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $1)) $0)) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $1)) $0)) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $1)) $0)) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $1)) $0)) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $1)) $0)) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $1)) $0)) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $1)) $0)) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $1)) $0)) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $1)) $0)) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $1)) $0)) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda (concat $1 $1)) $0)) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 turn)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 turn)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 turn)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 turn)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 turn)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 turn)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 turn)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 turn)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 turn)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 turn)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 turn)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 turn)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 turn)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 turn)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 twice)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 twice)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 twice)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 twice)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 twice)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 twice)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 twice)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 twice)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 twice)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 twice)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 twice)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 twice)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 twice)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 twice)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 thrice)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 thrice)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 thrice)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 thrice)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 thrice)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 thrice)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 thrice)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 thrice)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 thrice)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 thrice)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 thrice)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 thrice)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 thrice)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 thrice)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 around)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 around)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 around)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 around)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 around)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 around)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 around)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 around)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 around)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 around)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 around)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 around)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 around)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 around)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 and)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 and)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 and)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 and)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 and)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 and)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 and)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 and)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 and)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 and)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 and)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 and)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 and)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 and)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 after)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 after)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 after)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 after)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 after)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 after)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 after)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 after)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 after)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 after)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 after)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 after)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 after)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 after)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 opposite)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 opposite)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 opposite)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 opposite)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 opposite)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 opposite)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 opposite)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 opposite)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 opposite)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 opposite)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 opposite)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 opposite)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 opposite)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (left $1 opposite)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 turn)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 turn)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 turn)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 turn)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 turn)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 turn)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 turn)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 turn)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 turn)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 turn)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 turn)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 turn)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 turn)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 turn)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 twice)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 twice)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 twice)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 twice)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 twice)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 twice)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 twice)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 twice)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 twice)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 twice)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 twice)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 twice)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 twice)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 twice)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 thrice)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 thrice)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 thrice)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 thrice)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 thrice)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 thrice)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 thrice)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 thrice)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 thrice)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 thrice)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 thrice)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 thrice)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 thrice)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 thrice)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 around)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 around)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 around)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 around)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 around)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 around)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 around)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 around)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 around)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 around)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 around)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 around)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 around)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 around)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 and)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 and)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 and)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 and)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 and)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 and)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 and)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 and)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 and)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 and)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 and)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 and)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 and)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 and)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 after)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 after)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 after)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 after)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 after)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 after)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 after)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 after)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 after)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 after)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 after)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 after)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 after)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 after)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 opposite)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 opposite)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 opposite)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 opposite)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 opposite)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 opposite)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 opposite)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 opposite)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 opposite)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 opposite)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 opposite)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 opposite)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 opposite)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (translate (right $1 opposite)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (concat $0 $0))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (concat $0 $0))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (concat $0 $0))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (concat $0 $0))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (concat $0 $0))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (concat $0 $0))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (concat $0 $0))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (concat $0 $0))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (concat $0 $0))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (concat $0 $0))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (concat $0 $0))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (concat $0 $0))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (concat $0 $0))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (concat $0 $0))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) $0))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) $0))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) $0))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) $0))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) $0))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) $0))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) $0))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) $0))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) $0))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) $0))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) $0))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) $0))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) $0))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $0) $0))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $1) $0))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $1) $0))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $1) $0))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $1) $0))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $1) $0))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $1) $0))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $1) $0))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $1) $0))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $1) $0))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $1) $0))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $1) $0))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $1) $0))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $1) $0))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) (apply_fn (lambda $1) $0))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $0) $0)) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 turn)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 turn)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 turn)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 turn)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 turn)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 turn)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 turn)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 turn)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 turn)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 turn)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 turn)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 turn)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 turn)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 turn)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 twice)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 twice)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 twice)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 twice)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 twice)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 twice)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 twice)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 twice)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 twice)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 twice)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 twice)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 twice)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 twice)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 twice)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 thrice)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 thrice)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 thrice)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 thrice)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 thrice)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 thrice)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 thrice)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 thrice)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 thrice)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 thrice)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 thrice)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 thrice)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 thrice)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 thrice)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 around)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 around)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 around)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 around)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 around)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 around)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 around)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 around)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 around)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 around)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 around)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 around)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 around)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 around)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 and)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 and)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 and)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 and)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 and)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 and)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 and)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 and)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 and)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 and)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 and)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 and)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 and)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 and)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 after)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 after)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 after)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 after)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 after)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 after)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 after)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 after)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 after)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 after)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 after)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 after)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 after)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 after)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 opposite)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 opposite)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 opposite)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 opposite)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 opposite)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 opposite)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 opposite)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 opposite)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 opposite)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 opposite)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 opposite)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 opposite)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 opposite)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (left $1 opposite)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 turn)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 turn)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 turn)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 turn)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 turn)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 turn)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 turn)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 turn)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 turn)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 turn)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 turn)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 turn)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 turn)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 turn)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 twice)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 twice)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 twice)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 twice)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 twice)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 twice)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 twice)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 twice)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 twice)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 twice)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 twice)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 twice)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 twice)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 twice)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 thrice)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 thrice)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 thrice)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 thrice)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 thrice)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 thrice)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 thrice)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 thrice)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 thrice)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 thrice)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 thrice)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 thrice)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 thrice)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 thrice)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 around)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 around)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 around)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 around)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 around)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 around)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 around)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 around)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 around)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 around)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 around)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 around)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 around)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 around)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 and)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 and)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 and)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 and)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 and)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 and)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 and)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 and)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 and)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 and)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 and)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 and)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 and)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 and)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 after)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 after)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 after)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 after)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 after)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 after)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 after)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 after)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 after)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 after)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 after)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 after)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 after)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 after)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 opposite)))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 opposite)))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 opposite)))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 opposite)))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 opposite)))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 opposite)))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 opposite)))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 opposite)))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 opposite)))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 opposite)))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 opposite)))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 opposite)))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 opposite)))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (translate (right $1 opposite)))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (concat $0 $0))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (concat $0 $0))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (concat $0 $0))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (concat $0 $0))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (concat $0 $0))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (concat $0 $0))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (concat $0 $0))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (concat $0 $0))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (concat $0 $0))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (concat $0 $0))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (concat $0 $0))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (concat $0 $0))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (concat $0 $0))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (concat $0 $0))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $0) $0))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $0) $0))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $0) $0))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $0) $0))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $0) $0))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $0) $0))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $0) $0))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $0) $0))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $0) $0))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $0) $0))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $0) $0))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $0) $0))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $0) $0))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $0) $0))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $1) $0))) (translate (left $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $1) $0))) (translate (left $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $1) $0))) (translate (left $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $1) $0))) (translate (left $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $1) $0))) (translate (left $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $1) $0))) (translate (left $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $1) $0))) (translate (left $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $1) $0))) (translate (right $0 turn))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $1) $0))) (translate (right $0 twice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $1) $0))) (translate (right $0 thrice))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $1) $0))) (translate (right $0 around))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $1) $0))) (translate (right $0 and))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $1) $0))) (translate (right $0 after))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) (apply_fn (lambda $1) $0))) (translate (right $0 opposite))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (apply_fn (lambda $0) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (apply_fn (lambda $0) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (apply_fn (lambda $0) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (apply_fn (lambda $0) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (apply_fn (lambda $0) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (apply_fn (lambda $0) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (apply_fn (lambda $0) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (apply_fn (lambda $0) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (apply_fn (lambda $0) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (apply_fn (lambda $0) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (apply_fn (lambda $0) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (apply_fn (lambda $0) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (apply_fn (lambda $0) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda (apply_fn (lambda $1) $0)) (apply_fn (lambda $0) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 opposite)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 turn)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 twice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 thrice)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 around)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 and)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 after)))))
program generated: (lambda (apply_fn (lambda $0) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 opposite)))))
totalNumberOfPrograms: 6132, 	time: 14.910562753677368
(python) Launching input -> tout (1 tasks) w/ 1 CPUs. 13.500000 <= MDL < 15.000000. Timeout 30.273066.
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 turn))))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 twice))))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 thrice))))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 around))))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 and))))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 after))))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 opposite))))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 turn))))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 twice))))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 thrice))))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 around))))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 and))))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 after))))))
program generated: (lambda (concat (translate (left $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 opposite))))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 turn))))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 twice))))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 thrice))))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 around))))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 and))))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 after))))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 opposite))))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 turn))))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 twice))))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 thrice))))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 around))))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 and))))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 after))))))
program generated: (lambda (concat (translate (left $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 opposite))))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice)))))
Solved task thrice with program (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice)))))
dt: 21.509293794631958
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 turn))))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 twice))))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 thrice))))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 around))))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 and))))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 after))))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 opposite))))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 turn))))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 twice))))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 thrice))))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 around))))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 and))))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 after))))))
program generated: (lambda (concat (translate (left $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 opposite))))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 turn))))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 twice))))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 thrice))))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 around))))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 and))))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 after))))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 opposite))))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 turn))))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 twice))))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 thrice))))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 around))))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 and))))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 after))))))
program generated: (lambda (concat (translate (left $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 opposite))))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 turn))))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 twice))))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 thrice))))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 around))))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 and))))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 after))))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 opposite))))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 turn))))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 twice))))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 thrice))))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 around))))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 and))))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 after))))))
program generated: (lambda (concat (translate (left $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 opposite))))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 turn))))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 twice))))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 thrice))))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 around))))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 and))))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 after))))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 opposite))))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 turn))))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 twice))))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 thrice))))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 around))))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 and))))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 after))))))
program generated: (lambda (concat (translate (left $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 opposite))))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 turn))))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 twice))))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 thrice))))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 around))))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 and))))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 after))))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 opposite))))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 turn))))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 twice))))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 thrice))))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 around))))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 and))))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 after))))))
program generated: (lambda (concat (translate (left $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 opposite))))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 turn))))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 twice))))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 thrice))))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 around))))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 and))))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 after))))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 opposite))))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 turn))))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 twice))))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 thrice))))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 around))))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 and))))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 after))))))
program generated: (lambda (concat (translate (right $0 turn)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 opposite))))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 turn))))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 twice))))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 thrice))))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 around))))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 and))))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 after))))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 opposite))))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 turn))))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 twice))))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 thrice))))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 around))))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 and))))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 after))))))
program generated: (lambda (concat (translate (right $0 twice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 opposite))))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 turn))))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 twice))))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 thrice))))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 around))))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 and))))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 after))))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 opposite))))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 turn))))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 twice))))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 thrice))))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 around))))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 and))))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 after))))))
program generated: (lambda (concat (translate (right $0 thrice)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 opposite))))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 turn))))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 twice))))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 thrice))))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 around))))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 and))))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 after))))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 opposite))))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 turn))))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 twice))))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 thrice))))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 around))))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 and))))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 after))))))
program generated: (lambda (concat (translate (right $0 around)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 opposite))))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 turn))))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 twice))))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 thrice))))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 around))))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 and))))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 after))))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 opposite))))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 turn))))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 twice))))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 thrice))))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 around))))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 and))))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 after))))))
program generated: (lambda (concat (translate (right $0 and)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 opposite))))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 turn))))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 twice))))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 thrice))))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 around))))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 and))))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 after))))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 opposite))))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 turn))))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 twice))))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 thrice))))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 around))))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 and))))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 after))))))
program generated: (lambda (concat (translate (right $0 after)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 opposite))))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (left $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 turn)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 twice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 thrice)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 around)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 and)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 after)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda (apply_fn (lambda $1) $0)) (translate (right $0 opposite)))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 turn))))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 twice))))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 thrice))))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 around))))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 and))))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 after))))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (left $0 opposite))))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 turn))))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 twice))))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 thrice))))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 around))))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 and))))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 after))))))
program generated: (lambda (concat (translate (right $0 opposite)) (apply_fn (lambda $0) (apply_fn (lambda $0) (translate (right $0 opposite))))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 turn))) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 twice))) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 thrice))) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 around))) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 and))) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 after))) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (left $1 opposite))) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 turn))) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 twice))) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 thrice))) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 around))) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 and))) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 after))) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (translate (right $1 opposite))) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (left $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 turn))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 twice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 thrice))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 around))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 around))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 around))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 around))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 around))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 around))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 around))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 around))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 around))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 around))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 around))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 around))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 around))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 around))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 and))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 and))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 and))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 and))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 and))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 and))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 and))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 and))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 and))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 and))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 and))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 and))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 and))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 and))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 after))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 after))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 after))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 after))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 after))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 after))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 after))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 after))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 after))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 after))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 after))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 after))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 after))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 after))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite))) (translate (left $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite))) (translate (left $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite))) (translate (left $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite))) (translate (left $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite))) (translate (left $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite))) (translate (left $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite))) (translate (left $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite))) (translate (right $0 turn))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite))) (translate (right $0 twice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite))) (translate (right $0 thrice))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite))) (translate (right $0 around))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite))) (translate (right $0 and))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite))) (translate (right $0 after))))
program generated: (lambda (concat (apply_fn (lambda (concat $0 $0)) (translate (right $0 opposite))) (translate (right $0 opposite))))
program generated: (lambda (concat (apply_fn (lambda (apply_fn (lambda $0) $0)) (translate (left $0 turn))) (translate (left $0 turn))))
totalNumberOfPrograms: 6469, 	time: 32.23161482810974
We enumerated this many programs, for each task:
	 [14715]
Generative model enumeration results:
HIT thrice w/ (lambda (apply_fn (lambda (concat $0 (concat $0 $0))) (translate (left $0 thrice)))) ; log prior = -11.767754 ; log likelihood = 0.000000
Hits 1/1 tasks
Average description length of a program solving a task: 11.767754 nats
Generative model average:  4 sec.	median: 4 	max: 4 	standard deviation 0
Currently using this much memory: 85798912
Frontiers discovered top down: 1
Total frontiers: 1
Skipping consolidation.
ecIterator count 0
